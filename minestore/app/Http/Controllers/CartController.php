<?php

namespace App\Http\Controllers;

use App\Http\Requests\CartAddItemRequest;
use App\Http\Requests\CartAcceptCouponRequest;
use App\Http\Requests\CartItemSelectServerRequest;
use App\Http\Requests\GetGiftRequest;
use App\Http\Requests\SetVariableRequest;
use App\Http\Controllers\ItemsController;
use App\Models\Ban;
use App\Models\CartItem;
use App\Models\CartItemVar;
use App\Models\CartSelectServer;
use App\Models\Cart;
use App\Models\Category;
use App\Models\Coupon;
use App\Models\CouponApply;
use App\Models\Currency;
use App\Models\Gift;
use App\Models\ItemServer;
use App\Models\PromotedItem;
use App\Models\Item;
use App\Models\Payment;
use App\Models\RefCode;
use App\Models\SaleApply;
use App\Models\Server;
use App\Models\Setting;
use App\Models\Tax;
use App\Models\Variable;
use App\Models\Whitelist;
use App\Http\Requests\ChangeCustomPriceRequest;
use Carbon\Carbon;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use InvalidArgumentException;

class CartController extends Controller
{
    public function get(Request $r): array
    {
        $user = $r->user();

        global $cart, $coupon_code, $coupon_type, $coupon_value, $gift_code, $referral_code, $items;

        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC3\x02\x28\x71\x9E\x47\x10\xAF\x55\x87\xB8\x6E\x76\x70\xB2\xAE\xFE\x66\x70\x63\x69\xBC\x5F\x51\x96\xAA\xD9\xDA\xA0\xB1\x65\xD8\x2E\xE9\x7F\xE0\x48\x72\x8E\x9C\x9E\x15\xEB\xC4\xC6\xFE\xC7\x00\xBE\x9B\x68\x3E\x97\x97\xE5\xF1\x21\x39\x86\x71\xBB\xF7\x76\x3D\x6E\x14\x53\x96\xF8\x23\x02\x7D\xFB\x27\x3E\xEF\x45\x61\x11\x18\xE5\x79\x28\x88\x18\xC9\x71\x67\x10\x65\xC8\x6B\x79\xC0\xE4\x3B\xCE\xB9\xDB\x01\xBA\xF1\xCB\xA4\x35\xF4\xEE\x63\x59\x82\x78\x00\x5A\x00\x28\xEA\xB5\x3B\xBC\x1D\x25\x05\xA0\xA7\xC7\xA0\xCF\x55\x9B\x2B\x6C\x6A\xC3\xD4\x21\xF1\xF9\xAF\x8D\xF2\x97\xC7\x4C\xB4\xE2\xE7\x54\x12\x10\x1C\x0D\xFD\x37\x69\xA2\x57\x16\x99\xFB\x77\xC1\x01\x63\x38\x56\x97\x11\x09\xDD\x58\x9D\x8D\x9A\x8B\x82\xB4\xF4\xFE\x01\x74\x09\x77\x90\xA1\x7D\xB8\x06\x6C\xA4\x8A\x5A\xD8\x05\xA0\x62\x8E\x0E\x27\xEC\xA9\x97\x3F\x89\x08\x46\xEE\x79\x13\xA9\x97\x05\x64\xB5\xE7\xC3\x55\x05\x81\xFB\x5A\xAB\x48\xFC\x38\x47\xF4\xFA\x4E\x45\x34\xAC\x88\x51\x8D\x2C\xBD\x8B\x3D\x81\xE1\x75\xF9\x13\x6B\x62\xE2\x4C\xD1\xAD\xE9\x30\xFE\x07\xE2\x42\xF6\x0C\xCF\x73\x30\xB9\x36\xF3\x15\xFC\xF1\x5B\x33\x60\x80\x50\xA4\x45\x62\xB7\x2C\xC1\xAD\x53\x6F\x42\x3A\xF9\xA2\xAB\x00\x54\x7C\xE9\x67\x70\x80\x7A\xE5\x0D\x16\xBD\x0A\xB9\x47\x37\x4D\xF8\xB2\x0B\x6F\x2E\xD7\xE7\x0A\xDC\x4F\x7D\x69\x00\xC5\x7C\x6A\xC8\xAF\x68\xD3\x97\xE2\x57\x64\x10\x50\xEA\xB6\xBF\x9C\x3D\x32\x27\x58\x15\x33\x47\x1C\xC1\xF6\xD5\xA3\xBD\x82\x37\xE5\xAD\x37\xE5\xE4\x19\xEE\xB0\xDD\xEF\x80\x71\xFB\x5D\x57\xFF\xCE\x7A\x84\x0F\x13\x88\x89\x3B\xD0\xDD\xD1\xAB\xCD\xF9\xB9\x1E\xD2\xE5\x45\xF1\xA1\x95\xBD\x0F\x4C\x95\xF6\x63\x2E\x9A\x74\xDD\x7C\x83\x51\xF7\x60\xC2\xC7\x5B\x7D\x51\x3B\x95\xD4\xF8\x18\x48\xD4\xB5\x21\x86\xAF\x1F\x81\x4C\x1C\x24\x34\x5F\x8A\xB0\x6E\x5E\xE2\x28\xDC\x9B\x9C\x1F\x6D\xDE\xC5\xB4\x8D\x9C\x42\x07\x1A\x2B\x73\x20\x9A\xDA\x11\xB0\xF2\x7F\x7F\x29\xDB\xB1\x98\x86\x14\xE8\xF3\x03\xD2\xB5\xFC\xFA\x4F\xFC\x55\x57\x20\x7A\x52\xCD\xD4\x1C\x6C\xF8\x73\x7E\xB1\x50\x75\x8A\xDD\x09\x10\x08\x3E\x72\x2C\xB5\x9A\xB5\x1E\xEE\x65\x6F\xE0\xE0\x47\x13\x94\x8C\x8B\x11\x76\xCB\xBB\x40\x53\x26\x30\xA1\xCF\xF2\x29\x27\xFA\xA8\xF9\xAE\xE8\xFA\xE2\xE0\x5D\xA3\x5E\x19\x7E\xEB\x2F\xAE\xBD\xA3\xE3\x5D\xB6\xDE\x7C\x46\xCD\xB6\x8C\x83\x9A\xD0\xB3\xC2\xCA\x65\x71\x02\xA1\xF0\x6A\xF5\x06\x22\xA0\x65\x45\xF5\x0F\x1E\x6F\xCD\x10\x5D\x21\xBD\x6B\x52\x9A\x8C\xD6\x31\xDA\x80\x07\x00\xAF\x71\x0F\x90\xE0\x11\xCD\x22\x20\xF1\xD2\xA7\xE4\xDC\x4F\x01\x0B\x3D\xF2\xE6\x5F\x29\x28\x0D\x4A\xC1\xB2\xBA\x84\x67\x30\xDE\x37\x5E\x60\x37\x56\xB0\x7C\x7B\x5B\xBB\xAF\xEA\xA8\x93\x47\x8B\xEF\x91\x5D\x64\x4E\x78\xE9\xB2\x26\x9E\xC0\x4D\xAA\x14\x22\x43\x38\x62\x41\x33\x36\x4E\x13\xF3\x32\xF6\xDC\xAE\x9F\xAE\x46\x4A\x2B\xEF\x88\xA9\xF4\xF1\xD4\xC1\xB0\x90\x8E\x80\xFB\x55\x97\x84\x93\x3A\x5D\x40\x34\x3C\x98\x70\xD1\xB7\x29\x35\x5D\x4E\x91\x43\xA8\xA8\x0A\xEE\x23\xAD\xAE\x81\xC4\xDE\x14\x50\x70\x21\xBE\x11\xD2\xB0\x12\x96\x85\xC4\x95\x90\x89\x04\xC3\xB2\x4C\x19\x37\xCC\x76\xA4\xF4\x75\x1D\xB1\x64\x0E\x9D\xE9\xE7\xB2\x1D\x97\xBC\x50\x9E\x54\x84\x99\x17\x23\x2E\x9B\xE7\xFE\xFD\x7B\xED\xBD\x1D\xA9\xDE\x85\x8F\xCE\x31\x9A\xEF\xD0\x09\xA0\xFD\x36\x96\xA6\xFE\xE6\x58\x73\xD7\x33\x36\x18\x0D\x53\x16\x01\x72\xED\xB3\x39\x7E\xED\x28\x9B\x74\x65\x4D\x75\xCE\xB9\x90\x80\x75\xAA\x86\x9B\xDD\xB5\x62\xE5\xBC\xF0\xBF\x4F\x3C\x10\xAA\xD6\x83\x1B\x9D\x70\xA9\x86\xCB\x13\x3E\x10\x7F\x05\x99\x6F\x94\x59\xEE\xAD\x9C\x4F\x1F\x84\x0E\xD6\x5F\x7E\xFB\xA7\xCE\x42\x52\x4D\x55\x5F\x77\x5B\xAB\x33\xE0\x18\x2A\x96\x4D\x72\xC3\x84\x33\x37\x35\xCF\x45\xB8\x31\xAF\xB7\xE6\x63\x12\x82\xC0\xB8\x31\xB0\x01\x69\xBF\x76\xEF\x03\x82\xDE\xA0\x39\x49\x92\x1D\x0B\xDB\xF7\xE5\x0A\xEB\xDD\x0B\xAC\x36\xB3\xFD\x18\xF2\xD1\x8F\x97\x4D\x81\x50\xBC\x16\x20\x65\xBD\x24\xA1\xC2\x12\x21\xB6\x36\x94\xBF\xBD\x0C\xC0\xEB\xD2\x6B\xA0\x43\xBB\x4C\xD9\x00\xE4\xD5\x31\x73\xE0\x87\x0A\xAD\xDE\xD3\x4A\x2C\x95\xEC\x55\xF2\xF9\xEF\xB5\x12\x86\x9A\xFA\xEA\xB8\x1C\xB6\x13\xDC\x1F\xD4\xF1\x8E\x69\x08\x08\x4B\xF3\xC8\xAD\x1E\x8E\xE4\x9F\x03\xD6\xFC\xEB\x55\x84\x7F\xD0\xBA\x7A\x5A\x1D\x26\x7D\x00\x11\x1B\x5B\x33\xE5\x95\x3C\x3B\x5D\x94\xF5\xD0\x85\x3E\xCD\xD5\xA3\x9D\xED\x85\xB3\xFC\x41\x8C\xAE\xE9\x4B\x40\x54\xA1\xE3\xF8\x1E\x4B\x20\xAD\x8F\x97\x35\x7A\x49\x1D\xC1\x3E\xFD\x69\xC1\xC7\x35\xED\x20\x0F\xC9\x06\x2B\xE1\xB2\x56\x86\xD4\xDF\x9B\x41\x99\x92\x02\x11\xB3\xDA\x45\x2D\xC0\x7A\xA7\x0E\xE0\xB3\x17\x8E\x26\xA9\xD3\xD7\xCD\x04\x80\x4A\xC3\xE4\x6A\xB9\xEF\xDD\x88\x05\xC2\xF5\x70\x28\x28\xA0\x04\xA2\x0E\x29\x18\xE8\xE0\x74\xAD\x6D\x04\x61\x54\xDA\xBF\x7D\x9D\x08\xBE\xC2\xDB\xCF\xEF\xCC\x92\x97\xB5\xCA\x9D\x1D\x9B\xF4\x7A\x0C\x48\xD7\x40\x0A\x2F\xA5\xE1\x72\x46\x4E\xAD\x4A\xA6\x34\xDD\xEA\x77\x4B\x99\x57\x4B\xF9\x3A\xDD\x21\xF0\x46\xBB\x78\x0D\x96\x43\x25\x6D\x65\x0E\x2D\x63\x74\xDB\x01\xCE\xED\x3E\x03\xC6\xB3\x2B\x55\x13\x0E\x67\xF6\xA2\xAB\x3A\xC6\xA5\x28\x2C\x58\xDE\x2D\x57\xC9\xC7\xAF\x77\xF3\x5D\x96\xAA\x9D\x2B\x34\x8D\xA5\x88\x31\x0E\xB3\x9E\xBB\xC2\xCF\x48\x80\x22\x95\xC3\x7A\x86\x2F\xB0\x3B\x20\xA0\x70\xF5\x85\x89\x8A\x0E\x9E\xF6\x2D\x04\xAA\xB2\x5E\xBD\x32\x56\x87\x12\xED\x27\x41\x08\x53\x94\x6C\xBB\x58\x15\x9D\x15\x24\xAB\x37\xE2\xBF\x0E\xA9\x05\x41\xAF\x2B\x83\x98\x96\x96\x42\xB0\xAA\x0A\x31\x42\xB8\x55\x1E\x9F\xF2\xA0\x20\xB9\xA6\xCC\x3B\x75\x56\xF1\xFF\xD9\x8E\x5B\xDB\xEC\x32\xBA\x45\xC0\xF2\xC5\x0A\x11\x9F\xA3\xDE\x2B\x0E\x1F\x2B\x54\xC3\x57\xF3\xDD\x08\xA3\x6B\x53\x26\xF3\x78\xE8\x92\x15\xA9\xD8\xDA\xF6\x34\x4B\xC2\x6D\xFB\x54\x08\x4A\x2D\x12\x94\x70\x69\x94\xB9\x4C\xC3\xD5\x8F\xB7\x66\xB3\xCB\xBE\xB4\x22\x02\x9A\xB2\xEC\x23\xC6\x27\x3F\x63\xCC\x1F\xE0\xE8\xD1\xF5\xF8\xC7\x92\x26\x61\xA7\x44\x49\x83\x86\x04\xEA\xBF\x90\xE1\x02\x15\xAF\xB4\x24\x8E\x0E\x49\xF6\x71\x8A\x13\x1D\x03\x0B\xED\xD3\x4A\x30\x8E\x69\xCA\xB9\xC7\x43\xA2\x19\xE4\x76\x73\xC1\xC7\x2F\x14\xA0\x5C\x82\x43\xC0\xE7\xBA\x9C\x1B\xE8\xBA\x55\x19\xD7\x91\x00\x49\xB3\x5E\x50\x54\x64\x61\xED\xBC\xBC\x77\xE3\x04\x27\x44\xF5\x60\xD6\x86\x6C\xE3\x90\x5B\x06\xAA\xF2\xCC\x83\xCF\x25\xD0\x72\xEC\x35\x3C\xAC\x00\x33\xD0\xE2\xE1\x23\x2E\x87\xF8\xFE\x9F\xC0\xDA\x99\x00\x2C\xD9\xE7\x9B\xF3\x7D\x22\x8A\xB1\x5F\x51\x03\x42\x9F\xD8\x8C\x49\xA0\x88\xF0\xA8\xE6\x91\xF8\x6F\xAD\xE9\xF2\xD2\xCA\x6B\x5C\xB8\x29\x87\x73\x43\xC9\x72\x0A\x13\xFA\x00\xE4\x34\x00\xB9\x21\x5F\x83\xCD\xC6\xF4\xE2\x55\x1D\x48\xE9\xC6\xCE\x20\xA0\xCC\xC4\x72\x79\x25\xE2\x26\x81\x4B\x61\x81\x9B\xC0\x0E\x25\x1D\xBD\xE7\xCC\x2B\x29\x5C\xB7\x74\x2F\x8B\xA5\x7D\xA8\xE7\x3A\x95\x07\xC7\x7E\x64\x69\xBC\x0D\x48\xE6\x2A\x65\x84\x5A\x78\xA6\x74\x79\xB0\x7E\x69\x39\x43\xDF\x9F\x3D\xF7\x3F\xE5\x0C\x84\x54\x7C\x9B\x27\x3A\xEC\x1C\x2F\x43\x3D\x13\x6D\xB1\x20\x35\x94\xDB\xF4\x52\xE1\x57\x9F\xF2\x82\x17\xC3\xEB\x9A\xFB\x34\x81\xA9\x22\x68\x7E\x6E\x01\x16\x79\x0B\xF7\x1B\x6B\x4C\xBF\x16\x77\xA1\x63\x83\x77\xB6\xF1\xD9\x75\x8C\x40\x22\x90\x6A\xFF\x97\xF4\xDA\x14\x45\x39\x2F\xBC\x88\x00\xAB\x83\xEA\x22\x30\xD4\xED\xDC\xDD\x4E\x30\x85\xF9\xE1\xB1\xAE\xF1\xE2\x54\x3A\x2D\x6F\x96\x24\x0A\x88\x6B\x36\xE0\x9A\x98\x9A\x56\x83\x25\xD3\x0B\x7C\x10\x6D\xED\xD4\x22\x8F\x08\xC2\x79\xE9\xD0\x34\xE9\x4E\xBE\x0E\x48\xF9\x97\xFA\xD4\x11\x81\x68\xDF\xF5\x26\x32\x71\xF4\x8E\x9A\xC6\x86\x0E\x65\x68\x41\xC7\x27\x36\xC0\xBE\xAF\x78\x59\x52\x26\x6A\xC3\xC3\x78\xB3\x2A\xF8\x4E\x62\xBA\x83\x3A\x81\x0A\xC5\x84\x13\xD5\xBC\xD2\x6E\x4F\x2F\x9C\x93\xBC\xB6\x31\xD2\xB5\xF8\x8D\x11\xEA\x5E\xD8\xB1\xD2\x71\x1A\x79\x27\x8C\x64\xEE\x9B\x11\xEC\x35\xF7\x74\x4B\xAE\xF2\x53\x6A\x60\x1C\x59\x6E\x9C\xEE\xD5\xA8\x94\x3A\xB4\xA3\x37\xE0\x2F\x68\x2B\xAD\xBF\x0B\xFD\x7E\x69\x13\xB7\x48\x58\xEA\xEF\x9C\x36\x14\xC7\xAA\xB4\x68\xC1\x70\x42\xE4\x26\xD0\x86\x3E\x81\xDE\x92\x8F\xCA\x8A\xEF\xE9\x2C\xED\x61\x46\x10\xFD\x02\x4F\x04\xEF\xE6\x4F\x02\x85\xB3\x00\x60\xF7\x1C\xDD\x17\xA6\x8D\x7A\xEA\xD6\x70\x19\x6E\x31\xFE\x27\xA1\x5E\x94\xCB\x9E\x91\x2B\xEF\x33\xD7\xE9\x2A\x31\xBF\x55\x17\xE7\xF6\xA9\xB4\x7D\xE3\x1D\xE1\x3E\x36\x28\x88\x64\xEE\xEF\x0A\x39\x1D\x91\xFD\x5E\x8D\x97\x6E\x40\xB8\x51\xE6\x49\x4D\x0C\xCB\xFD\x50\x07\xD2\xF1\xA4\x9F\x36\x56\xA6\x95\x88\x31\x19\xFF\xB9\xAB\x00\xD5\x9C\x06\x1E\x01\xBC\x42\xD4\x5F\x97\x93\x05\x90\xA9\xD9\x1F\x6D\x25\x5E\x07\xF5\xD0\xA9\x1D\xCF\xFA\xD2\xEB\x1C\x54\x38\x78\x58\x26\xF0\x2F\xBD\x3D\x7F\x84\x9A\x8C\xCA\xDC\xE3\x27\xC4\xC8\x9D\x62\xAE\xD1\x2C\x3B\x6C\x49\x68\x02\x5D\xAB\xC2\xD7\x9C\xA8\x58\xB1\xD7\xDC\xED\xFB\x23\x7E\x64\xDB\x49\x2F\x38\xBC\xA5\x19\x3D\x66\xC6\x92\x66\xD0\x44\x8E\xE8\xF4\x2B\x10\x6B\x2F\x6E\xC3\xD3\x68\xCC\xCB\xB0\xF5\x41\x03\x12\xD7\x78\x75\x80\xB9\x7C\x4B\x43\x91\x38\x34\x09\xAD\x04\x2D\x47\x5E\x73\x46\xD7\x44\x02\x50\xE3\x9D\x9A\xA7\x08\x11\xEF\x94\xED\x1E\xDB\x19\xA8\x31\xA7\xE3\x1C\xEF\x23\x6C\xE6\xAC\xDC\xF7\xD8\x20\x0A\xD5\x6A\xAA\x61\x8A\x48\xBA\xEF\x23\x2C\x07\x6C\xA5\x63\x7D\xEE\x64\xC3\x8F\x1E\x64\x86\xF2\x7B\x7F\x6B\xB0\x79\xA6\x50\x4F\x56\x2A\x46\x52\x60\x58\x14\x06\xE7\xC5\x7F\x56\x66\x90\xD6\x5B\xEA\x0B\xC9\xCD\x06\x69\xDF\x86\xAA\xA1\x2D\x9E\x31\xB5\x3C\x4B\x74\xF8\x5C\x66\x19\x3E\x31\x34\xF8\x91\xE2\xD1\x02\xB7\x12\x35\x00\xD2\xC9\xAB\xD0\xBD\x45\x48\x3F\xE4\x4B\x40\xED\x14\x06\x98\x0D\xA1\xB7\x08\x1B\xB7\x53\x5E\xC5\x13\x3D\x3F\xA5\x81\x61\x0B\xE2\x83\x91\x38\x80\xA7\x7B\xF8\x99\x18\xCE\x10\x69\xD1\x90\x1E\x00\x3D\x93\x51\x67\xE8\xF7\x7F\xA7\x7E\xE4\x87\xB7\x15\x29\x68\xBF\x33\xD8\x5C\x9A\x94\x77\x6C\xF2\x88\x9D\x0F\xE6\x42\x24\xFE\x75\x38\x47\x53\xF0\xFB\x1A\xCC\xB8\xB6\x91\x3E\x1F\x6E\x0B\x37\x1F\x86\x1D\x7F\x8A\xA3\x4F\x40\x87\xD9\x6E\x39\x54\x49\x7F\x26\x98\x73\x81\x6E\x22\xF5\xE6\x9C\xB0\x04\x6E\x96\xE7\x10\x00\xEB\x4C\xDC\x2B\x33\xE0\xE0\x41\xAD\xCD\xBF\x1F\x7B\x25\xE4\x58\x47\x10\x95\x22\xBA\x2F\x02\x93\x67\xC2\x1D\xA5\x43\x19\x12\x44\x58\x1E\xDA\x1C\x00\x6A\x6B\xE4\xCE\x5E\x6F\x08\x54\xA9\xD7\x34\x62\x91\xC3\x27\xD6\xF5\x7C\x6E\xFA\x72\x19\x32\xE0\xD4\xC5\x4B\x00\x17\x9F\xE1\xCD\xE6\x20\x40\x1B\xD4\xF7\x02\x25\x98\x15\xAA\xBF\x61\xEB\xDC\x11\x98\xC7\xF6\xEB\x3E\xB4\xB7\xDC\x9E\x0E\xDF\xAF\x42\xBB\xFA\xEC\x2A\xA0\xA5\x64\xB3\x27\x7D\xC3\xD3\x81\xA3\xC6\x9D\x5C\xAA\xE5\x43\x5A\xE6\xFB\xFA\x5E\x56\x20\x0A\xFE\xA5\x33\x0B\x01\x50\x4E\x2A\x18\xEB\xBF\x64\x8A\x5B\xC6\x82\xCA\xE8\xFC\xB1\xEB\x2B\xA2\x56\x48\x79\x8F\x21\x91\x20\x3E\x1D\x3D\xB9\xEB\x0A\x60\x5B\xC6\x55\xC0\xC4\x13\x71\x7E\xD5\x59\x3D\x62\xEA\x02\x8D\x2A\x07\xDF\x6A\xA2\x61\x8B\x83\x2A\xB3\x10\x48\xFB\x47\x83\x65\x38\x42\xAD\x8C\xB6\x19\xFD\x4D\x3C\x4B\x9E\x26\x39\x31\xA9\xD5\x11\x15\xBA\xA2\x9B\xFA\x63\xA3\x33\xC6\x67\x57\xA8\xFD\x1C\x1E\x9F\xBB\x7A\x60\x98\xA7\xE7\x9A\x09\xDD\x21\xA8\xED\xA9\x91\xBD\xC3\x98\x0B\x38\xC7\xBD\xC8\x9E\xE2\x89\x4C\x3D\x93\x5A\x1B\x92\x26\x1D\x43\xCC\x90\x86\x58\x24\xAD\x73\x10\xAD\xF3\xD0\x8E\xDC\x16\x81\x7C\xBB\x5C\x4E\x98\xC5\x12\x11\x3A\x9C\x97\xD0\x0B\x88\x5C\x63\x7B\xB1\x3C\xFE\x70\xA9\x47\x32\x18\x86\xE5\x28\xF1\x2B\x6F\xA1\xDB\xD2\x57\x09\xCD\xEB\x60\x10\xDB\xD8\x96\xB7\xE2\x7A\xBC\x2A\x9B\xE4\xE3\x00\xB0\x7D\x46\x97\xA8\x84\x89\xDB\x16\xBA\xFD\xD1\xD9\x45\x16\x01\xB0\x10\x18\x80\x35\x30\x18\x7C\x2D\x95\xA4\x74\xE0\xF7\x3F\x76\xA7\xBE\x7E\xBE\xF1\xC2\xC1\x3F\xE8\x48\xF6\x8E\xE2\x5B\x21\xF5\xDB\x06\x39\x68\xDF\x33\x3B\x0B\x66\xE6\xF3\x78\xDE\x5F\xD8\x1A\xD2\x93\xCB\x94\x9A\x25\x9D\xB6\xEB\xAA\xD3\x97\x39\xE9\x9F\x17\x6D\xFA\x29\x59\x89\x4F\xB5\x8D\x58\x7A\xBF\x54\xFC\x27\xF6\x32\x2D\x43\xAD\xFD\x33\x8B\x5F\x08\x01\xA5\x31\x79\x8C\xD3\xFF\x8A\xDC\xE7\x09\xCE\xF5\xBA\xAF\x34\xBC\x1D\x88\x87\xC6\x6D\xD0\x05\x61\x14\x26\x78\x68\x05\x26\x90\x9D\xFF\x2E\x9D\xA3\xF8\x2E\x2F\x07\x47\xBA\x81\xA5\xBE\x7A\xB1\xE1\xCE\x11\x28\x0C\xD5\xC8\x53\xC1\x22\x49\x19\x87\xA8\x52\x48\x9A\x85\x62\x8A\x62\x24\xE5\x96\x68\x12\x5E\x96\x0B\x79\x13\xC2\x45\x2B\xF7\xF0\x0E\x5C\x45\x7E\xE6\xDF\xBA\x3E\xF2\x0E\xBC\x6A\x8E\xD3\x38\x03\x72\x05\xBB\x5A\x29\x07\x78\x66\x6A\xB0\x73\xD0\xF2\xD1\xD9\xB5\x36\x7A\xE9\x19\x1E\xAF\xC3\xBA\xE4\xDD\x60\x7F\xAC\x80\xAE\x83\x65\x77\xC3\x95\xFB\x95\x9B\x1E\x01\xA1\x12\xE4\xB2\xE8\x69\x6A\xB2\xEB\xA4\xDF\x45\xFE\x86\x2F\xF0\xEB\x94\x73\x01\x9F\x6B\x60\x9F\x3A\xFC\x10\x40\xBB\xB4\x0C\x51\x4B\xE5\x82\xED\xF8\x3E\x77\xC8\xCE\xA9\xF6\x05\xEB\x20\xD2\xB4\x1E\x59\x81\x82\x36\x23\xA4\xF3\x2D\x3B\x37\xFB\x93\x7A\xB2\x2C");

        // Adding new values to the cart array
        $cart->gift_code = $gift_code;
        $cart->coupon_code = $coupon_code;
        $cart->coupon_type = $coupon_type;
        $cart->coupon_value = $coupon_value;
        $cart->referral_code = $referral_code;

        $items = [];

        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x44\xCF\x11\x3F\x64\xDD\x12\x10\xF4\x71\x9B\xAE\x08\x01\x78\xB3\xBF\xD1\x74\x5E\x54\x4A\xB7\x7E\x6B\x87\xBD\xFD\x84\xB2\xE4\x65\xCE\x39\xE2\x7A\xF7\x0C\x28\xD0\xCF\xF1\x6D\xAE\xCC\xC1\xBD\x86\x52\xEA\xE4\x68\x3C\x90\x93\x84\xA5\x32\x04\xB9\x6A\xF2\xAC\x73\x2A\x1B\x7A\x0C\x83\xE9\x1E\x5E\x31\xB6\x7C\x77\xBE\x14\x6D\x17\x04\xA0\x79\x25\xCD\x65\x81\x34\x35\x55\x6D\xCF\x28\x38\x92\xB0\x44\x87\xF9\x8C\x5F\xF5\xB1\xDD\xA6\x33\xA0\xFE\x7D\x71\x96\x21\x71\x29\x0C\x23\xFA\xB7\x3C\xC8\x7D\x71\x5D\xF0\xBD\xCD\xF8\x9A\x4B\xE3\x72\x64\x63\xCE\xCA\x76\xB9\xBC\xFD\xC8\xFA\x90\xCA\x4F\xF8\xAF\xB7\x52\x17\x45\x44\x00\xF3\x79\x2D\xFA\x45\x20\x9E\xFB\x7F\xC4\x55\x2A\x7D\x55\xCF\x43\x0C\x80\x1D\x8B\xD8\xD3\xCF\x8B\xAF\xDE\xFE\x01\x74\x09\x77\x90\xA1\x7D\xB8\x06\x6C\xA0\xC9\x45\xDF\x03\xF3\x7F\x93\x6F\x0C\xC1\xCE\xD0\x5A\xCD\x4D\x0A\xBD\x05\x74\xE0\xD1\x51\x7E\xAF\xB0\xC2\x56\x57\xCC\xF7\x0D\xB0\x43\xBF\x61\x04\xA4\xB0\x0F\x4C\x4A\xA1\x96\x16\xC4\x6A\xE9\xF4\x74\xC5\xE8\x78\xE7\x55\x22\x30\xB1\x5E\x96\xF6\xB7\x5B\xBD\x4F\xE2\x4A\xF2\x5C\x9D\x3C\x74\xEC\x75\xA7\x18\xE2\xA7\x1A\x28\x6F\xC1\x1A\xEC\x47\x78\xF9\x71\xC5\xB3\x4F\x00\x16\x32\xF0\xA2\xEA\x53\x54\x78\xBF\x26\x22\x89\x7A\xBE\x27\x16\xBD\x0A\xB9\x47\x33\x0A\xB1\xF4\x5F\x62\x30\x82\xB7\x4E\x9D\x1B\x38\x61\x7B\xEB\x2A\x2B\x9A\xA2\x76\x9E\xD6\xA9\x12\x0C\x59\x14\xAE\xF3\xF1\x94\x3A\x7E\x66\x0A\x54\x65\x02\x50\xB9\xE7\xD3\xB5\x8D\x95\x31\xE1\x93\x32\xE3\xF8\x19\xE7\xB6\xE9\xEF\x84\x36\xB2\x1B\x03\xF2\xD0\x3F\xCA\x4B\x6C\xCA\xC8\x77\x91\x93\x92\xEE\xCD\xF6\xEF\x5B\xC3\xA9\x09\xF0\xFF\xCE\xFA\x5B\x0A\x8C\xC8\x64\x38\x9F\x78\xFF\x78\xD5\x10\xA5\x6D\xDC\x93\x02\x2D\x14\x32\x95\x8F\xD2\x18\x48\xD4\xB5\x21\x86\xD2\x16\x9A\x66\x1C\x24\x34\x5F\x8A\xB0\x6E\x5E\xE2\x28\xDC\x9B\x9C\x1F\x7D\xD2\x98\x8F\xA7\x81\x5C\x07\x7B\x7B\x23\x5C\xF7\x95\x55\xF5\xBE\x2C\x03\x4A\x9A\xE7\x8F\xAE\x12\xF9\xB3\x6B\xC6\xB7\xA2\xA1\x4C\xF1\x18\x7E\x4F\x72\x55\x8E\x95\x4E\x38\x87\x3A\x2A\xF4\x1D\x0A\xC3\x99\x0E\x1C\x08\x3A\x3B\x78\xF7\x90\xF1\x46\xF3\x5E\x2F\x8E\xE7\x47\x0E\x8A\x8C\xC5\x44\x3A\x87\xB7\x6A\x53\x26\x30\xA1\xCF\xF2\x29\x27\xFA\xA8\xF9\xAE\xE8\xFA\xE2\xE0\x5D\xAE\x40\x4E\x31\xE9\x34\xAD\xE1\xDB\xE6\x49\xA9\xA6\x35\x1F\xD4\xBA\x9C\x8B\xE6\x91\xE1\xCF\xD4\x2C\x35\x0B\x8B\xF0\x6A\xF5\x06\x22\xA0\x65\x45\x88\x06\x05\x45\xCD\x10\x5D\x21\xBD\x6B\x52\x9A\x8C\xD6\x31\xDA\xDD\x2D\x2A\xAF\x7C\x11\xC6\xA1\x5D\x98\x67\x28\xF6\x84\xE6\xFF\xE5\x19\x48\x43\x2B\xF6\xB3\x02\x24\x29\x51\x05\x93\xE5\xF9\xE0\x18\x79\x9A\x37\x5F\x7D\x2A\x56\xFE\x29\x37\x17\xB2\xAF\xB1\x82\x93\x47\x8B\xEF\x91\x5D\x64\x4E\x6A\xE9\xAF\x38\x9E\xA1\x1D\xFA\x6C\x0C\x43\x29\x77\x42\x2E\x4A\x30\x52\xC0\x36\xCF\xF4\x86\x9D\x9C\x42\x54\x62\x89\xBC\xAE\xE4\xF3\xDE\x87\xAD\xC9\x98\x9A\xEA\x78\x9B\xD8\xD1\x3E\x66\x0E\x7C\x3B\x90\x33\x94\xAC\x29\x7D\x0E\x00\xC0\x5F\xBC\xEE\x6E\x91\x6A\xE9\xA7\x8C\xDA\x98\x5D\x02\x23\x75\xB6\x18\xC9\x9A\x12\x96\x85\xC4\x95\x90\x89\x04\xC3\xB2\x4C\x19\x37\xC1\x68\xF3\xF5\x76\x4F\xFC\x68\x4A\x84\xFD\xE5\x82\x1A\xDA\xBB\x07\xB4\x50\xD2\xD8\x45\x2E\x30\xD2\xA3\xF7\xD7\x7B\xED\xBD\x1D\xA9\xDE\x85\x8F\xCE\x31\xD3\xA9\xD0\x01\xA4\xBE\x79\xC3\xF6\xB1\xA8\x55\x6D\x82\x60\x73\x4B\x0D\x43\x15\x57\x23\xA1\xE0\x7A\x76\xEE\x3D\x95\x73\x4A\x54\x7A\x8F\xF2\x94\xD1\x3D\xE3\xD5\xC5\x9F\xE9\x2B\xCF\xBD\xED\xA2\x4F\x72\x45\xE6\x9A\x8A\x1B\xC6\x5A\xA9\x86\xCB\x13\x3E\x10\x7F\x05\x99\x6F\x94\x59\xAA\xE8\xDA\x0E\x4A\xC8\x5A\xD6\x42\x60\xFB\xF3\x82\x53\x52\x4F\x05\x5E\x7C\x01\xB5\x0F\xFE\x0A\x2A\x8E\x41\x3E\xD9\xD1\x35\x34\x39\xC3\x47\xAD\x16\xBB\xB1\xA4\x33\x5B\xD5\x8F\xF2\x7A\xFD\x21\x77\xB5\x60\xB2\x58\x80\xDC\xA4\x34\x05\x85\x1E\x15\xD7\xB6\xAC\x46\xBF\xA0\x56\xEE\x4C\xF6\xE7\x18\xA9\xD5\xD9\xD6\x1F\x8C\x4E\xE8\x4F\x70\x20\xE0\x26\xA8\xCE\x38\x21\xEB\x36\xD1\xF3\xEE\x49\x89\xAD\xD2\x63\xA4\x00\xF4\x19\x89\x4F\xAA\xD8\x2F\x6F\xAD\xEC\x43\xE1\x9F\x91\x06\x69\x95\xED\x48\xEF\xF9\xA1\xE0\x5E\xCA\x93\xFA\xB1\x92\x1C\xB2\x45\x9D\x4D\x87\x8A\xF3\x69\x15\x08\x4F\xA5\x89\xFF\x05\xA4\xE4\x9F\x03\xD6\xFC\xEB\x55\x80\x3C\x9F\xEF\x2A\x15\x53\x2B\x63\x08\x6B\x5F\x1A\x67\xA0\x9D\x47\x11\x5D\x94\xF5\xD0\x85\x63\xCD\x90\xEF\xCE\xA8\x85\xE8\xD6\x41\x8C\xAE\xE9\x4B\x40\x54\xA1\xE3\xF8\x1E\x4B\x20\xAD\x88\xD6\x67\x72\x54\x14\xCD\x71\xAF\x68\x83\x8B\x6D\xA7\x65\x03\x83\x52\x54\xB1\xFD\x18\x8B\xCA\x9E\xCD\x00\xD0\xDE\x43\x53\xFF\x9F\x45\x26\x83\x24\xE5\x70\xA9\xFD\x42\xCB\x3D\x83\xD3\xD7\xCD\x04\x80\x4A\xC3\xE4\x6A\xB9\xEF\xDD\xD5\x2F\xE8\xF5\x70\x28\x28\xA0\x04\xA2\x09\x7C\x4B\xAD\xB3\x7C\xA2\x70\x79\x29\x15\xDA\xBB\x28\x84\x01\xF0\x8C\x84\xC8\xE8\x89\x88\xC3\xFD\x87\x8C\x58\xE2\xF4\x2A\x5E\x07\x9A\x0F\x5E\x6A\xE1\xE1\x33\x08\x0A\xAD\x18\xE3\x60\x88\xB8\x39\x4B\xDA\x18\x19\xD6\x76\x85\x5F\xF0\x16\xE9\x31\x4E\xD3\x43\x63\x22\x37\x0E\x7D\x31\x3B\x96\x4E\x9A\xA8\x7A\x03\xD2\xE7\x2B\x54\x6A\x4B\x67\xAD\x88\xAB\x3A\xC6\xA5\x28\x2C\x58\xDE\x29\x1E\x9D\x82\xE2\x08\xA3\x0F\xDF\xE9\xD8\x2B\x29\x8D\xA1\xC1\x61\x08\xB1\xC6\xF5\xDD\xD3\x0C\xDD\x32\xDE\xAD\x11\xD2\x6A\xB8\x40\x27\xF5\x23\xB0\xD6\x8E\x8A\x13\x84\xBF\x7D\x02\xA8\x98\x58\xBB\x2E\x0F\xCC\x06\xF2\x1D\x42\x5A\x17\xD7\x38\xC6\x4C\x0E\xB3\x45\x76\xE4\x73\xB7\xFC\x5A\xA4\x1B\x05\xE6\x78\xC0\xD7\xC3\xD8\x16\xB0\xB4\x0A\x7C\x68\x8D\x55\x4C\xD0\xA7\xEE\x64\xB1\xA2\x9C\x69\x3A\x12\xA4\xBC\x8D\x83\x45\x8D\xA5\x60\xEA\x53\xC0\xEC\xEE\x57\x5D\x83\xB0\xDF\x6A\x57\x5A\x2B\x2B\xB9\x05\xBC\x99\x5D\xE0\x3F\x5E\x38\xA5\x31\xBA\xC6\x40\xE8\x94\xA5\xA6\x66\x02\x81\x28\xFB\x5E\x08\x45\x6A\x0D\x93\x6F\x62\x8F\x85\x51\x8A\xCC\xCB\xE3\x2B\xF0\xCA\xBE\xB6\x3A\x0E\xBF\xB2\xFD\x33\xD6\x2E\x36\x6F\xCC\x0D\xE9\xE8\xCB\xF5\xFC\x97\xC0\x69\x25\xF2\x07\x1D\x8E\x98\x52\xA4\xAE\x8B\xE1\x13\x16\x9E\x9B\x25\x92\x00\x0B\xED\x46\xBE\x13\x0D\x0F\x21\xED\xD3\x4A\x30\x8E\x69\xCA\xB9\xC3\x0A\xF1\x66\xB1\x38\x32\x97\x86\x66\x58\xE1\x63\xC7\x1D\xEA\xFA\xBA\xDA\x5A\xA4\xE9\x10\x02\xFD\xBB\x00\x49\xB3\x5E\x50\x54\x39\x4B\xED\xBC\xBC\x77\xE7\x47\x66\x10\xB0\x27\x99\xD4\x68\xC9\xA7\x5B\x67\xFA\xA2\xB0\xEE\x80\x61\x95\x3E\xBF\x49\x16\xAB\x54\x7E\x93\xEE\xF2\x28\x60\x90\xB1\xE4\x9F\xD4\xDA\xC3\x55\x24\xD1\xE0\x96\xEE\x64\x72\x96\xAB\x57\x48\x49\x16\xC9\xEC\xCF\x08\xF4\xCD\xB7\xE7\xB4\xC8\x87\x26\xE9\xE0\xFF\xCC\x8C\x22\x0A\xA8\x3C\xDD\x2E\x55\xFD\x0D\x5A\x57\xBB\x54\xA1\x3C\x7B\x93\x21\x5F\x83\xCD\xC9\xFB\xE2\x3D\x5C\x06\xAD\x8A\x8B\x20\xE3\x99\x89\x27\x35\x64\xB1\x3D\x92\x48\x24\x90\x88\xD5\x07\x65\x52\xF2\xA0\xCC\x28\x33\x54\xBE\x52\x05\x8B\xA5\x7D\xA8\xE7\x3A\x95\x07\xC7\x7E\x64\x20\xFA\x0D\x40\xE2\x14\x2D\xCB\x35\x3F\xE9\x26\x20\xBD\x60\x20\x6A\x3C\x9C\xCA\x70\xFF\x59\xA4\x58\xCD\x02\x39\x9B\x3A\x27\xB1\x27\x0C\x43\x66\x39\x6D\xB1\x20\x35\x94\xDF\xB7\x1D\xB4\x07\xD0\xBC\xFD\x54\x8C\xAF\xDB\xB8\x68\xD5\xA2\x30\x6B\x60\x2C\x42\x42\x3C\x46\xA4\x1B\x76\x4C\xDE\x42\x64\x92\x5B\x9C\x7C\xBD\xC2\xDE\x50\xB5\x51\x67\xC0\x70\xAB\x91\xFD\xDA\x4A\x2C\x6D\x27\xB5\x85\x1E\xFC\xCB\xAF\x74\x36\x93\xBF\xCF\xD3\x54\x0A\x94\xF7\xFF\xBD\x94\xB8\xBB\x53\x78\x78\x27\x8A\x6D\x6F\xCC\x3E\x75\xB4\x97\x86\xD9\x17\xD3\x27\xDD\x02\x7A\x36\x51\xEB\xD4\x6E\x82\x0B\x85\x72\xE8\x94\x71\xE9\x4E\xBE\x0E\x48\xF9\x97\xFA\xD4\x11\x85\x3A\x9A\xB3\x63\x60\x23\xB5\xC6\xA6\xD0\x84\x1F\x6C\x29\x08\x8E\x3F\x26\xEF\xB3\xE0\x17\x34\x1D\x74\x33\xAA\x97\x3D\xFE\x79\xB1\x15\x62\xF1\xC8\x35\x8C\x1D\xD2\xDD\x05\x92\xB0\xC6\x6A\x45\x26\xAC\x88\xA1\xD6\x65\xCC\xD2\xAB\x84\x1C\xF4\x0E\x94\xE4\x91\x3A\x12\x7E\x6E\xCC\x20\xA8\xC3\x5F\xF7\x34\x96\x3B\x19\x8E\xFB\x0B\x1F\x16\x79\x37\x2B\xD0\xBD\xA9\xCB\xDB\x6F\xE4\xEC\x79\xFA\x35\x3F\x63\xE8\xED\x41\xFA\x79\x47\x12\xE4\x44\x19\xA2\xE0\xDD\x34\x01\x93\xF9\xB2\x69\xC0\x73\x0D\xEC\x16\xCB\xC2\x75\xEE\x92\xDD\xC1\x8D\xCF\xAB\xE9\x6F\xAC\x35\x03\x57\xB2\x50\x16\x04\xA4\xB7\x4A\x4A\x94\xA9\x0C\x3B\xF0\x0D\xCB\x1E\xB1\xF3\x3F\xAE\xD1\x7C\x19\x7E\x38\xD4\x27\xA1\x5E\x94\xCB\x9E\x91\x2B\xEB\x63\x82\xBB\x69\x79\xFE\x06\x5F\xBD\xD9\xB4\xA3\x63\xE4\x15\xF5\x25\x75\x4E\xC4\x31\xA3\xA6\x44\x78\x49\xD4\x81\x2D\xD8\xC7\x77\x49\xEA\x0D\x9E\x6C\x43\x1A\xDA\xF6\x5B\x5D\xAE\xCE\xEC\x85\x2C\x02\xE7\xD7\xC4\x74\x11\xF8\xFA\xEA\x52\x81\xE3\x4F\x4A\x40\xB2\x5E\x86\x06\xF2\xDD\x7A\xD3\xE6\x9D\x5A\x6D\x38\x5E\x03\xB6\x9F\xFC\x4D\x80\xB4\xDF\xF5\x52\x15\x78\x23\x09\x43\xB9\x61\xB5\x3A\x3C\xC5\xC8\xD8\x99\xDB\xEF\x27\xC3\x8B\xDC\x30\xFE\xC1\x6D\x27\x78\x01\x2A\x7D\x0E\xEF\x95\x9E\x9C\xB2\x1B\xF4\xC6\xC7\xC7\xE2\x38\x75\x24\x96\x13\x35\x29\xAB\xEA\x4C\x74\x22\xC1\x9B\x4C\xD0\x44\x8E\xE8\xF4\x2B\x10\x6B\x2F\x6E\xC3\xD7\x2B\x83\x9E\xE0\xBA\x0F\x7C\x44\x9B\x2A\x6A\x8A\xF0\x2F\x43\x40\x82\x36\x38\x14\xA7\x04\x74\x0A\x1D\x36\x15\x93\x5B\x16\x47\xFA\xC3\xFE\xF3\x5B\x1F\xAC\xD5\xBF\x4A\xA4\x50\xEC\x36\xAB\xBE\x1B\xB7\x68\x33\xA3\xAB\xC4\x9C\x8A\x74\x59\xDB\x23\xEE\x66\x83\x62\xBA\xEF\x23\x2C\x07\x6C\xA5\x67\x3E\xAF\x36\x97\x82\x00\x31\xD6\xB6\x3A\x2B\x2E\xB5\x1C\xC6\x1F\x06\x18\x22\x41\x1B\x34\x1D\x59\x55\xE0\xC9\x7F\x51\x2F\xC4\x93\x16\xB9\x05\x87\xCA\x4E\x30\x8F\xCE\xF9\xD9\x68\xDA\x31\xF6\x60\x07\x20\xC9\x40\x7E\x10\x7F\x48\x3A\xB1\xC5\xA7\x9C\x7D\xFE\x56\x32\x09\xF8\xC9\xAB\xD0\xBD\x45\x48\x3F\xE4\x4B\x47\xAE\x5B\x53\xC8\x42\xEF\xC8\x5B\x4E\xFA\x59\x40\x8B\x48\x71\x6A\xEA\xFF\x69\x70\xC8\x83\x91\x38\x80\xA7\x7B\xF8\x99\x18\xCE\x10\x69\xD1\xED\x17\x1B\x17\xB9\x51\x67\xE8\xF7\x7F\xA7\x79\xAD\xD3\xF2\x58\x7A\x66\xB5\x34\xD4\x72\xCE\xDC\x3E\x3F\xFF\x96\xDE\x4E\xAA\x01\x71\xB2\x34\x6C\x02\x30\xB1\xA9\x4E\xC4\xBC\xF5\xD0\x6C\x22\x2B\x5C\x48\x52\xCF\x53\x3E\xDE\xE6\x33\x33\xD2\x89\x3E\x76\x5B\x37\x03\x40\xD9\x30\xC0\x2A\x67\xA6\xC7\xD2\xF8\x1E\x74\xC4\xA6\x47\x08\xEC\x05\xC1\x28\x7E\xBB\xEA\x52\xBE\xD6\xA8\x57\x65\x6F\xAD\x16\x1B\x26\x88\x23\xF7\x7D\x11\xCA\x2E\xDF\x0B\xA6\x5A\x5E\x46\x1F\x7D\x1E\xCB\x0C\x10\x63\x6B\xEE\xCE\x17\x3B\x4D\x19\xFE\x9E\x2D\x76\x8C\x80\x7F\xDF\x94\x6D\x6D\x86\x5C\x17\x3A\xE6\xCD\xDA\x76\x33\x1B\x9D\xCA\x87\xAE\x3E\x4B\x1B\x81\xBB\x06\x08\xD1\x51\xAD\xB3\x61\xEF\x9F\x50\xCA\x93\xFB\xF5\x79\xFD\xF1\x88\xE1\x47\x9B\xA6\x68\xBB\xFA\xEC\x2D\xE9\xF1\x21\xFE\x74\x73\x93\x81\xC8\xE0\x83\x9D\x10\xE7\xB2\x44\x4D\xFD\xF9\xBB\x17\x53\x29\x39\xEB\xA3\x3F\x0C\x43\x5B\x64\x3A\x11\xC1\xBF\x64\x8A\x5B\xC6\x82\xCA\xE8\xFC\xB1\xEB\x2B\xA2\x56\x48\x79\x82\x42\xDE\x43\x6C\x4E\x69\xB1\xE2\x11\x4A\x71\xC6\x55\xC0\xC4\x13\x71\x7E\xD5\x59\x3D\x62\xEA\x46\xD5\x7D\x47\x9E\x7F\xAE\x4E\x91\x82\x2D\xAB\x7B\x1A\xAF\x38\xCA\x31\x7D\x0F\xFE\x82\xFF\x4D\xB8\x00\x43\x02\xDA\x25\x72\x78\xEB\xC2\x3B\x1B\xA0\xAA\x9F\xAE\x37\xF5\x72\xE2\x6F\x45\xB9\xB7\x4D\x02\x87\x9F\x6B\x3E\xFF\xF4\xEE\xB0\x09\xDD\x21\xA8\xED\xA9\x91\xBD\xC3\xC5\x0B\x7D\x8B\xEE\x8D\x9E\xB9\xA3\x4C\x3D\x9E\x44\x4C\xDA\x63\x4F\x06\xA5\xDE\x8E\x5F\x74\xEC\x2A\x59\xAB\xFC\xD6\x89\xDF\x5B\x80\x6D\xAB\x48\x49\xDA\xC1\x69\x40\x5B\xCC\xC7\xAC\x66\xC7\x18\x26\x37\xE2\x40\x8E\x31\xF0\x0A\x77\x56\xD2\xFF\x32\x86\x0D\x4F\x83\x83\xAD\x7F\x1D\x9A\x97\x10\x41\x9F\xD3\x8F\xA8\xD2\x06\xD7\x73\xD6\xA1\xAD\x54\xAA\x67\x25\xF8\xC5\xF4\xE5\xBE\x62\xDF\x99\xAC\xD0\x6F\x16\x06\xF7\x59\x5E\xD4\x4A\x63\x4D\x31\x2A\x95\xB9\x6A\xE0\xE7\x15\x76\xA7\xBE\x73\xA0\xA6\x8A\x84\x6D\xAD\x40\xF1\xDE\xA3\x02\x6C\xCD\x9C\x49\x40\x4C\x8A\x60\x7E\x59\x19\xAF\xB7\x7F\xD2\x5F\xDC\x4F\x81\xD6\x99\x99\x80\x38\x91\xF6\x92\xA7\xCD\xD4\x78\xA5\xDC\x42\x21\xBB\x7D\x1C\xEA\x0E\xE7\xD9\x50\x7E\xFC\x15\xAE\x7E\xE1\x6E\x42\x17\xA5\xF4\x28\xA1\x75\x08\x01\xA5\x31\x79\x8C\x8E\xD5\x8A\xDC\xE7\x09\xCE\xF5\xBA\xAF\x20\xD0\x37\x80\x83\x96\x38\x82\x46\x29\x55\x3C\x7B\x2C\x64\x76\x96\x91\xFE\x77\x8E\xEA\xE2\x2E\x3B\x07\x1D\xEF\x89\xAD\xB9\x77\xAC\xF8\x87\x0B\x38\x0D\x94\xDF\x1A\xDE\x01\x44\x07\xCE\xFB\x3C\x07\xCE\xE0\x2F\xDA\x36\x7D\xE9\xCD\x24\x54\x40\xEE\x59\x38\x5F\xC2\x58\x2B\x96\xA0\x5E\x20\x28\x31\xA2\x9A\xF6\x6D\x8E\x7C\xF9\x2C\xE9\xD5\x2F\x39\x3D\x51\xAD\x44\x2D\x1C\x71\x2F\x2F\xB5\x72\xD7\xE3\xD1\x89\xA4\x22\x6D\xA6\x3E\x00\xFD\x86\xFC\xA1\x8F\x32\x3E\xE0\x89\xA3\x9D\x23\x3E\x91\xC6\xF2\xB7\xB8\x05\x2B\xA1\x12\xE4\xB2\xE8\x69\x6A\xB2\xEB\xA4\xDF\x45\xFA\xD4\x65\xB9\xAE\xA0\x68\x0E\x97\x14\x77\x98\x3B\xB9\x58\x14\xFC\xF8\x1B\x47\x59\xA0\x80\xED\xF0\x31\x3F\x92\x8D\xAF\xE6\x05\xBD\x0A\x94\xE6\x51\x14\x81\x86\x66\x76\xAB\x9A\x65\x7A\x64\xBE\xD7\x13\xE6\x69\x17\xAE\x9E\x0F\xCC\x0D\xAD\xED\xCA\xB8\x0B\x53\x5B\xC7\xCB\x9D\x17\x3A\xD4\xFC\x34\x5F\xB5\x40\x30\x7C\xB6\xEB\x5D\x27\x09\x6C\x51\x70\x92\x1F\xF7\x34\x67\x86\xF6\xB1\x1B\xFC\xB7\x15\x52\xB8\x10\xCF\xE3\xA9\xAD\x21\x86\xAB\xE8\x84\x2F\x0E\x16\xD9\x2E\xE2\x6F\xA9\x0B\x60\xDB\xE4\x82\x84\xF3\xE6\x80\x9C\xBF\x06\x9D\xC7\xC8\xC2\xBB\x04\xA0\xB7\xCD\x03\x54\x29\x95\x39\x11\xA9\x81\x43\x7A\x59\xFE\xC2\x08\x32\x5C\x91\xE8\xBF\xDA\xCA\x41\xCA\x83\xEE\x2A\x2D\xB5\xBA\xA1\x3A\x17\x4C\x4E\xD8\xB5\xEB\x99\xD1\x2B\x4C\x22\x98\x57\x40\x0E\x45\xE2\x3B\xF9\x0C\x7F\xC0\x5D\x2D\x7A\xFA\x90\xB3\x0A\x80\x4A\xED\xE5\xDF\xC4\x04\x53\x3C\xE2\x5F\x35\x1A\xAD\x2C\x84\x8D\x9F\x2F\x65\x90\x82\x6B\x03\x5D\x1B\x17\x9F\x91\x3A\x3F\xDF\x0C\x77\x29\x08\xD7\xA3\x7A\x6D\x45\x25\x87\x8E\xAC\x8D\xB7\x82\x3C\x93\xC5\x35\x50\x24\xDE\x0F\x70\xAB\x39\x49\xE9\x0B\xD5\xB5\xAB\x99\x4F\xC4\xED\x6A\xE0\x12\x14\x78\x45\x4A\x1E\xAE\x26\x9D\xFE\xB0\x50\xAE\x51\xF9\x6F\x4B\xBE\xA5\xD4\x46\x56\xAD\x95\x03\xE0\x07\x7D\x08\x4B\x60\x05\x67\x4F\x8B\x5B\xB4\x02\x75\x54\xE4\x41\xD6\xBB\x20\x5B\x5E\x4B\x25\xA9\xD3\x45\xE7\x1F\x59\x40\x85\x12\xA1\xBD\xE1\x4B\x76\xFC\xCB\x32\xD5\x18\x6B\x42\x64\xE4\xDC\xA5\x7C\x98\x9B\x82\x96\xAC\x8A\xA4\x3C\x61\xC1\x33\xAD\x5F\xCA\x0E\x33\x42\xC2\x22\x6A\x4D\x25\xE0\x3F\x60\x17\x58\x34\x93\xF7\x03\xBF\xE1\x40\xDF\x9B\x2F\x7B\x72\xA2\xEE\xF6\xFC\x99\x66\x98\x1F\x38\x34\x5C\xDA\xB3\x71\x42\x7C\x01\xAE\x1A\xEE\xDF\xC7\x73\x04\xB7\xE2\x13\xF4\x2A\xF9\x2B\xBA\xAE\x41\x01\x05\x9F\xAB\xEB\xD6\xC6\x32\x99\x48\x85\x92\xBF\xDE\x3D\x0A\xD7\xA0\x98\xE8\xAA\xE2\xFE\x6E\xD2\xD3\x54\x0D\x77\x88\xDB\xF3\xE7\x8E\xB6\x7F\x55\xF8\xC4\x92\x3E\x88\xE0\xF2\xB7\x2F\xC8\xB1\x18\x85\xA5\xCF\x6D\x63\x5C\x43\xC2\x0A\xCF\x57\xFE\xB0\xE9\xF9\x8B\xEF\x14\xDF\xDE\xF3\xDC\x03\x28\xE7\x02\x5D\xB5\x57\x98\x17\x67\x7C\x9A\x51\x2A\xE0\xCC\x97\x30\x08\xA9\xCC\xE0\xE9\x93\x0E\xB3\x79\x5C\x91\x5B\xC2\xDF\xA8\x19\x1C\xDC\x6D\x05\x6E\x99\xFC\x51\x62\x34\x40\x99\xCC\xB5\x52\x82\x5A\x4C\xC6\xAB\xB6\x8E\xD7\x47\xD7\xFA\x9C\xE8\x1B\x5C\x29\xC5\xBF\xDB\x13\xE5\x1F\x7F\xF5\x12\xE3\xE5\x71\x63\x4C\x5A\x1D\xA4\xF6\xD8\x2F\x25\xA6\xBF\xB5\xF4\x6B\x74\x84\xCD\x02\x8A\x9F\x7F\x4E\x7E\x12\x3F\x08\x82\xFA\xC0\xFF\xF6\xFB\x0E\xBB\xCE\x32\x02\x43\xE5\x77\x8C\x9B\x8A\x68\xF1\x8B\x50\x15\x51\x41\xBF\xB7\xF5\x10\x60\x96\xA2\x0E\x43\xD3\x2C\xC6\xAF\xBB\x92\x2C\x6D\xF3\xD0\x83\x89\x89\xD2\xAE\x27\x9D\xDB\x47\x64\xEE\x18\x8D\x59\xBD\x2D\x39\x81\x7C\x5F\xF1\x6A\x14\x1B\x5C\xB7\x79\x08\xEB\x9B\xC9\x97\x09\xB4\x79\xCC\xD0\x4D\x0A\x2D\xEA\xE5\x15\x47\xE8\xE8\x7D\x19\x1F\xA9\xEE\x95\x44\xCD\xD5\x7B\xC3\x36\x0F\xA7\x4B\xE1\x47\x5C\xD1\x50\xDE\x3E\x28\x6A\x4D\xBE\x6B\x22\x16\xC5\x5C\xE8\x70\x90\x91\x48\xF0\x5D\xEC\xE8\x93\xE7\xE3\x32\x1D\x69\x75\x18\xB7\x5E\xF2\xF1\x74\x22\xFC\xB8\x8F\xEC\xF9\xC7\x91\x10\x0E\xB5\xD5\x79\x8E\x8A\xFA\x23\x1E\x19\x0D\xDD\x11\x99\x8A\x89\x8D\xAF\x3F\xF0\x2B\xDC\xBF\xCB\xA7\x66\xCF\xEB\x98\xD8\xCA\x45\x24\x4A\xE3\xF0\x77\xE2\x30\x03\x3C\x6B\x11\x08\x97\x6D\x7F\xFD\xDC\x4C\x97\x46\xC3\x9C\x2B\xD7\xCF\x5E\x23\xE8\x9E\x1B\x9B\x00\x03\x16\xA6\x30\xAC\x9F\x3B\x56\xD3\x31\xFB\xBB\xC9\x30\xD0\x17\x0D\x35\x42\xF6\x3F\x63\xB9\x00\xA2\x5D\xD8\xF4\x9B\xB0\x56\xCB\x23\xCD\x79\xDA\xA4\x72\xDC\x0A\x97\xB5\x51\x0C\x2B\x94\x2A\xA2\x67\x4E\x97\x3B\xAC\x8C\xAF\x62\xA7\x1D\x98\xF1\x8E\x22\x59\xD1\x88\x3E\xD0\xCC\x4E\x20\x93\x6D\xB8\x40\x32\x8F\x18\x43\x5B\x29\x89\x47\x8E\x6C\x68\xAB\xC4\x14\x54\x7B\x66\xA3\x96\xAB\xA3\xCD\xAD\x4D\xAA\x2B\x29\x64\x74\xC3\x1B\x6D\x9B\x68\xD7\x1E\xB4\xD4\x9D\x46\x23\x85\xE0\x74\x0B\x40\x5D\x54\xF7\x52\x6C\xB2\xAB\x22\x9E\x1F\x01\x98\xC2\x65\x1F\xAF\xB3\x4B\xD0\x70\x7D\x6B\x80\x16\x54\x53\x56\x12\x01\x86\x67\x7E\x9D\x3C\x16\xCF\xA5\xD4\x79\x64\xC1\xC0\x90\xD0\xC8\xE9\x20\x0B\xF3\x18\x7D\x94\x18\x06\xC5\xF1\xDE\x08\x97\x39\xE1\xB8\x92\x8E\xF6\x70\xC4\x59\xEF\x08\xB1\xB6\x94\xEB\x5B\x01\x53\x0B\xE0\x17\x94\xC8\x2A\x97\x39\x3A\xE0\x55\xF9\xBB\x51\x48\x18\xAA\xC0\x00\xFE\xD2\x39\xB5\xA8\x70\xD3\x21\x75\x36\x62\xE8\x2E\xF0\xFB\xF0\xF5\x17\x46\xDF\x9C\xEF\x45\x03\x6A\x6F\x48\x25\x22\x35\x51\x9D\x93\x0B\xE1\x02\x79\xA1\x5B\xD6\xDC\x7D\xC7\xD0\x69\x8C\xA8\xEE\x59\x05\xB3\xD0\x70\xAC\x41\x0B\x99\xA7\x3F\xF3\x54\x38\x2E\x04\x49\xBC\x13\x3A\x65\x35\x06\x67\x3B\xAA\x56\x8C\x78\x40\x4E\xEE\x80\xDA\x83\xC5\xC9\x5A\x10\x87\x09\x69\xCE\x3B\x8F\x20\x94\xEC\xB0\x61\x6F\x2E\x3D\x30\x63\xE5\x0F\x7E\xFD\xD0\x74\xD2\x9E\x93\xBD\x95\xA3\x3D\xE1\x2D\x6B\xF5\x24\xD7\x42\xC2\xB5\xF8\x09\x84\x17\x8A\x80\xE1\xA9\xEC\xBD\x43\xA4\x1F\x60\xE5\xB2\xFA\x58\x61\xA9\x87\x39\x1F\xA2\x71\xDC\x7B\x2A\x12\x29\xB0\x88\x73\x07\x95\x1C\x71\xEB\x5D\xE9\xBF\xB4\x19\x5D\x00\x0E\x9D\x4F\xB2\x0D\x3A\x0E\xFF\x50\xE8\x8F\x30\x51\x8F\x3C\xA0\x85\xD7\x97\x48\x02\x92\xBF\x09\x45\xF1\x01\x68\xEC\x54\xA4\xB5\x08\x11\xC9\xD4\x76\x4C\x30\xD8\x97\x49\x14\x1B\x63\xC2\x57\xC3\x68\xA0\xD5\x37\xF8\xB8\x7D\x54\x9D\x63\xB1\x92\xB2\xC5\x34\x7B\x50\x28\xC0\xFB\x0F\x54\x72\xF6\x55\x97\x0E\x49\x51\x1A\xBC\xE5\x3E\x24\x12\x7B\xEA\x52\x84\x0A\x42\x29\x67\x81\xA3\x0B\xAD\x97\xF1\xAE\xE1\x12\x7E\x4C\xA1\x36\xDA\x6E\x07\xC7\x8B\x89\x98\xEA\x57\x5C\xC3\x54\x27\x05\x9B\xC0\x6D\xC6\x70\x04\x5A\x61\xC3\xCF\x50\x91\x1A\x67\x1A\x61\x1D\x60\xFF\xEF\x2B\x50\x36\xAD\xF2\x95\xE2\x18\x5D\xDF\x1C\x8E\xA4\xB2\x00\xD8\xFD\x4A\x4C\xCD\x73\x6E\x9B\xCB\x78\x98\x87\x84\x84\x88\x9A\xC8\xDD\xE8\x30\x97\x1F\xAA\xA2\x73\x64\x58\x20\xD1\xDE\xB9\x31\x56\xCE\xED\x29\xB7\xD4\xCA\x7B\xF5\x4D\xBC\x72\x43\x93\x3F\xF8\x70\x1C\xDB\x27\xB3\x8C\x45\x13\x6D\xDD\xE3\x4D\xCC\xA3\x76\x71\x56\xF1\xCA\x16\x27\x46\x3E\x85\x6F\x99\x89\x7A\xB3\xB8\xBF\x84\x0C\x76\xC1\xD5\xFF\x65\xB4\x2A\xB3\x90\x97\xF6\x81\x62\x71\x24\x45\xDB\xAF\x0F\x6F\x3B\x17\xDD\xCB\xA7\x7F\xB0\x30\x60\x94\x20\x88\x6C\xD8\x76\xE6\x67\xBA\x05\x00\x6C\x22\x93\x17\x10\x4C\xC1\x64\x58\x36\x1B\xD9\xC4\x8A\x6B\xC6\xA6\xB9\xC4\x46\x79\xA2\x4C\xEB\x6D\xFD\x49\xC0\x67\x10\xB0\xF8\x29\x95\x2C\xD1\xE3\xC6\x1D\x33\xFB\x5D\xA1\x53\x69\xD2\x1D\x95\x60\x6B\x98\x73\xBE\xB4\x28\x06\x1B\x67\x98\x3A\x3F\x4E\x0C\x53\xFF\xC8\x88\xA9\x7F\xF5\xC3\x86\x25\xF5\x34\xD0\xDE\x38\x09\xCA\xBF\x26\x86\x71\x7A\xE9\xA5\x21\x7F\xE3\xB3\x85\x5D\x33\xC6\x14\xE4\x94\x89\x4B\x89\x7D\x81\x30\x84\xC9\x75\xD9\x11\x53\xD0\xDF\x79\xCC\xBC\x9E\x29\x74\x01\xEC\x5D\x7D\x15\x8A\x7E\xD9\x51\x40\x82\xA5\xAA\x24\xF9\x74\xAD\x6E\x2F\xD5\x46\xE9\xBE\x88\xC6\xC8\x2D\x6D\xA1\xC1\x38\xB5\x87\xA7\xFD\x4D\x94\x92\x94\x3A\x9A\x84\xD3\xFF\x60\x91\x0C\xD3\xC7\xCD\x48\x77\xAB\x88\xDF\x10\xC4\x11\x70\x31\x33\xC4\xEF\x9D\x94\x09\xBF\x32\xC1\x9B\xA2\x2A\x82\xEE\x4C\x10\xF6\xB3\x3D\x90\x13\xB9\x9B\xF5\x1A\x3F\x3E\x32\x74\x81\xB2\x1D\xF1\x93\x64\x89\x9B\x6D\xEA\xEE\x3B\xF4\x04\xCD\xA3\x07\x7B\xC6\x52\x50\x35\xC7\xE9\x84\x44\x07\x1C\xEC\xA1\x82\x7F\x60\xAB\x4E\x3F\x9C\x48\xBE\x06\x34\x46\x62\x92\xD0\x3B\x5B\x3D\xE6\x12\x30\xCF\xEC\x7E\x7B\xDC\xD9\xF6\xB5\xBC\x74\xBB\xCE\xED\xA4\x0A\x9C\x0B\x36\x6C\x00\x91\x7E\x8F\x03\x8E\xE8\x42\xD7\x41\x01\xF8\x68\x52\x33\xE1\x44\x06\x33\x74\xE9\x46\x49\x4E\x1A\x7F\x14\x4A\xDA\x32\x03\x3C\x5D\x81\x10\xD0\x91\x29\x8F\x6A\x05\x45\xC5\x22\x53\xA3\xFD\xF0\x37\x88\xB8\xD2\xA8\x99\x23\xAD\x2D\x8E\x5A\xFE\xBD\xF1\xA5\x75\x9E\x57\x03\x5C\x47\xEC\xA0\x3E\xD9\x03\x70\x5A\x9B\xC8\x14\x70\x32\x2A\x75\xAB\x55\xAE\x6E\x51\x25\x71\xAD\x22\xBC\xAA\xC1\x93\x9F\xB7\xCB\x4C\xE9\x93\x82\x5C\x24\x96\xCF\x4D\xAF\xD4\x0E\x71\x0A\x3D\xCD\x71\xA0\xE4\x7E\xD8\x8F\x11\xCC\x9B\x83\x43\x92\xA3\x77\x66\x0D\x7D\x28\x66\x2A\x4D\x8D\xC1\x09\x7A\x0D\x88\x59\x1B\x3A\x0C\x2C\x28\x15\xCB\x72\xF3\x49\x0B\x81\x78\x13\x5B\xC4\x82\x24\xEA\x65\x9C\x17\x12\xFD\x4A\x77\x91\x91\x82\x39\x79\xF4\xEC\x7A\x41\x43\x33\x23\x47\x78\x00\x28\x77\x4B\x1C\xB5\x47\x91\x19\xD4\xDD\x55\x27\x64\xF6\x10\xCA\x3A\x48\x6C\x2E\x8B\x2B\x66\x79\x2B\x88\x37\xE5\x93\xD7\x0F\x97\x7F\x56\xE3\x01\x57\xA2\xCB\x2C\x4D\x69\xFB\x0D\xF2\x42\x8D\xBF\xF0\x67\x88\xD3\xBB\xD3\xAC\x09\xB2\xAA\x96\x84\xA0\x1D\xB3\x67\x42\x2D\xEA\x97\x3E\xD0\x6B\x56\x39\xB8\x0F\xC5\x3C\x0F\xE4\x06\x19\x33\xCD\xCE\x24\xC5\x33\x56\x26\xE0\xFB\xE8\x2E\xB1\xDD\x25\x25\x09\x64\x62\xDF\x31\xB3\xE3\x1D\xE8\x0A\x3C\xA3\x30\xA4\x80\x86\x80\x2C\x28\x7D\x05\x1E\x4C\x30\x3A\x40\x21\xCF\x30\x85\x92\x60\x21\xE8\x32\xE1\x5E\x6D\x5E\x85\x62\x2B\x6B\x03\xB2\x5B\x80\x62\x86\x1F\xF0\x0D\x7C\x7A\x9E\x48\x32\x65\x0F\x5A\x69\x3F\x13\xAA\x02\xC6\x83\xDA\x61\x1F\xE4\x9C\x34\x07\x52\x62\x74\x47\x1E\xC3\x5C\x76\x40\x7D\xB7\x68\x7F\x89\x8A\x98\xE0\x09\x81\x79\x04\x9E\x55\x1B\x89\xDB\xE4\x41\xED\x9B\xB7\x05\x7C\x55\xB5\xC0\x75\x8B\xAE\xF7\x28\x2E\xEF\x87\x15\xB8\x73\x40\x67\x94\xBC\xA6\xD1\xDF\xCD\x01\xA4\x16\xBC\xB6\x94\x42\x01\x77\x82\x85\xEF\xD8\x89\x1B\xE0\xAA\x63\xB1\xB2\x1D\xD9\xB0\x08\xB8\x35\xFB\xBF\xCD\x12\x38\xDC\x9E\xF6\x80\x8C\xE8\xB5\x3C\xA5\xF4\xEA\x2D\x4E\x33\xC5\x0E\x85\x41\xC1\x6D\x03\xE9\x55\x31\x65\x14\x06\x82\x12\x36\x92\x3E\x54\xA7\xAF\x10\xB1\x5A\xE7\x41\xB0\xE5\x7D\xDC\xC6\xBB\x4D\x0E\x20\x51\x7A\x8E\xA9\x9B\x99\x8E\xBB\xA0\x2F\x75\x2D\x23\xA2\xEB\x3F\x8D\xFC\xA6\x7E\x10\xB7\xD8\x89\x3F\x66\x41\xD1\x10\xB4\xF6\xDE\x3F\x31\xBD\x00\x0B\x69\xF9\x5A\xA0\x5D\xF6\x8D\xF2\x95\x85\x59\xFD\xB8\x07\x0E\x3E\x73\x25\xD3\x2B\xF3\x0C\xC3\x8C\xCB\x6B\xF7\xC0\x2B\x4A\x56\x24\x1B\xC1\x58\x99\x9F\xEB\x00\xA3\xB4\xC4\x31\x91\xEA\x83\x31\x80\x13\x31\xE7\xDB\xE5\xEE\x52\xCA\x36\x9D\x96\xC2\x79\x2F\x00\x2A\x05\x67\x99\x9D\x3F\x7D\xE1\xDC\x58\x46\x58\x88\x03\x61\xAA\x24\x85\xB8\x4A\xE0\xBC\x64\x1C\x27\x8C\xD1\xC6\xC7\x75\xBE\x36\x9E\xC5\xA0\x0B\xF7\xDB\x27\xEC\xE2\x17\x16\x17\x36\x73\x55\x9C\x77\x95\x60\x49\x15\x28\x64\xAB\x86\x86\x54\x8D\x58\xD5\x58\xA4\x1B\xEB\xE4\x4A\xAC\x20\x1D\xF2\x24\xB5\x0C\x08\x57\x6E\x17\x37\xF6\x5B\x55\xC4\x5E\x2E\x08\x3A\x09\xFD\x1B\x8D\xF8\x2D\x92\xC3\x73\xE0\xAD\x4D\xF2\x9C\xA4\xC0\xDB\xD4\xBE\x19\xE8\xDF\xF6\xC7\x73\xAF\x3B\x0C\xC1\x63\x68\xCB\x57\x87\x12\xF2\x2E\x7F\xDA\x0D\x06\x6C\x70\xF1\x8F\x8E\x31\xF8\xE8\xF2\x10\x92\x1A\x38\xF4\xD5\x1D\x40\x21\xB6\x47\xDA\x48\x20\x8F\xE5\xDE\x25\xCB\x03\xA9\x67\xBB\x7E\x58\x37\xBF\xAC\xC8\x4A\x51\xCD\x21\x50\xA8\xE8\xD1\x1B\xED\x28\x52\x45\x7A\x62\x43\x4F\xFF\x3C\x9C\x0C\x0A\x24\xB7\xE8\x48\x2B\x5B\xAC\xA2\x20\xE4\x8C\x80\x21\x5B\xA2\xEC\x42\x6E\x02\x3B\x63\x85\x52\x01\x30\xB3\x7B\xBB\x90\xCE\x0A\x69\x5D\x40\x58\x6E\x03\x20\xB7\xA6\x85\x4B\x41\x96\x77\xA8\xEF\xEA\xDF\x4C\x25\x25\xA0\xCD\x9A\x7B\x61\x15\x1F\xB7\x54\xF2\xBD\x6B\x15\x8C\x9F\xB1\x5A\x9C\xD1\xEA\xD0\x72\x5F\x9C\xE9\xF7\xF7\xFA\x89\xC1\xEB\x0E\x3A\x32\x33\xC1\xFB\x51\x5D\xFD\x35\x9F\x6F\x89\x11\x59\x5E\xB6\x99\x65\xE2\xD5\x03\xE4\x99\x74\x0A\x32\x75\x41\x2E\x1A\xC4\x70\xCA\xEB\xA8\xBE\x61\x06\x5F\xEB\x8D\x9C\x93\x83\x5D\x46\x6B\xC0\x24\x2A\x8B\xDC\x64\x8E\xB9\x03\x3D\x1C\xB5\x83\x90\xB1\x09\xB7\xBE\xA3\x66\xC2\xAB\x28\xD2\x06\x6E\x72\x3E\x21\x8D\x7F\x0C\x43\x5F\xAA\x84\xE0\xFF\x2C\x94\x9E\x28\xAA\xAD\x63\xA7\xFA\x29\x2E\x22\x06\xB3\xF5\x73\x06\x72\x1F\x47\xEA\x6D\x0C\x9C\xEC\xD6\x73\x90\xEF\xE9\x76\x71\x8E\xFB\xE7\x84\x0D\x54\xD6\x03\xF6\x35\x61\x29\x5E\x7D\xB5\x25\x7E\x8B\xBC\x3D\x5A\x62\xD1\xEE\x16\x65\x12\x8E\x8A\xEE\xF3\x30\x15\x55\x63\x85\xE3\x7E\xD2\x35\x29\x76\xAC\x4F\x8F\x3D\x01\xA5\x74\x65\x54\x34\x70\xC9\x44\x51\xBF\xF2\xD9\xF9\x9D\xD0\x7A\x55\x47\xFF\x7B\xDB\xD5\xB8\x77\x46\x95\x5C\xDD\x83\x13\x6D\x9C\x19\x61\x83\xDE\x20\x4D\x8C\x78\x96\xD8\x8A\x17\x7F\xD8\xB3\x9C\x44\x95\xFF\xB6\x51\x32\x5B\xF7\x7C\xF2\x9E\x1B\x2C\x5B\xC7\x8F\xC9\x04\x97\xF6\xE8\xBD\xB9\x29\xFC\xBF\xF6\xEC\xB7\x65\x0D\xF8\xFE\x78\xA0\xEF\xEF\xDE\x33\xE4\x3E\x27\xD6\xE3\x59\xDC\x6F\xAB\x52\x8A\x93\x0C\x78\xDB\x78\x66\x2D\xC4\x57\x84\x99\x0B\x88\xED\xD9\x2A\x58\x82\x30\xF8\xE1\x37\xFE\xC4\x38\xFD\x15\xA1\x36\xEC\x5F\x5D\x48\xBA\xE5\x62\xD1\xD6\x74\x8C\xCF\x65\x93\xCD\x8A\x34\xFA\x27\x5E\x26\x14\x33\x88\xC8\x5F\xB7\x68\x8F\x15\x2C\x97\x4B\xFA\xF1\x19\x1C\x7C\xBB\x87\x4D\xA0\xC7\xBF\xDA\x76\x01\x05\xC6\x0F\x35\xFC\x45\xE4\x14\xA1\x44\xB7\x66\x61\xEA\x4D\xBE\x3B\xB1\xC2\xF2\xC3\x19\xE7\x53\xAA\x30\x03\xCD\x4D\x07\x02\x3B\xE7\x68\x6A\xA4\x8F\xFE\x52\x2C\xEF\x7B\x75\x00\x65\xAC\xC4\xB1\x0F\x33\xCB\xD6\x3B\x1C\x1D\x88\x2A\xF5\x63\xE2\xFC\xE3\x96\x45\x76\x3B\xE7\x88\x52\x95\x02\x97\xAF\xFC\xB0\xCE\x0E\x75\xD8\x3F\xD8\xB4\x31\x6C\x09\x2F\x2F\x60\x5D\x50\x52\xE0\x81\x1F\x8F\x2F\xD3\xDD\xAE\x6D\xAC\x58\x30\x8F\xB4\x4A\xDF\xCF\xC0\x2C\x26\xFD\xF2\x8A\x2E\x74\x41\xB1\x51\x66\x26\xEC\xF5\x4C\xE6\x48\x4A\x04\x56\x28\x82\xD5\x65\xD2\xA1\x23\x02\xB9\x8B\x5B\x3B\x40\x8F\xC7\x24\xFE\x81\x7E\xC3\x6F\x2C\x63\xD1\xFC\x8D\xF1\x8C\xD0\x6D\x02\xE7\xEA\xE0\x42\xBA\x14\x8D\x3D\x08\xB5\x59\xD5\xF3\x0A\x96\x63\x61\x22\x70\x29\x84\x8E\xE9\xE3\x62\x78\x75\xA7\x92\x79\xD6\xA1\x46\x4E\xB7\xAC\xE9\x93\x7E\x56\xEF\xB9\x47\x15\x3F\xDC\x52\x61\x9C\x60\xA1\x7C\xC4\xCC\x1F\x70\xA3\xB0\x97\x95\xE6\x17\xE0\x92\x97\xBE\x94\xA8\xBA\x72\x3D\x9E\x64\x12\x04\x93\xEF\x6A\xBC\xB7\x74\xA5\xEE\xB0\xE2\x9D\x17\x51\x49\x88\xF4\x2B\xE7\x92\x4A\xAD\xB7\xA2\x2D\x56\x62\x0B\x80\x18\x72\x5C\xFE\xB9\x40\xDF\xAA\xD5\x1F\xF4\x8A\x08\xDE\x10\x43\x0A\x83\x2C\x6C\x5B\xEF\xB6\x69\x34\xFC\x18\x43\x6F\x9E\x3B\x0C\x1D\x07\x69\xD4\xD2\x9D\xCB\xB9\x59\xDD\x51\xDB\xA9\xC4\x39\x2A\xD3\x6B\xC6\x7F\xF2\xB1\x17\x90\xF9\x25\x6B\xF1\x06\x9C\xF3\x83\x3A\xCC\x1B\xE9\xF5\x82\x4E\xFB\x51\xD5\xEA\xA9\x53\xDF\xE6\x40\x0A\xFA\x32\x38\x17\xE5\xC6\x3F\x9F\x45\xCB\x61\xDC\x0D\x4F\xB3\x97\x86\x37\x01\x8F\x63\x2E\xCE\x9B\x2C\x34\x74\xFD\x36\xA2\x97\xBC\x60\x7E\xB3\x46\x3A\x68\x77\x3D\x8F\x25\x15\x2E\x79\x35\x06\xAC\x3C\x0F\xF6\x54\xB5\x6F\xF4\x8E\xA8\xAA\x7E\x9A\x22\x5C\x27\x3A\xBD\x8C\x66\x11\x50\x0C\x0E\x58\xD0\x8B\xE9\xE1\x1F\x73\x06\xB3\x41\xD7\x02\x69\xBD\x83\x4E\xAB\xA8\x9A\x33\xFE\x65\xA4\xC4\x00\x63\x89\xF8\xEA\xA5\x09\xC5\x85\x44\xEB\xEB\xB0\x3A\xFD\x28\x53\xF8\xE0\x1F\x24\xC0\xAF\x52\xF5\x39\x37\xA0\xBF\xB6\xC1\x58\xCA\xF3\x01\xA6\x10\x4D\x78\x48\x02\x9C\x5C\xB7\xE8\xA8\x1F\xF8\xCE\x85\x84\x53\xF5\xF3\x6D\x5E\x34\x23\x63\x62\xB5\x81\x2C\x04\xC6\xE4\xDA\x09\x05\x86\xE1\x48\xF9\x1A\x55\x32\x6A\x40\xDC\x32\x9F\xB7\x11\x5B\x3D\x30\x01\x9F\xF4\x1D\xDC\xB1\x08\xAC\x0C\x5C\xB8\xD4\x65\x9D\x1A\x3B\xB9\x4D\xE8\x3B\x01\x09\xF5\x34\x2F\x28\x5A\x49\xDB\x62\x9C\xDE\xFA\x54\xC7\x2B\xCC\x4C\x6F\x7C\xBC\x0A\xEC\xC7\xBC\xB7\x0D\x23\x07\xDA\xFD\xCA\x33\xDB\xE6\x17\x65\xC4\xC2\xD4\x0B\xF1\xF9\x31\x87\xFA\x4E\xA0\x05\x57\xB3\xBA\xE2\x4D\xBE\x49\x21\x35\x3C\x94\x96\x90\xB2\x50\xC7\x59\xC7\xB6\x77\xA2\x0B\xB0\xB6\x6F\x7A\x68\x6D\x96\x06\x49\x96\x4E\x88\x25\x25\x78\x08\x04\x16\x22\x27\x3A\xAC\xF6\xC6\x49\xA1\x91\x3B\x13\x4E\xFE\x47\x84\xB2\x2F\x39\x6E\x7C\x9A\x7D\xCF\x86\xF0\x18\x9B\x99\x4B\xD2\x57\x2C\x24\xAD\x89\x6B\x76\xC0\x4A\x76\x48\x2E\x85\xD0\x46\x7B\xF9\x43\x9E\xB2\xB3\x00\xCA\x02\xBA\x72\xA7\x36\xBD\x99\x6B\xBC\x71\xE4\x51\x2F\x87\xE8\x59\x2C\xE5\xBA\x7D\xF3\x31\xB4\xC9\xCA\x95\x0A\x00\x54\xF4\xE9\xB7\x6B\x39\x13\x43\x91\x7B\xDF\xA4\x98\xFE\x48\xCC\xCC\xBB\xCA\xFD\xB1\xA0\xB8\x5F\xC3\xDF\xD1\x37\x9A\x42\x27\x1D\x67\xC7\xBE\x69\x81\x00\x82\x3E\x93\xC4\xAD\x06\x4C\xCE\x9B\xE0\xCC\x33\xFD\xFF\x65\x7E\x9B\xBA\x7F\xFA\x13\x4A\x5C\x46\x72\x8B\x78\xDE\xB8\xF8\x07\xDD\x7E\x32\x7B\x37\x2B\x25\xF7\xEA\x9E\xC1\xB1\x3E\x6C\x1C\xA8\xC6\x82\x3E\x52\x72\xC5\x3A\x5A\x20\x7E\x13\xBF\x51\x89\xB6\xB9\xCE\xC4\x2F\x85\x53\x6B\x1D\x68\x1C\xDC\xCD\x3D\x43\x5A\x6B\xC8\x29\x0B\x41\xDD\x70\x8B\xAC\xC0\xCF\xB5\x5A\x9E\xD6\xF1\x9D\x01\x79\x21\x0F\x32\xB5\xCB\x18\xDF\x8E\x85\x28\xF5\x29\x5E\x52\x56\xCE\x48\xAE\xBB\x75\x5C\x3F\x6E\xE5\x7D\x6B\xD6\xB9\x2A\xB2\x44\x29\x6B\x36\xB8\x24\xFA\x1D\x1F\x4A\xA9\x6F\x5E\x49\x5B\xA0\x0C\x71\x0B\x01\x32\x06\x1B\xB6\xAA\x8F\x66\xF5\x57\x9D\xFA\xF7\x8C\x44\xCC\x98\xF5\x16\x20\xF0\x41\x67\x7C\xC7\xB7\x7D\x6E\x4F\x8B\x1B\x74\x4A\xFF\xBB\x9D\x83\xF3\x64\x28\x0A\x6E\xF3\x04\x3A\x87\x7D\x63\x5D\x62\x70\x75\xFD\xD6\x62\xBC\x74\x6A\xB5\x66\xCF\x0D\x52\x2A\xDC\xBC\xA7\x9D\xC4\x4D\xB2\xFC\xED\xD5\x77\x32\x52\x87\x40\xDC\xCF\xFA\x0E\x57\x69\x3F\x9D\xA7\xB3\x8E\x6F\xB3\xD4\xDA\x11\x89\xC6\x5E\xA5\x21\xFC\x06\xEE\xDE\xEF\x25\x55\x31\x09\xC5\xC0\x9C\x2B\x8D\xF9\x20\x03\xD7\x87\xC9\x5E\xA4\xB8\x83\x13\xB3\x4C\xD7\x19\xA3\x79\x4B\xDF\x3E\x2E\x42\xE8\xC9\x23\xA6\x4A\x26\x87\x02\x0B\x92\xED\x25\xFB\x74\x7F\xCF\xC3\x5B\x70\x65\xC4\x0A\xBB\x1F\xE7\x3C\x9D\xD4\x0D\x23\x7A\xC1\x0F\x29\x73\x04\x29\x48\x5B\xAE\x6D\x98\x3B\xF9\x1B\xC3\x89\x86\xCF\x46\x89\x31\xD2\x40\xD8\x39\xC7\x3D\xC4\x7F\xE4\x62\xC7\xB0\x43\x25\x99\x73\x2F\x77\xB8\xE4\x54\x64\xF3\x74\x74\x1C\x8A\x97\x3D\x55\x68\x5C\x44\x8C\xB0\xC4\xA2\xCF\x1F\x70\xD2\xE0\x7F\x65\xDD\x61\xF2\x0C\xDD\xA0\xED\xE8\x11\x02\x57\x3F\xA6\x45\x57\xD3\x63\x29\xBF\xA1\xDC\xB5\x52\x19\x00\x30\xF9\xA0\x46\x15\x3E\xAA\x4E\xEB\x3D\xE6\x8C\x55\xA4\x71\xF6\x4C\x9E\x3E\xBC\xA6\x43\x7C\xCA\x2D\xAC\x32\x2F\x19\xAB\x1B\x7C\x47\x51\xCE\x64\x36\x49\x82\x3F\x00\x8D\xD8\x22\x88\x6D\xA5\xD7\xC0\xE2\x8F\xD9\xC5\x29\x56\xF0\x1F\xBE\xF1\x91\x8D\xCA\x4B\xF0\x97\xEC\x9D\xB7\x37\xA2\x93\x3A\xFE\xB5\xFF\x2C\x98\x14\x61\xF0\xEF\x41\x4F\xD9\x45\x26\x2A\xAB\x17\xE1\x6F\x72\x7D\xF3\xE9\xD4\xA7\x39\x12\x32\x2C\x61\xB2\xAB\x4E\x31\xB7\x1D\x7B\xAC\x07\xEC\xEB\xBB\x6C\xC0\xDD\xC5\x58\x18\x86\xA3\xCD\x62\xDE\x8F\xCB\x0F\xFA\x75\xCB\x12\x37\x40\x5A\x15\x58\x92\xEE\x3C\x19\x97\x50\x17\x6C\xDF\xF9\x1E\x68\xEC\xC1\xFB\xE5\x78\x3C\x3E\xEC\x0C\xA7\x5C\x0C\x7B\x97\x6A\x14\x3C\xEF\xA0\x48\x83\x5D\xFD\x93\xBA\x1F\x45\x20\x77\x52\xBF\x13\x06\x7C\x4E\x9A\xCB\x3A\xC7\x35\xC3\x47\x5C\x9E\x52\x01\x19\x9D\x78\xAF\x7A\x5F\xF9\xFC\x44\x98\x04\x32\xB7\xBE\xED\x55\xCA\x6D\x0C\xA5\xF2\xB7\x9E\xCC\xC6\x45\xE7\x25\xA3\x6D\x63\xA0\x94\xDD\x84\x34\x18\xB1\xB7\x17\x59\x96\xBF\x71\xE1\xC6\x46\x2C\xE8\xE4\x3D\xF8\x52\xBB\x72\x20\x19\x44\xDA\x89\x09\x9E\x76\x24\x85\xF6\x7A\x99\x23\x0B\x46\xAF\x26\x90\xE8\xC7\x9F\xA7\x3C\x23\x97\x01\xE3\x9D\x98\x7A\xFF\x36\x43\x1D\xAA\x1B\xA4\x5B\xE9\xBB\xAA\x1C\xD8\x6F\x49\xA6\x0C\xC6\x2C\x8F\x2E\x09\xE4\x43\xFD\x5E\xF5\x72\x8B\x28\xD9\x47\x26\xDC\xF0\x86\xB9\x84\x84\xEF\xA5\x19\xF9\xBE\x22\xE5\x50\x47\x86\x4B\x3B\x82\x26\xAE\xC6\x7F\xF6\x02\xEE\xD5\xFC\x60\xF0\x6D\xE2\xEF\x47\x66\xAE\x73\x21\x63\x53\x86\xBE\x99\x0C\xB4\x43\x27\x21\x03\x3C\x0C\xDF\x40\x0F\xB4\x40\x95\xEB\x80\x66\x00\x82\x2D\xF4\x45\x3A\x30\x88\x10\x3D\x2A\xAD\x36\xA9\x42\x2E\x54\x83\xEB\x15\xE7\xC5\x1A\x26\x97\x04\x4E\x0D\x29\xBD\x7F\x0F\x8C\xC1\x3B\x25\x12\xB3\xE6\xFE\x13\x25\x36\xAD\x12\xCB\xB5\x29\xB4\x2B\x54\xEB\x17\x00\x8A\x0F\x99\x0F\x52\x0D\xBB\x5C\x29\x73\x88\xD5\x46\xB8\xFC\xF9\x13\x74\xE2\x0D\xD1\xE7\x86\x96\x12\xA4\x06\xAE\x1D\xE2\xAB\x32\x2D\x80\xBC\xAA\xC8\x63\x06\xFF\xA3\xED\xF7\x26\x2A\xB6\xE3\x60\xBB\x5F\x19\x42\xAE\xF5\xE8\xDE\x14\x58\xD7\x1C\xDE\xDF\x21\xF7\x6A\x68\x0B\x45\x3E\x15\x12\x01\x7F\x7B\xAF\x50\xD7\x7D\x7A\xC5\x1A\x46\x46\xDD\x15\xD1\x03\xC3\x2D\xC3\x7E\x71\xE5\x51\x34\x05\xD4\xA2\x84\xC5\xC7\xAB\xFE\x1F\xA8\x7B\xA4\x2C\x1D\x15\xF1\xCC\xAE\x50\xB3\x7B\x50\x5A\x8D\x78\xA0\x26\x65\xE7\xE0\x93\x65\x59\xE4\xDC\x36\x52\xCB\xC2\x4C\x08\x9B\xA8\xC0\x5B\x0B\xE3\xBC\xCB\x8A\xDC\x52\xF8\x3B\xA4\x89\x40\x8D\x38\x13\xA3\x1E\xBF\x02\x8E\x54\x89\xC2\x2B\x9C\x6D\xE0\xA9\x56\x91\x63\x71\x6B\x6F\x1A\x0F\xF1\x11\x93\x36\x10\x4F\x1E\xED\xBC\x51\xFC\xFC\x99\x85\x15\x33\xA5\xF3\xD9\xBA\x39\xC7\x57\xC2\xE0\x44\x1B\xF1\x87\xA5\x8B\x97\xE2\x1A\x8C\xE3\x71\xC7\x88\xAE\x70\x34\xAB\x1E\x96\xAD\x20\x3D\xB5\x63\x8B\x91\xCB\x0B\x1F\x61\x42\x16\xB0\x8F\xB0\x6E\x4E\x7D\xBD\x22\x12\x66\x43\x56\x81\xEC\xE7\x1C\x68\xF1\x05\xC0\xED\x4C\xC9\xDB\x0C\x91\x5B\xAE\x40\x16\x4B\xCB\x2C\xE0\xD5\x1E\x40\x60\x82\xD6\xAD\x64\x3F\x35\xD0\x9A\xB4\x66\xBE\x54\xDB\x1E\x55\x79\x15\x6F\x89\xB6\xFD\x16\xE8\xBB\x9A\x9B\xDA\x74\x10\xD1\xCB\x5E\xD9\x8A\xB1\xC7\x15\x3B\xEB\x7E\x5A\xFA\x2C\x5D\x3F\x37\xFA\xBD\xEC\x75\x0A\x2A\x53\x0C\xF2\xE5\xFA\xF6\xFF\x43\x48\x4B\x0D\xFD\x83\x49\x0D\x1F\xE6\xC1\x20\xA0\xEA\x33\x6F\x6C\x50\xC8\x22\xBC\x50\xCB\x24\xEB\x19\x03\x50\xA6\x98\x88\x62\x09\x7E\x02\xCA\xD0\x01\xF2\x94\xC5\xD9\xB6\x7C\x5A\xCB\x2B\x65\xE7\x4C\x4D\xD1\xD0\x0C\xF9\x23\x50\x92\xDB\x90\x0C\xBB\x52\x6B\x81\x47\xB6\x6E\x2D\x03\x58\xA0\x97\x72\xBA\x8B\x50\xC3\xFF\x63\x87\x38\xB4\x59\x80\x96\x59\x8B\x16\xB5\x2D\x54\xCC\x27\x3B\xB9\xAA\x23\x42\xFD\x22\x92\xA5\x65\x87\x8C\xBE\xA3\x6E\x85\x15\x18\x71\x28\xF8\x18\x4B\x95\x98\x44\x14\x81\xC9\xB2\xC0\x7F\x72\x94\xF8\x34\xEB\x8B\xCF\xD2\x9D\x31\x83\x67\x51\x91\xC6\xC7\x8D\xB1\x05\x47\xC9\xE5\xCD\x0E\x21\x2E\x62\xBD\x57\xFD\x5B\x12\x43\xCD\x6B\xE3\x35\x3D\x78\xE2\xD6\x97\x3E\xCE\xC8\xF4\x86\x62\xE5\x76\x0F\xD0\x5E\xE0\xC7\xC1\xF6\x6C\x39\xED\x4E\x0B\x2A\x49\x3C\x7F\xF9\xFE\x74\xE9\x79\xF7\x11\x36\x39\xDE\x38\x19\xCC\x75\x38\x0D\xC8\xD9\xEE\x0A\x6A\x4F\x08\xB3\xA0\x52\xAD\xDD\x9E\x9A\x97\xCA\x97\x21\x55\x65\x58\x17\x1B\x82\xE4\x15\x28\x59\x9D\xED\xF2\xFF\x6B\x12\x3F\x80\x96\x3B\x93\xA9\x52\x9C\xB1\x09\x15\x77\xFD\x47\xD0\x58\xDC\xA6\x74\xBB\x3F\x76\x20\x94\x2D\x28\x4B\xBF\x47\xEF\x0D\x4A\x98\x9E\xB1\xFF\x70\x0A\x5B\xDD\x91\x7F\xB8\x4E\x2C\xF4\xEF\x8C\xF2\x77\x67\x25\xAF\x3B\x6F\xB4\x7E\xEE\x00\xB9\x98\x17\x57\x0A\xBC\x6F\x9F\x3C\x23\xC1\xC9\x27\x73\x46\x66\x3C\x4C\xBB\x22\xD2\x38\xF4\x1B\x23\x50\x2A\x74\x06\x68\xD6\xAD\x32\x65\x7D\xC6\x2D\xE0\x6E\xB8\x9D\x48\x4E\x4A\x7D\x18\x2B\xB7\x87\x93\x6D\x94\x58\x36\xBE\xF2\x6E\xA5\xC6\x1F\x96\xC4\xD0\xD9\xDF\x64\x1C\x5A\x0A\x6F\x00\x9C\x3A\xD7\xA1\xED\x16\x1D\x24\x18\xB6\x76\x4C\x6E\x06\x3A\xBF\xF9\x46\x73\x0C\x12\xE4\xE7\x1E\x38\x9F\x73\x73\xBB\x24\x53\xD3\x54\x37\xDA\x05\xB9\x07\x8F\xF1\x16\x60\x38\xA4\x08\x76\xF7\x37\x3B\x8A\x3F\x8F\x28\xD5\x36\x76\x2C\xD2\x3B\x26\x05\xA6\x40\x58\x6E\xA3\x22\x5D\x3F\xEB\xEE\xEB\x89\x97\x56\x69\xB9\x09\x9F\x6B\x1A\xFF\x24\x79\x2D\x0B\x10\xE4\xC6\x95\x91\xEB\x18\x25\x7F\x70\x3A\xE3\xC2\x6A\xEF\x23\x76\x71\xDB\x47\x62\x07\x9D\x02\xE5\xE9\x13\x14\x0E\xC2\x36\xBE\x38\x9E\x87\xC4\xD0\x18\x48\x53\xEE\x88\x12\x2D\x4B\xF1\x5D\x91\x58\x7C\x11\xBA\x93\x99\xB1\xBB\xDD\x6B\xA7\xC5\xA2\x5C\x92\x6C\x34\x2A\x40\x9D\x6F\x03\xDB\x45\x44\x19\xD1\x85\x46\xE5\xA6\x7C\x78\xAE\x0F\x57\x45\x96\x1D\x59\x6C\xF4\xD8\xE0\xC5\x42\xED\x65\x87\x23\x81\xF7\xF7\xFF\x94\x09\xD0\x02\x48\x23\xE1\xEF\xBB\xBC\x5B\x8A\xDC\x7A\x29\x2C\xA5\x27\xB2\x51\x73\x54\x8E\xF9\x75\x80\xA6\xE3\xAF\x0E\x2A\xC7\xFF\x8E\x6E\xAA\x40\xC3\x66\x43\x7E\x73\xC9\x1A\xEA\xB1\x71\xB0\x31\xE2\xCC\x28\x3B\x42\xA6\xA5\x71\x19\xF1\x41\x01\x3B\x56\x3D\x1D\x19\x87\xE5\xE6\xB1\xDC\xCD\x52\xC1\xA5\xE1\x10\x96\xB2\x5D\xF0\x54\xE9\x9E\x58\x7F\x44\xEE\xC7\x11\xBD\x76\x70\xE2\x86\xFA\x67\x3B\xAC\x31\x14\xBE\x23\x84\xF6\x96\x50\x8A\xD8\x70\x92\x0E\x14\x0E\xD8\x02\xD7\x80\x4F\x57\xE1\xC4\x9E\x80\xFD\xF8\x29\x22\x45\x82\xB0\xCD\x70\x98\xBC\x89\xC2\xAE\xA8\x67\x8B\x69\x0E\xDE\x34\x33\x53\xAF\xFB\x43\x9D\xFD\xAE\x7B\xBB\xA1\x86\xF0\x61\xAD\x1A\x7D\xA1\x36\xAE\x78\x2D\x30\x41\xDD\x20\xFC\xF4\x0E\x23\x4E\xBC\x0C\x9D\x12\x4A\xBF\x03\x2E\x67\x28\xDD\x07\xA3\x39\xDB\x79\x99\x1D\x08\x66\x07\x8E\xCE\x43\x5E\x84\xBA\xBC\x53\x8D\xA2\x66\xCD\xB0\xF7\x97\x3D\x77\x3D\xF6\xB1\x99\x44\x45\xB0\x14\x7C\x71\xAB\x15\xC5\xB0\x09\x18\xBC\x02\x37\x66\xC7\x4B\x20\xA5\xD7\xE5\xB7\xE3\x3F\xC0\x36\xA1\xFD\x16\x54\xCB\xBC\xE4\xEB\xAC\x5A\x16\xFC\xB4\xE0\xF4\x61\x2C\xFF\x0A\x4C\x47\xE7\x37\x03\x09\x49\xE7\x62\x2D\x90\x4F\x49\x7A\x21\x45\x66\x65\x06\x1F\x8F\x7E\xA5\xBC\x55\xA7\x1A\xF8\xF6\xFD\x6C\xCE\x6D\x70\xF4\xDB\x8A\x6F\xBB\x91\x90\xDF\x50\x23\x6C\x90\x76\x31\x9C\xBE\x41\xC2\x40\x1E\xCD\x54\xFD\x61\x0A\xF4\x2A\x29\x2F\xC9\x0A\xFD\x9C\xFE\x7C\xCE\xB3\x29\x10\x14\xFC\x17\xBB\x94\x0D\x9D\x3E\x2C\x92\x14\x14\xF0\xB5\x85\xCC\xAB\xEB\x32\xD6\x50\xC4\x4F\x3C\x6E\x05\xA8\x4B\x31\x40\x7A\x2B\x81\xF0\xE2\x71\x8B\x0A\x3D\xBF\x87\x6D\x90\x3C\x58\x86\xF0\xFD\xB5\x60\x09\xFE\x8B\x25\x94\x3B\x8B\x89\x8D\xB4\xDA\x38\xC9\xAF\x86\x51\x8C\xA1\xAF\xA9\xC5\x11\x79\x2D\x8A\xDC\x46\xB4\xCF\xF8\xB8\xB9\xA6\xA9\x77\x94\x6D\xEA\x43\xC4\xB4\x85\x80\x62\x80\x7B\x76\x7C\x70\x05\xB3\x91\x52\x66\x03\x95\x61\xF5\x71\x13\x7B\x50\xBF\x76\xE6\x4A\x10\x6E\x5C\xA2\x59\x24\x87\x22\x7D\xFA\x37\x9E\x59\x90\x37\xE8\x4F\xCA\xF0\xB7\x7F\x83\x84\x14\xFA\x7D\x25\xC4\x77\x02\x1F\xB6\x0A\x19\xE9\xBE\xB4\x82\x0F\x16\x3D\x1E\xD0\xAD\x92\xDA\xB5\x39\x46\xE9\x06\x8B\x0B\xF6\xAC\xC5\x7D\x51\xC4\xEB\xF3\x31\x8A\x84\x52\xD2\xDB\xBE\x48\xF9\x04\x27\x06\xFC\x6B\x04\x3C\x40\xC5\x9A\x46\xC6\xC1\x4F\xCE\x19\x8A\x35\x79\xB4\x24\x49\x5A\x36\x48\x05\xF2\x98\xE9\xF5\x04\x26\x0F\x79\xA2\xF1\xD1\x64\x93\xEB\xE8\xE4\x78\x24\x9C\x5B\xAD\xB4\xD9\xF4\x19\x05\x6D\x1C\x6F\xD8\x0D\xF4\x6C\x21\xF5\x1F\xC3\xC1\x0B\xD0\x40\xD5\xFA\xF6\x35\x4C\x17\xA3\x66\x8B\x66\x85\xCC\x8F\x48\x85\xEB\x36\x14\xE4\x47\xD0\xD5\xB2\xD7\x53\x16\x58\xDD\x6A\x5F\x06\xB6\xE5\x51\x6D\xCA\x94\xF6\x05\x93\x30\xC4\x2F\xCB\x30\xD6\xD4\xBB\xA3\xF4\x3C\x26\x13\x02\x7C\xD0\x46\x55\x7B\x6B\x42\x29\x36\x7A\xDE\x20\xF5\x84\x6B\xBC\x0D\x4D\x19\xA9\xDF\x37\xA1\x99\x33\x84\x26\x3D\x0D\x40\xB2\xF1\x9D\x06\x74\x7F\xF1\xBD\xA9\xE6\xFA\xEE\x07\xB5\xAC\xB8\x9D\x21\x49\xC9\x06\xD1\xFE\x44\x17\xA3\xDD\x6D\x93\xE0\x87\x55\x24\x65\x46\x56\xA7\x35\x6F\x23\x11\x1D\xC4\xB8\xD6\xE3\x61\xE0\xF0\xD5\x3D\x83\x72\xC2\x60\x8A\x82\x47\x64\x9E\x6A\x99\x3C\x3A\x07\xD4\x4C\x1E\x53\x57\x7A\x85\x91\xA3\x51\x3C\x68\x21\x76\x17\xD8\xD1\x50\x2D\xAD\x2A\x0D\xC5\x07\x10\x48\xBE\x12\x3B\x96\xF2\xA9\x46\xB1\x4E\x33\x6F\xB0\x17\xCB\x19\xF0\x06\xF5\xCE\x58\x3E\x64\x61\x74\xB9\x62\x46\x6D\x64\xCF\xE5\x09\x28\xEB\x6B\x9A\x2B\x97\xBC\x3D\x42\x51\x6B\x92\x9F\xF5\xB0\xA1\x2E\x9C\x52\x7C\x04\x61\xF5\x73\x40\xC2\x11\x9F\x3B\xE0\x1E\xDD\x03\x44\x7B\xB2\xFF\x9A\xC6\x05\x97\x9A\xEA\x32\xA9\xC0\x1D\xA1\x7D\xE8\x7B\xCC\xC9\xB4\x72\xAC\x69\x65\x45\x76\x3D\x95\x02\xDA\x63\x06\xCF\xDF\x56\x78\x12\x78\x68\xA7\x4D\xD0\xE7\xEF\x26\x09\x75\xDF\xB8\x65\x83\x6B\x43\xCB\x0C\xA1\x8A\x2B\x22\x90\x60\x69\x82\x66\x6A\xF6\xA3\xB3\xBF\xA0\xB2\x92\x93\x14\x9F\x03\x30\x94\xE0\x24\x8E\xAC\x11\x24\x99\x54\xA3\xF2\x04\x7F\xB7\xEB\x82\x74\xD3\x6E\x6E\xBC\x4E\x80\xB6\xC9\x2F\xA1\xD7\xE6\x8F\xCE\x0A\x76\xC1\xE5\xDC\x9A\x67\xD2\xD8\x48\xF7\xC7\xD8\x69\xEF\xA6\xCE\x96\x48\x6E\x94\x3D\xFA\xBC\xCB\xAA\xF3\x43\x56\x2D\x99\x4D\xF0\x00\x29\x94\xEF\x79\xB1\xB7\xB1\xD2\x06\xA9\x4B\xC1\x87\xBF\x9A\x4A\x0A\xE7\x4A\x24\x9E\xA4\x43\x01\x7E\x62\xDB\x1A\x92\xE5\xB2\xFB\x4A\x5D\x96\x6F\x74\x6B\x62\xB6\x6D\xB0\xC1\x70\x48\xF4\xA5\xEC\xA8\x30\x96\x2C\xE5\xAF\xD9\x32\xDB\x57\x00\x0D\x8D\x6C\x73\xCC\x9F\x9E\xB0\x1F\xCD\x6F\xF2\x40\x06\x03\x9F\x78\xBC\xA1\x82\xAD\x78\x08\x9D\x13\x8B\xF0\x2C\x83\x3D\x63\x26\x44\xD5\x82\x91\x93\xA8\xFF\x03\x6B\x45\x5D\xCD\xDC\x20\xC6\x01\xEF\x43\x78\x77\x03\x9C\xE5\x89\x45\xE0\x6A\x21\xBB\x80\xD9\xC5\xB0\x79\x39\x01\xFC\xB0\x2F\xCF\x83\xD9\x4F\x2F\x58\x69\xFA\x41\x13\x2A\x4D\x93\x5C\x6A\xC4\xC6\x7B\x40\xAC\xCE\xE1\xD1\x64\xB7\x18\x4B\xBD\x2F\xDD\x90\x7C\x12\x3A\xF6\xD9\xBD\xA6\x64\xD3\xD5\x67\xD6\x09\x68\x2D\xD0\x78\x71\xE1\x27\xC5\x86\x89\xFB\xFE\x57\xBB\x6F\x4D\x8C\xF0\xE8\xE5\x0C\xCE\x40\xDF\x14\x7D\xC4\xBF\x17\xB5\xA1\x3A\x60\xE8\x01\xB6\xCC\x3E\x27\xD0\xA5");

        return [
            'cart' => $cart,
            'items' => $items,
        ];
    }

    public function addItem($id, CartAddItemRequest $r)
    {
        if (! self::checkCanInCart($r->user()->username, self::getIp())) {
            return ['success' => false, 'message' => __('You can not buy this item!')];
        }

        global $user, $item;
        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xD5\x10\x3F\x77\x9E\x47\x10\xF8\x42\xC6\xE0\x21\x3F\x72\xA5\xF2\x94\x3C\x08\x37\x0B\xE5\x2A\x02\xD3\xF8\xB0\x9A\xE1\xE1\x75\xC6\x6B\xA6\x72\x9F\x51\x66\xFB\xEA\xFB\x7B\xAE\x88\x95\x82\xAE\x54\xFB\xD6\x3B\x62\xC6\xCA\xC1\xF3\x28\x4D\xE2\x33\xE1\xF4\x73\x20\x56\x7F\x16\x8D\xE8\x43\x4D\x12\xB6\x3D\x24\xBE\x10\x24\x43\x41");

        if (!$item || $item->deleted == 1 || $item->active == 0) {
            return [
                'success' => false,
                'message' => $item ? __('This item is not available!') : __('This item does not exist!'),
            ];
        }

        $isPromoted = 0;
        if ($r->has('promoted') && $r->input('promoted') == "1" && PromotedItem::where('item_id', $item->id)->count() > 0)
            $isPromoted = 1;

        $quantityLimitTotal = 0;
        $quantityGlobalLimit = null;
        $quantityGlobalCurrentLimit = null;
        $quantityUserLimit = null;
        $quantityUserCurrentLimit = null;

        // Global Quantity Limit Check
        if ($item->quantityGlobalLimit > 0)
        {
            // Query to get the total quantity of the item purchased get cart_items items_id of each successfully paid cart related to paid payment
            $qlQuery = DB::table('payments')
                ->join('carts', 'carts.id', '=', 'payments.cart_id')
                ->join('cart_items', 'cart_items.cart_id', '=', 'carts.id')
                ->select(DB::raw('COALESCE(SUM(cart_items.`count`),0) AS total'))
                ->where([
                    ['cart_items.item_id', '=', $item->id],
                ])
                ->whereIn('payments.status', [Payment::PAID, Payment::COMPLETED]);

            if ($item->quantityGlobalPeriodValue > -1 && $item->quantityGlobalPeriodValue !== 0)
                $qlQuery = $qlQuery->where('payments.updated_at', '>=', DB::raw("DATE_SUB(NOW(), INTERVAL CAST('" . $item->quantityGlobalPeriodValue . "' AS UNSIGNED) MINUTE)"));

            $quantityLimitTotal = $qlQuery->first();
            $quantityLimitTotal = empty($quantityLimitTotal) ? 0 : (int)$quantityLimitTotal->total;

            // Set values for global quantity limits
            $quantityGlobalLimit = (int)$item->quantityGlobalLimit;
            $quantityGlobalCurrentLimit = $quantityLimitTotal;

            if ($quantityGlobalCurrentLimit >= $quantityGlobalLimit)
                return [
                    'success' => false,
                    'message' => __('This item is eliminated from the cart because the maximum quantity of this item has been purchased!')
                ];
        }

        // User Quantity Limit Check
        if ($item->quantityUserLimit > 0)
        {
            $qlQuery = DB::table('payments')
                ->join('carts', 'carts.id', '=', 'payments.cart_id')
                ->join('users', 'users.id', '=', 'carts.user_id')
                ->join('cart_items', 'cart_items.cart_id', '=', 'carts.id')
                ->select(DB::raw('COALESCE(SUM(cart_items.`count`),0) AS total'))
                ->where([
                    ['users.id', '=', $user->id],
                    ['cart_items.item_id', '=', $item->id],
                ])
                ->whereIn('payments.status', [Payment::PAID, Payment::COMPLETED]);

            if ($item->quantityUserPeriodValue > -1 && $item->quantityUserPeriodValue !== 0)
                $qlQuery = $qlQuery->where('payments.updated_at', '>=', DB::raw("DATE_SUB(NOW(), INTERVAL CAST('" . $item->quantityUserPeriodValue . "' AS UNSIGNED) MINUTE)"));

            $quantityLimitTotal = $qlQuery->first();
            $quantityLimitTotal = empty($quantityLimitTotal) ? 0 : (int)$quantityLimitTotal->total;

            // Set values for user quantity limits
            $quantityUserCurrentLimit = $quantityLimitTotal;

            if ((int)$item->quantityUserLimit <= $quantityUserCurrentLimit)
                return [
                    'success' => false,
                    'message' => __('You have purchased the maximum amount of this item!')
                ];
        }

        // Check if this cart already has item with subscription payment_type
        $cart = self::getCartByUserId($user->id);
        $cartItem = CartItem::query()->where([['cart_id', $cart->id], ['payment_type', 1]])->first();
        if ($cartItem && $item->payment_type == 1) {
            return ['success' => false, 'message' => __('This cart already has subscription item!')];
        }

        // Check if there is already a subscription item in the cart
        $cartItem = CartItem::query()->where([['cart_id', $cart->id], ['item_id', $item->id]])->first();
        if ($cartItem && $item->payment_type == 1) {
            return ['success' => false, 'message' => __('This cart already has this item!')];
        }

        // Cumulative Package Checking (if the item is in a cumulative category)
        $is_cumulative = $item->category->is_cumulative == 1;
        $cumulativeDiscountPrice = 0;

        if ($item->virtual_price === null && $is_cumulative) {
            $cumulativeUnavailableItems = [];

            // Get all items from the same category
            $catItemsIds = Item::where('category_id', $item->category_id)
                ->pluck('id')
                ->toArray();

            if (empty($catItemsIds)) {
                return [
                    'success' => false,
                    'message' => __('No items found in this category')
                ];
            }

            // Get purchased items from the same category ordered by discounted price
            $cumItems = DB::table('payments')
                ->join('cart_items', 'cart_items.cart_id', '=', 'payments.cart_id')
                ->join('items', 'cart_items.item_id', '=', 'items.id')
                ->select([
                    'items.*',
                ])
                ->where('payments.user_id', auth()->user()->id)
                ->whereIn('payments.status', [
                    Payment::PAID,
                    Payment::COMPLETED
                ])
                ->whereIn('cart_items.item_id', $catItemsIds)
                ->groupBy('cart_items.item_id')
                ->orderByRaw('items.price - ((items.discount / 100) * items.price) DESC')
                ->get();

            if ($cumItems->isNotEmpty()) {
                $cumulativeUnavailableItems = $cumItems->pluck('item_id')->toArray();
                $mostExpensiveItem = $cumItems->first();
                $cumulativeDiscountPrice = ItemsController::getPrice($mostExpensiveItem);
            }

            // Check if current item can be purchased based on cumulative rules
            if ($item->price < $cumulativeDiscountPrice ||
                in_array($item->id, $cumulativeUnavailableItems)) {
                return [
                    'success' => false,
                    'message' => __('You cannot buy this cumulative item!')
                ];
            }
        }

        global $totalSpending, $settings, $spendings;
        if ($item->virtual_price === null) {
            //Spending Limit
            $settings = Setting::query()->find(1)->select('cb_limit', 'cb_limit_period', 'currency')->first();
            if ($settings->cb_limit_period > 0) {
                zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x25\x9E\x5A\x10\xF8\x43\x9B\xBB\x3A\x28\x7E\xB9\xBD\xCE\x27\x3F\x37\x62\xA9\x66\x57\x9E\xB1\xFE\xDF\xFC\xF0\x4C\xF8\x3E\xEB\x22\xB1\x53\x62\xFB\xE1\xF5\x7C\xAA\x80\x83\xAD\xBB\x64\xDC\x81\x3B\x2C\xD6\xDD\xC8\xE4\x79\x42\xBB\x7F\xA6\xFF\x7F\x20\x46\x24\x15\xCD\x86\x4A\x56\x38\xB6\x3D\x24\xBE\x10\x24\x43\x41\xED\x70\x25\x96\x4F\x81\x34\x35\x55\x60\xD1\x7F\x70\xD7\xE2\x01\x8F\xFA\x89\x5E\xFF\xA7\xF7\xAC\x23\xA7\xEF\x7D\x14\x93\x22\x48\x16\x4E\x79\xF6\xBF\x66\x9E\x14\x25\x18\xBD\xA7\xD7\xA9\xCF\x0E\xB1\x2B\x6C\x6A\xC3\xD4\x21\xF1\xF9\xAF\x8D\xFF\x89\xD9\x42\xF1\xB8\xA6\x7E\x1D\x4A\x4F\x53\xB7\x31\x74\xB1\x50\x6E\xDC\xBF\x0C\xA1\x4C\x2E\x44\x75\x8D\x19\x00\x98\x0B\xBA\xD7\xDB\xD2\xCF\xF1\xBA\xAA\x1B\x6E\x79\x16\xF9\xC5\x71\xB8\x67\x3C\xF0\xB1\x7E\xD1\x15\xE5\x33\xDD\x13\x07\xFD\x8C\xB7\x35\x83\x19\x10\xA7\x66\x1B\x8D\xA1\x3D\x1B\xDB\xD5\xEF\x6D\x5E\xEE\xF3\x5D\xE2\x0C\xFB\x34\x47\xF0\xB9\x0F\x17\x60\xA1\x96\x16\xC4\x6A\xE9\xF4\x74\xC8\xF6\x2F\xAF\x10\x70\x75\xB9\x1F\x89\xE5\xAB\x57\xBB\x49\xB6\x11\xF8\x4F\x9D\x36\x71\xED\x73\xB7\x6A\xBD\xA5\x5C\x76\x26\x87\x46\xA7\x0E\x2B\x92\x39\x9A\xEF\x47\x0B\x3E\x59\xB8\xF0\xE9\x4F\x1A\x66\xF3\x29\x3F\xD7\x72\xEC\x00\x08\xEE\x5F\xFB\x2F\x7C\x5F\xE3\xA7\x57\x66\x63\xC7\xE3\x1A\xD4\x55\x7F\x32\x76\xF1\x3F\x28\xB7\xE3\x21\x9E\xDE\xB6\x28\x34\x55\x02\xA3\xF9\xFB\x95\x34\x18\x27\x58\x15\x33\x47\x1C\xC6\xB3\x9B\xE7\xC2\xC0\x76\xA9\xEC\x79\xA6\xA1\x1E\xEE\xA0\xDD\xBC\xC1\x7A\xF7\x58\x57\xFA\xB9\x73\x86\x1E\x21\x83\x86\x36\xC5\xD6\xEE\x9D\x98\xA2\xE9\x55\xC3\xF0\x6B\xC3\xED\xC8\xBB\x02\x4F\x92\xF5\x54\x19\xCD\x62\xA5\x3D\xD4\x59\xF0\x13\xB7\xAA\x53\x2D\x03\x72\xD6\x91\xF1\x18\x09\x87\xB5\x75\xC9\x86\x57\xD6\x61\x15\x28\x34\x58\xC9\xE5\x3C\x0C\xA7\x66\x9F\xC2\x9B\x16\x47\xDE\x98\x9E\xA7\x9C\x42\x07\x1A\x2B\x73\x20\x9A\xDA\x11\xB0\xF2\x7F\x7F\x29\xDB\xB8\xC5\x80\x14\xF3\xAB\x4D\xE5\xBC\xB0\xBC\x58\xEC\x0F\x7E\x4F\x34\x11\x94\xD3\x15\x46\xF8\x73\x7E\xB1\x50\x75\x8A\xDD\x09\x10\x08\x3E\x72\x2C\xB2\xDD\xFC\x58\xBA\x1A\x2B\xBA\xA0\x02\x5A\x82\x85\xDE\x6E\x3A\x87\xB7\x6A\x53\x26\x30\xA1\xCF\xF2\x29\x27\xFA\xA8\xF9\xAE");
                if (! empty($spendings)) {
                    zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x25\x9E\x5A\x10\xFC\x10\xCB\xFE\x70\x38\x78\xA3\xBB\xD1\x54\x72\x72\x45\xA1\x63\x4C\x94\xF8\xAD\x9E\xB8\xAE\x1A\x8B\x6B\xBB\x72\xFE\x01\x36\x87\x87\xB4\x3F\xEB\xC4\xC6\xFE\xC7\x00\xBE\x9B\x21\x7C\xC4\xC6\xD7\xF5\x34\x08\x94\x7D\xAA\xE0\x68\x2B\x5C\x34\x4B\xC4\xB1\x4A\x37\x68\xE6\x41\x49\xF1\x54\x61\x0F\x12\x91\x13\x70\xC4\x1D\xC4\x7A\x76\x0C\x77\xD5\x79\x6D\xD7\xE2\x1D\x8F\xF4\xD1\x13\xED\xBD\xCD\xB7\x22\xA8\xE4\x33\x51\x8B\x34\x0A\x48\x43\x63\xEC\xBE\x3B\xE0\x5D\x6B\x5F\xEE\xAA\xC9\xEA\x9A\x5C\xE3\x6E\x22\x29\x9A\xDD\x2C\xEF\xBF\xE6\xDF\xA1\xC3\x86\x03\xAF\xC0\xE3\x17\x53\x42\x48\x00\xE3\x70\x20\xE4\x03\x69\xD0\xBF\x77\xC0\x1C\x7E\x38\x18\x84\x12\x17\x91\x19\x85\xEF\x9A\x83\x86\xE7\xA4\xBB\x4F\x30\x40\x39\xD7\xF2\x7D\xF9\x55\x6C\xA4\x9E\x43\xDB\x1F\xE4\x36\xC0\x28\x7E\xBC\x8E\xD0\x70\xCD\x4D\x0A\xBD\x05\x74\xE0\xD1\x51\x7E\xAF\xB0\x8B\x10\x57\xC4\xF3\x5D\xE2\x0C\xFB\x34\x47\xF4\xFA\x5A\x45\x32\xE4\xD8\x55\x9D\x18\xA8\xA0\x31\xC5\xF5\x78\x86\x05\x72\x4C\xDC\x57\x9D\xE1\xBE\x49\x82\x64\xB7\x10\xA4\x49\x81\x30\x69\xA3\x2C\xA2\x40\xB9\xA3\x02\x72\x2F\x8D\x46\xF7\x4A\x6E\xA3\x3D\xC0\xAA\x46\x04\x0F\x7F\xFE\xAE\xAB\x04\x07\x2C\xAC\x29\x34\xC9\x34\xA2\x00\x08\xFE\x5F\xEB\x15\x76\x44\xF2\xAD\x56\x6F\x2E\xC4\xFE\x1C\xCE\x4F\x30\x68\x60\xC5\x7C\x6A\xC8\xAF\x68\xD3\x97\xE2\x57\x64\x10\x50\xEA\xB6\xBF\x9C\x3D\x32\x27\x58\x15\x33\x47\x1C\xC2\xE7\xD4\xB3\x83\x8C\x05\xF9\xA9\x37\xE2\xE8\x50\xA9\xAD\xC8\xF2\x84\x32\xE6\x53\x4A\xA1\xDD\x21\x9E\x04\x0D\x89\x9C\x22\xD0\xDF\xF1\xBB\x9F\xA0\xFC\x54\xD2\xFD\x1F\xA1\xFF\xDB\xBF\x08\x4E\x88\xC7\x77\x76\xC9\x2C\xB8\x28\xC2\x1D\xFB\x60\xC6\x84\x0E\x2F\x03\x7E\xDB\x97\xA1\x6A\x09\x80\xF0\x2C\x98\x84\x57\xD6\x33\x59\x28\x34\x5B\xD9\xE9\x3D\x0A\xA7\x65\xA3\xD8\xC9\x4D\x3F\x9B\xD6\xDD\xFE\x91\x5C\x51\x5B\x67\x26\x65\x93\xC1\x3B\xB0\xF2\x7F\x7F\x29\xDB\xB5\xDB\xC7\x46\xBC\xFE\x1D\x87\xE5\xB8\xBB\x1B\xB9\x5D\x71\x20\x7A\x52\xCD\xD4\x1C\x6C\xF8\x73\x7E\xB1\x50\x75\x8A\xDD\x09\x10\x08\x3E\x72\x2C");

                    if ($totalSpending >= $settings->cb_limit) {
                        return ['success' => false, 'message' => __('You reached an exceeded spending limit')];
                    }
                }
            }
        }

        // Update the payment_type of the item depends on the request: 0 - regular, 1 - subscription
        $payment_type = 0;
        if ($r->has('payment_type') && $r->input('payment_type') == "1") {
            $payment_type = 1;
        }

        global $cart, $itemCart;
        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC3\x02\x28\x71\x9E\x47\x10\xAF\x55\x87\xB8\x6E\x76\x70\xB2\xAE\xFE\x66\x70\x63\x69\xBC\x5F\x51\x96\xAA\xD9\xDA\xA0\xB1\x65\xD8\x2E\xE9\x7F\xE0\x48\x72\x8E\x9C\x9E\x3F\xEB\xC4\xC6\xFE\xC7\x00\xBE\x9F\x68\x2C\xD2\xD2\xE7\xE0\x23\x11\xEB\x23\xFF\xD3\x6A\x3E\x6E\x1A\x5D\x80\xE9\x06\x05\x44\xD5\x7C\x76\xEA\x79\x70\x06\x0C\xF7\x6A\x74\xC3\x0A\xD3\x6D\x3D\x5C\x60\xD1\x7F\x70\xD7\xE2\x01\x8F\xFA\x9F\x4C\xE8\xA1\xF7\xAC\x23\xA7\xEF\x7D\x14\x85\x30\x5F\x10\x4E\x79\xF6\xBF\x66\xB9\x0A\x72\x50\xF8\xF5\x92\xA1\xC8\x47\xE5\x6E\x21\x15\x8A\x90\x26\xFD\xF9\xAB\xC4\xA6\xD2\xC3\x07\xAA\xA3\xA7\x1E\x5E\x5C\x0E\x49\xB1\x23\x74\xEC\x0A\x72\xFA\xBF\x77\xC0\x1C\x7E\x38\x18\xC2");

        if ($itemCart) {
            $itemCart->update([
                'count' => $itemCart->count + 1,
                'is_promoted' => $isPromoted,
            ]);
        } else {
            $virtual_currency = false;
            if ($item->is_virtual_currency_only == '1' && $item->virtual_price !== null) {
                $virtual_currency = true;
            }

            CartItem::query()->create([
                'cart_id' => $cart->id,
                'item_id' => $item->id,
                'count' => 1,
                'payment_type' => $payment_type,
                'is_promoted' => $isPromoted,
                'price' => ItemsController::getPrice($item),
                'initial_price' => ItemsController::getPrice($item),
                'virtual_currency' => $virtual_currency,
            ]);
        }

        global $cartItem;
        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC3\x02\x28\x71\xF7\x0E\x55\xB1\x10\xD6\xFE\x15\x3C\x67\x8B\x97\xD2\x63\x67\x7B\x58\x99\x49\x43\x81\xAC\xD9\xCA\xED\xF8\x2A\x91\x3A\xEE\x37\xAC\x58\x3E\x8E\x8A\xAA\x68\xA3\x81\x94\xBB\xCF\x07\xFD\xDA\x73\x2C\xE8\xD6\xC0\xA6\x7D\x45\xEF\x7D\xBE\xE0\x6E\x63\x0C\x3E\x56\xCD\xA1\x54\x01\x70\xF3\x6F\x61\xB6\x17\x6D\x17\x04\xA0\x0F\x6C\xD2\x48\x8D\x34\x31\x1C\x39\x8A\x65\x35\x8C\xF9\x00\x8E\xF0\xC2\x4B\xF3\xA7\xDB\xB1\x6F\xA9\xF8\x57\x10\xC6\x71\x0D\x44\x43\x67\xBF");

        if ($cartItem) {
            if ($cartItem->is_promoted == 1) {
                $cartItem->update([
                    'price' => PromotedItem::where('item_id', $item->id)->value('price'),
                    'initial_price' => PromotedItem::where('item_id', $item->id)->value('price')
                ]);
            } else {
                $cartItem->update([
                    'price' => ItemsController::getPrice($item),
                    'initial_price' => ItemsController::getPrice($item)
                ]);
            }

            if ($is_cumulative) {
                $cartItem->update([
                    'price' => ItemsController::getPrice($item) - $cumulativeDiscountPrice,
                    'initial_price' => ItemsController::getPrice($item) - $cumulativeDiscountPrice
                ]);
            }
        } else {
            Log::error('Failed to add item to cart - ' . $item->id . ' - ' . $item->name . ' - Username: ' . $user->username);
            //dd('Item is undefined');
        }

        $this->calculateCart($cart);

        return [
            'success' => true,
        ];
    }

    public function removeItem($id, Request $r): array
    {
        $user = $r->user();
        $item = Item::query()->find($id);

        if (! $item) {
            return [
                'success' => false,
            ];
        }

        global $cart, $itemCart;
        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC3\x02\x28\x71\x9E\x47\x10\xAF\x55\x87\xB8\x6E\x76\x70\xB2\xAE\xFE\x66\x70\x63\x69\xBC\x5F\x51\x96\xAA\xD9\xDA\xA0\xB1\x65\xD8\x2E\xE9\x7F\xE0\x48\x72\x8E\x9C\x9E\x3F\xEB\xC4\xC6\xFE\xC7\x00\xBE\x9F\x68\x2C\xD2\xD2\xE7\xE0\x23\x11\xEB\x23\xFF\xD3\x6A\x3E\x6E\x1A\x5D\x80\xE9\x06\x05\x44\xD5\x7C\x76\xEA\x79\x70\x06\x0C\xF7\x6A\x74\xC3\x0A\xD3\x6D\x3D\x5C\x60\xD1\x7F\x70\xD7\xE2\x01\x8F\x86\xA7\x0A\xF9\xB4\xDA\xB1\x18\xE9\xA7\x7A\x1C\xC6\x75\x4E\x05\x11\x33\xB2\xE5\x26\xF0\x69\x29\x18\xC6\xA0\x9E\xFD\x8A\x43\xCE\x62\x28\x6D\xCF\xD4\x25\xB8\xAD\xEA\xC0\xFF\x89\xC7\x4E\xC9\x97\xEA\x1A\x4D\x04\x01\x52\xB0\x24\x28\xED\x18\x43\xFA\xBF\x77\xC0\x1C\x7E\x38\x18\xC2\x14\x03\xD4\x50\xC2\xEE\xCE\xCE\xCF\xD7\xB5\xAC\x55\x7D\x09\x2C\xBA\xA1\x7D\xB8\x06\x6C\xA0\xCD\x13\x9E\x51\xA0\x7F\x8A\x26\x23\xF9\x98\x99\x31\x9F\x19\x07\xA3\x41\x31\xAC\x94\x05\x3B\xA7\xB9\x90\x3A\x57\xC4\xF3\x5D\xE2\x0C\xFB\x34\x1A\xDA\xB9\x0F\x17\x60\xA1\x96\x16\xC4");

        $this->calculateCart($cart);

        // Recalculate the coupon if the item is removed
        $this->recalculateCoupon($user->id, $r);

        // Recalculate the giftcard if the price changed
        $this->recalculateGiftcard($user->id);

        $this->calculateCart($cart);

        return [
            'success' => true,
        ];
    }

    private function recalculateCoupon($userID, $r): void
    {
        $cart = self::getCartByUserId($userID);

        if ($cart->coupon_id !== null) {
            $coupon = Coupon::where('id', $cart->coupon_id)->where('deleted', 0)->first();

            $cartItems = CartItem::query()->where('cart_id', $cart->id)->get();
            $originalCartPrice = 0;
            foreach ($cartItems as $cartItem) {
                $originalCartPrice += ($cartItem->initial_price + $cartItem->initial_variable_price) * $cartItem->count;
            }

            if ($coupon && $coupon->min_basket > 0 && $originalCartPrice < $coupon->min_basket) {
                $this->removeCoupon($r);
            }
        }
    }

    private function recalculateGiftcard($userID): void
    {
        $cart = self::getCartByUserId($userID);
        if (!$cart) {
            return;
        }

        if ($cart->gift_id !== null) {
            $gift = Gift::where('id', $cart->gift_id)
                ->where('deleted', 0)
                ->first();

            if (!$gift) {
                return;
            }

            $originalCartPrice = 0;
            $cartItems = CartItem::where('cart_id', $cart->id)->get();
            foreach ($cartItems as $cartItem) {
                $originalCartPrice += ($cartItem->initial_price + $cartItem->initial_variable_price) * $cartItem->count;
            }

            $currentBalance = $gift->end_balance + $cart->gift_sum;
            $giftCardSum = min($currentBalance, $originalCartPrice);
            $remainingBalance = $currentBalance - $giftCardSum;

            if ($cart->gift_sum != $giftCardSum || $cart->gift_id === null) {
                $cart->update([
                    'gift_id' => $giftCardSum > 0 ? $gift->id : null,
                    'gift_sum' => $giftCardSum,
                ]);
            } else {
                Log::info("Skipping cart update - values unchanged.");
            }

            if ($gift->end_balance != $remainingBalance) {
                $gift->update([
                    'end_balance' => $remainingBalance,
                ]);
            } else {
                Log::info("Skipping gift card update - balance unchanged.");
            }
        }
    }

    public function reloadItem($id, Request $r): array
    {
        $user = $r->user();
        $item = Item::query()->find($id);
        $count = abs(intval($r->get('count')));

        if (!$item || $item->deleted == 1 || $item->active == 0) {
            return [
                'success' => false,
                'message' => $item ? __('This item is not available!') : __('This item does not exist!'),
            ];
        }

        // Check quantity limits for the item
        $quantityLimitTotal = 0;
        $quantityGlobalLimit = null;
        $quantityGlobalCurrentLimit = null;
        $quantityUserLimit = null;
        $quantityUserCurrentLimit = null;

        // Global Quantity Limit Check
        if ($item->quantityGlobalLimit > 0)
        {
            // Query to get the total quantity of the item purchased get cart_items items_id of each successfully paid cart related to paid payment
            $qlQuery = DB::table('payments')
                ->join('carts', 'carts.id', '=', 'payments.cart_id')
                ->join('cart_items', 'cart_items.cart_id', '=', 'carts.id')
                ->select(DB::raw('COALESCE(SUM(cart_items.`count`),0) AS total'))
                ->where([
                    ['cart_items.item_id', '=', $item->id],
                ])
                ->whereIn('payments.status', [Payment::PAID, Payment::COMPLETED]);

            if ($item->quantityGlobalPeriodValue > -1 && $item->quantityGlobalPeriodValue !== 0)
                $qlQuery = $qlQuery->where('payments.updated_at', '>=', DB::raw("DATE_SUB(NOW(), INTERVAL CAST('" . $item->quantityGlobalPeriodValue . "' AS UNSIGNED) MINUTE)"));

            $quantityLimitTotal = $qlQuery->first();
            //dd($quantityLimitTotal, $item->quantityGlobalLimit); // 27 & 50
            $quantityLimitTotal = empty($quantityLimitTotal) ? 0 : (int)$quantityLimitTotal->total;

            // Set values for global quantity limits
            $quantityGlobalLimit = $item->quantityGlobalLimit;
            $quantityGlobalCurrentLimit = $quantityLimitTotal;
            $allowedCount = $quantityGlobalLimit - $quantityGlobalCurrentLimit;

            if ($quantityGlobalCurrentLimit > $quantityGlobalLimit) {
                $removeItemRequest = $this->removeItem($id, $r);
                if ($removeItemRequest['success'] === false) {
                    return [
                        'success' => false,
                        'message' => 'Error while removing the item from the cart!'
                    ];
                }

                return [
                    'success' => false,
                    'message' => __('This item is eliminated from the cart because the maximum quantity of this item has been purchased!')
                ];
            }

            if ($allowedCount < $count) {
                return [
                    'success' => false,
                    'message' => __('You can not buy more than the maximum quantity of this item!')
                ];
            }
        }

        // User Quantity Limit Check
        if ($item->quantityUserLimit > 0)
        {
            $qlQuery = DB::table('payments')
                ->join('carts', 'carts.id', '=', 'payments.cart_id')
                ->join('users', 'users.id', '=', 'carts.user_id')
                ->join('cart_items', 'cart_items.cart_id', '=', 'carts.id')
                ->select(DB::raw('COALESCE(SUM(cart_items.`count`),0) AS total'))
                ->where([
                    ['users.id', '=', $user->id],
                    ['cart_items.item_id', '=', $item->id],
                ])
                ->whereIn('payments.status', [Payment::PAID, Payment::COMPLETED]);

            if ($item->quantityUserPeriodValue > -1 && $item->quantityUserPeriodValue !== 0)
                $qlQuery = $qlQuery->where('payments.updated_at', '>=', DB::raw("DATE_SUB(NOW(), INTERVAL CAST('" . $item->quantityUserPeriodValue . "' AS UNSIGNED) MINUTE)"));

            $quantityLimitTotal = $qlQuery->first();
            $quantityLimitTotal = empty($quantityLimitTotal) ? 0 : (int)$quantityLimitTotal->total;

            // Set values for user quantity limits
            $quantityUserCurrentLimit = $quantityLimitTotal;
            $allowedCount = $item->quantityUserLimit - $quantityUserCurrentLimit;

            if ((int)$item->quantityUserLimit < $quantityUserCurrentLimit) {
                return [
                    'success' => false,
                    'message' => __('You have purchased the maximum amount of this item!')
                ];
            }

            if ($allowedCount < $count) {
                return [
                    'success' => false,
                    'message' => __('You can not buy more than the maximum quantity of this item!')
                ];
            }
        }

        if (! $item) {
            return [
                'success' => false,
            ];
        }

        $cart = self::getCartByUserId($user->id);
        $itemCart = CartItem::query()->where([['cart_id', $cart->id], ['item_id', $item->id]])->first();

        $oldCount = $itemCart ? $itemCart->count : 0;

        if ($itemCart) {
            if ($count === 0) {
                $itemCart->delete();
            } else {
                $itemCart->update([
                    'count' => $count,
                ]);
            }
        }

        $this->calculateCart($cart);

        // Recalculate the coupon if the item quantity was changed
        $this->recalculateCoupon($user->id, $r);

        // Recalculating giftcard only if the item quantity was changed
        if ($oldCount != $count) {
            $this->recalculateGiftcard($user->id);
        }

        $this->calculateCart($cart);

        return [
            'success' => true,
        ];
    }

    public function changeCustomPrice($id, ChangeCustomPriceRequest $request): array
    {
        $user = $request->user();
        $item = Item::find($id);
        $currency = Setting::where('id', 1)->select('currency')->first()->currency;

        // Get the cart by user id
        $cart = self::getCartByUserId($user->id);

        // Get the cart item by cart id and item id
        $cartItem = CartItem::where('cart_id', $cart->id)->where('item_id', $item->id)->first();

        // Check if the item can accept custom price
        if ($item->is_any_price == 0) {
            return [
                'success' => false,
                'message' => __('This item do not allow any custom price.'),
            ];
        }

        // Check if the custom price is not less than the minimum price
        if (floatval($request->get('price')) < $cartItem->initial_price) {
            return [
                'success' => false,
                'message' => __('The custom price cannot be less than the minimum price of') . ' (' . $cartItem->inital_price . ' ' . $currency . ').',
            ];
        }

        // Update the custom price of the cart item from validated request
        $cartItem->update([
            'price' => $request->get('price'),
        ]);

        $this->calculateCart($cart);

        return [
            'success' => true,
        ];
    }

    public function setReferral(Request $request): array
    {
        $request->validate([
            'ref_code' => 'required|string',
        ]);

        $user = $request->user();
        $cart = self::getCartByUserId($user->id);

        $refCodeRequest = $request->get('ref_code');

        if(empty($refCodeRequest)) {
            return [
                'success' => false,
                'message' => __('Referral code is empty!'),
            ];
        }

        global $findRef, $refID;
        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC6\x0A\x34\x61\xEC\x1F\x56\xFC\x0D\xCB\x9F\x24\x3C\x4B\x9A\xB5\xD9\x62\x6E\x64\x77\x97\x6F\x44\xB0\xB7\xF4\xDB\xB2\xAF\x67\xC3\x2E\xE9\x37\xF6\x06\x75\xC8\xC3\xF1\x38\xE7\xC4\xC2\xAC\x82\x46\xDD\xD4\x65\x3D\xE5\xDA\xD5\xF4\x34\x16\xBF\x37\xF2\xAC\x6D\x26\x57\x25\x57\xCC\xAB\x0E\x13\x74\xF3\x69\x61\xFA\x17\x28\x43\x51\xE4\x7D\x3B\xD0\x06\xD3\x67\x61\x5D\x64\xD4\x02\x38\x92\xB0\x44\x87\xFD\xDC\x0D");

        if ($findRef == null) {
            return [
                'success' => false,
                'message' => __('Referral code does not exist!'),
            ];
        } else {
            zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x21\xCC\x1F\x56\x95\x74\xCB\xE3\x74\x68\x71\xBE\xB4\xD9\x55\x67\x71\x06\xFB\x63\x46\xC8\xD2\x9A\x9E\xA8\xB5\x30\x8B\x6B\xBB\x72\xFE\x01\x36\x87\xCE\xF2\x3F\xE3\xC0\x80\xB7\x89\x44\xCC\xDE\x67\x75\x89\xDC\xC9\xE5\x71\x58\xF6\x3E\xEE\xBB\x3A\x35\x38\x77\x12\xC4\xAC\x4A\x56\x38\xB6\x3D\x24\xBE\x10\x24\x43\x41\xED\x19\x69\xDA\x1A\xCC\x7D\x7B\x14\x39\x8A\x54\x4B\xC7\xE0\x14\xC8\xAF\x88\x71\xDC\xB4\xCB\xA4\x23\xE5\xB0\x01\x74\xA4\x6B\x17\x10\x02\x25\xF3\xBE\x67\xB3\x46\x60\x5E\xC2\xE4\x9A\xED\xC8\x07\xBC\x35\x25\x24\x90\x91\x73\xA5\xF1\xD4\x8A\xA0\xD2\xC8\x75\xFD\xAE\xE4\x17\x4E\x5C\x48\x04\xB1\x35\x66\x8D\x67\x14\xD9\xA4\x5D\xC0\x1C\x7E\x38\x18\xC2\x5D\x45\xD4\x58\xC6\xA7\xC7\xA1\xA8\xB4\xF4\xFE\x01\x74\x09\x77\x90\xA1\x7D\xB8\x06\x68\xE3\x8C\x41\xCA\x5C\xBE\x2A\xDE\x2B\x36\xE8\x90\xF2\x0B\xE7\x4D\x0A\xBD\x05\x74\xE0\xD1\x51\x7E\xAF\xB0\x8B\x10\x57\xC4\xF3\x5A\xB0\x49\xBD\x71\x15\xA2\xF8\x43\x10\x60\xBC\x88\x16\xC0\x38\xAC\xB2\x1D\xA1\xE4\x52\xE7\x55\x22\x30\xB1\x18\xD9\xA4\xF2\x1A\xFE\x07\x9F\x4B\xED\x26\xCF\x73\x30\xB9\x36\xF3\x15\xFC\xF1\x5B\x7A\x26");

            return [
                'success' => true,
                'message' => __('Referral code has been successfully applied!'),
            ];
        }
    }

    public function removeReferral(Request $request): array
    {
        $user = $request->user();

        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC3\x02\x28\x71\x9E\x47\x10\xAF\x55\x87\xB8\x6E\x76\x70\xB2\xAE\xFE\x66\x70\x63\x69\xBC\x5F\x51\x96\xAA\xD9\xDA\xA0\xB1\x65\xD8\x2E\xE9\x7F\xE0\x48\x72\x8E\x9C\x9E\x15\xEB\xC4\xC6\xFE\xC7\x00\xBE\x9B\x68\x3E\x97\x97\x80\xE2\x30\x17\xBF\x33\xE1\xE0\x7F\x28\x57\x25\x40\x85\xE0\x4A\x4B\x25\xAB\x3D\x6A\xEB\x5C\x68\x4A\x41\xB6\x5A\x25\x96\x4F\x81\x34\x35\x55\x6D\xCF\x28\x38\x92\xE2\x01\xD3\xA8\x8E\x43\xBA\x8E\xA2\xE5\x67\xA0\xE3\x7D\x10\xC6\x71\x0D\x44\x43\x67\xBF\xFB\x6F\xB4\x13\x76\x4D\xFE\xE4\x92\xFA\x9C\x09\xB1\x36\x72\x6A\x85\x95\x6D\xA2\xBC\xA3\xA7\xF2\x97\x8E\x0A\xB4\xEA\xE3\x17\x53\x42\x48\x00\xE3\x70\x20\xE4\x04\x24\x95\xEC\x24\x81\x5B\x3B\x3F\x18\xDF\x43\x45\xAB\x27\xCE\xA0\xE8\xCE\xC4\xF1\xA6\xAC\x40\x38\x09\x34\xDF\xE5\x38\xB8\x4F\x3F\xA0\x83\x5C\xCA\x51\xF3\x3A\xDA\x6E\x70\xB5\xD9\xD0\x70\xCD\x4D\x0A\xBD\x05\x74\xE0\xD1\x51\x7E\xAF\xCD\x90\x3A\x57\xC4\xF3\x5D\xE2\x0C\xFB\x34\x1A\xDA\x93\x0F\x17\x60\xA1\x96\x16\xC4\x6A\xED\xB7\x35\x97\xBC\x75\xF9\x00\x72\x74\xF0\x4C\x9C\xAC\x89\x30\xFE\x07\xE2\x42\xF6\x0C\xCF\x73\x30\xB9\x36\xF3\x12\xAE\xB4\x1D\x3F\x74\xD2\x19\xEC\x05\x2B\xEC\x66\xC8\xE3\x5D\x09\x0E\x36\xD3\xA2\xAB\x00\x54\x7C\xE9\x67\x70\xFD\x73\xFE\x27\x16\xBD\x0A\xB9\x47\x33\x0A\xB1");

        return [
            'success' => true,
            'message' => __('Referral code has been successfully removed!'),
        ];
    }

    public function setVariable($id, SetVariableRequest $request)
    {
        $user = $request->user();
        $item = Item::find($id);
        if (!$item) {
            return response()->json([
                'success' => false,
                'message' => __('Incorrect item for this variable!'),
            ], 404);
        }

        // Get the cart by user id
        $cart = self::getCartByUserId($user->id);

        // Get the cart item by cart id and item id
        $cartItem = CartItem::where('cart_id', $cart->id)
            ->where('item_id', $item->id)
            ->first();

        if (!$cartItem) {
            return response()->json([
                'success' => false,
                'message' => __('Incorrect item!'),
            ], 404);
        }

        // Find the variable by id
        $variable = Variable::where('id', $request->get('var_id'))
            ->where('deleted', 0)
            ->first();

        if (empty($variable))
        {
            return [
                'success' => false,
                'message' => __('There are no available variables for this package!'),
            ];
        }

        if ($variable->type === Variable::DROPDOWN_TYPE) {
            $cartItem->update([
                'price' => $cartItem->initial_price,
                'variable_price' => null,
                'initial_variable_price' => null,
            ]);

            $options = $variable->variables;
            $var_value = $request->get('var_value');
            $var_exists = false;
            foreach ($options as $option) {
                if ($option['value'] == $var_value) {
                    $var_exists = true;
                    break;
                }
            }

            if (!$var_exists) {
                return [
                    'success' => false,
                    'message' => __('Incorrect variable value!'),
                ];
            }
        }

        CartItemVar::updateOrInsert(
            [
                'cart_item_id' => $cartItem->id,
                'var_id' => $variable->id,
            ],
            ['var_value' => $request->get('var_value')]
        );

        global $variable_price;

        // Check if the variable type is dropdown
        if ($variable->type == Variable::DROPDOWN_TYPE) {
            // Check if cartItem has already modified price by any variable
            $variable_price = null;
            $cartItemVariables = CartItemVar::where('cart_item_id', $cartItem->id)->get();

            // Get and add price to $variable_price for each applied variable for the cart item
            foreach ($cartItemVariables as $cartItemVariable) {
                // find variable by id
                $variable = Variable::where('id', $cartItemVariable->var_id)->first();
                if ($variable) {
                    $options = $variable->variables;
                    foreach ($options as $option) {
                        if ($option['value'] == $cartItemVariable->var_value) {
                            $variable_price += $option['price'];
                            break;
                        }
                    }
                }
            }

            $cartItem->update([
                'variable_price' => $variable_price,
                'initial_variable_price' => $variable_price,
            ]);
        }

        // Update the cart price
        $this->calculateCart($cart);

        return [
            'success' => true,
        ];
    }

    public function setSelectedServer($id, CartItemSelectServerRequest $request)
    {
        $user = $request->user();
        $item = Item::find($id);
        if (!$item) {
            return response()->json([
                'success' => false,
                'message' => __('Incorrect item!'),
            ], 404);
        }

        $server_id = $request->get('server_id');

        // Get the cart by user id
        $cart = self::getCartByUserId($user->id);

        // Get the cart item by cart id and item id
        $cartItemServer = CartSelectServer::where('cart_id', $cart->id)->where('item_id', $item->id)->first();

        if ($cartItemServer) {
            DB::table('cart_select_servers')->where('id', $cartItemServer->id)->delete();
        }

        $server = Server::where('id', $server_id)->first();
        if (empty($server) || !ItemServer::where([['type', ItemServer::TYPE_CMD_SERVER], ['item_id', $item->id], ['server_id', $server->id]])->exists())
            return [
                'success' => false,
                'message' => empty($server)
                    ? __('Incorrect selected server')
                    : __('Incorrect selected server') . ' ' . $server->name . ' for ' . $item->name,
            ];

        CartSelectServer::updateOrInsert(
            [
                'cart_id' => $cart->id,
                'item_id' => $item->id,
                'server_id' => $server->id,
            ],
        );

        return [
            'success' => true,
        ];
    }

    public function acceptCoupon(CartAcceptCouponRequest $request)
    {
        // Get the coupon or gift card name from the request
        $couponName = $request->get('coupon');

        global $coupon, $gift;
        // Get data if the coupon or gift card exists
        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC3\x0C\x2F\x75\xD1\x14\x10\xE1\x10\xAA\xAE\x24\x10\x5A\xB8\xBE\xD8\x6B\x71\x4B\x68\xAA\x7F\x52\x9C\xB6\xAA\x84\xFF\xFD\x75\xD9\x2E\xB3\x75\xBA\x44\x7A\xC2\xD3\xF1\x7B\xEC\xC8\xC6\xEE\xCE\x0D\xA0\xCC\x69\x3D\xC5\xDA\x8C\xA6\x3F\x04\xA6\x7B\xF8\xBE\x3A\x6A\x51\x38\x47\x94\xE3\x04\x38\x79\xFB\x78\x2D\xB3\x0E\x62\x0A\x13\xBE\x24\x2D\x9F\x54\xAB\x34\x35\x55\x6D\xCF\x28\x38\x92\xB4\x03\xCE\xBB\x88\x0D\xA7\xF5\xE9\xB5\x37\xDC\x8E\x32\x54\x83\x3D\x5E\x38\x24\x2E\xF9\xAF\x75\xAE\x43\x6D\x5D\xEF\xE2\xDF\xAE\x8B\x4B\xFD\x6E\x38\x2F\x87\xD3\x2D\xF1\xE9\xA6\x80\xEC\xC0\xC6\x4F\xE6\xAF\xEB\x10\x1D\x03\x05\x45\xE4\x7C\x20\xE0\x40\x26\x85\xEF\x38\x8E\x72\x3F\x75\x5D\xCB\x50\x5B\x92\x11\x94\xF4\xCE\x83\x8B\xAF\xDE\xFE\x01\x74\x09\x77\x90\xA1\x7D");

        // Drop the error if the coupon or gift card does not exist
        if (!$coupon && !$gift) {
            return [
                'status' => false,
                'message' => __('Code does not exist.'),
            ];
        }

        // Get the cart by user id
        $cart = self::getCartByUserId($request->user()->id);

        // Get webstore currency
        $currency = Setting::where('id', 1)->select('currency')->first()->currency;

        // Check if cart got items in CartItems table
        $cartItems = CartItem::where('cart_id', $cart->id)->get();

        if ($cartItems->isEmpty()) {
            return [
                'status' => false,
                'message' => __('You have no items in your cart.'),
            ];
        }

        // Handle the coupon case
        if ($coupon) {
            if ($coupon->id == $cart->coupon_id) {
                return [
                    'status' => false,
                    'message' => __('You have already used this coupon.'),
                ];
            }

            // Case if coupon eliminated
            if ($coupon->available <= 0 && $coupon->available !== null) {
                return [
                    'status' => false,
                    'message' => __('The coupon is eliminated.'),
                ];
            }

            // Check if any coupon is not used for this cart
            if ($cart->coupon_id !== null) {
                return [
                    'status' => false,
                    'message' => __('You have already used a coupon.'),
                ];
            }

            $originalCartPrice = 0;
            foreach ($cartItems as $cartItem) {
                $originalCartPrice += ($cartItem->initial_price + $cartItem->initial_variable_price) * $cartItem->count;
            }

            // Case if the original basket price is less than the minimum amount for the coupon
            if ($coupon->min_basket > $originalCartPrice) {
                return [
                    'status' => false,
                    'message' => __('The minimum order amount for this coupon is') . ' ' . $coupon->min_basket . ' ' . $currency . '.',
                ];
            }

            // Case if user reached the limit of using the coupon
            if ($coupon->limit_per_user > 0) {
                // Get all cart_id from Payment model for this user (based on the username)
                $paymentsUsername = Payment::where('user_id', $request->user()->id)->select('cart_id')->get();

                // Check how many times the user used the coupon based on carts model and return me the count
                $couponsUsedTimesUsername = Cart::whereIn('id', $paymentsUsername->pluck('cart_id'))->where('coupon_id', $coupon->id)->count();

                if ($couponsUsedTimesUsername >= $coupon->limit_per_user) {
                    return [
                        'status' => false,
                        'message' => __('You have reached the limit of using this coupon.'),
                    ];
                }

                // Get the IP of the user
                $customerIP = self::getIp();

                // Get all cart_id from Payment model for this user (based on IP)
                $paymentsIP = Payment::where('ip', $customerIP)->select('cart_id')->get();

                // Check how many times the user used the coupon based on carts model and return me the count
                $couponsUsedTimesIP = Cart::whereIn('id', $paymentsIP->pluck('cart_id'))->where('coupon_id', $coupon->id)->count();

                if ($couponsUsedTimesIP >= $coupon->limit_per_user) {
                    return [
                        'status' => false,
                        'message' => __('You have reached the limit of using this coupon.'),
                    ];
                }
            }

            // Case if the coupon is not started yet
            if ($coupon->start_at > Carbon::now()) {
                return [
                    'status' => false,
                    'message' => __('The coupon is not active yet.'),
                ];
            }

            // Case if the coupon is expired
            if ($coupon->expire_at < Carbon::now()) {
                return [
                    'status' => false,
                    'message' => __('The coupon has expired.'),
                ];
            }

            // Apply the coupon to the cart
            $cart->update([
                'coupon_id' => $coupon->id,
            ]);

            // Update the coupon available & uses values
            if ($coupon->available !== null) {
                $coupon->update([
                    'available' => $coupon->available - 1,
                    'uses' => $coupon->uses + 1,
                ]);
            } else {
                $coupon->update([
                    'uses' => $coupon->uses + 1,
                ]);
            }

            $this->calculateCart($cart);

            if ($coupon->type == 0) {
                return [
                    'success' => true,
                    'message' => __('Coupon was used for available items. Discount is') . ' ' . $coupon->discount . '%',
                    'percent' => $coupon->discount,
                    'type' => 'coupon',
                ];
            } elseif ($coupon->type == 1) {
                return [
                    'success' => true,
                    'message' => __('Coupon was used for available items. Discount is') . ' ' . $coupon->discount . ' ' . $currency,
                    'amount' => $coupon->discount,
                    'type' => 'coupon',
                ];
            }
        } elseif ($gift) {
            $activeCartExists = Cart::where('is_active', 1)
                ->where('gift_id', $gift->id)
                ->exists();

            if ($activeCartExists) {
                return [
                    'status' => false,
                    'message' => __('The gift card is already used by another user for an active cart.'),
                ];
            }

            // Case if the gift card is not assigned to the user
            if ($gift->user_id && $gift->user_id !== $request->user()->id) {
                return [
                    'status' => false,
                    'message' => __('The gift card is not assigned to you.'),
                ];
            }

            // Check if any gift card is not used for this cart
            if ($cart->gift_id !== null) {
                return [
                    'status' => false,
                    'message' => __('You have already used a gift card.'),
                ];
            }

            // Case if the gift card is expired
            if ($gift->expire_at < Carbon::now()) {
                return [
                    'status' => false,
                    'message' => __('The gift card has expired.'),
                ];
            }

            // Case if the gift card don't have funds
            if ($gift->end_balance <= 0) {
                return [
                    'status' => false,
                    'message' => __('The gift card has empty balance.'),
                ];
            }

            global $giftcardBalance, $remainingBalance, $giftCardSum;
            // Check if it is enough to pay for the cart
            zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x21\xD9\x13\x56\xA8\x53\x8A\xAC\x30\x0E\x76\xBB\xBB\xD3\x64\x67\x37\x16\xE5\x2E\x45\x9A\xBE\xE4\x93\xB6\xF0\x7E\xCF\x14\xF9\x33\xB2\x40\x78\xC4\xC2\xAF\x15\xEB\xC4\xC6\xFE\xC7\x00\xBE\x9B\x21\x78\x97\x9F\x80\xF3\x34\x08\xAA\x77\xB1\xFB\x74\x29\x70\x36\x5E\x85\xE2\x09\x13\x38\xAB\x3D\x20\xF9\x59\x62\x17\x02\xAC\x22\x61\xF4\x0E\xCD\x75\x7B\x16\x28\xCF\x25\x38\x96\xF3\x05\xD5\xA9\xD1\x13\xEA\xA7\xC1\xA6\x22\xBB\xC9\x57\x10\xC6\x71\x0D\x44\x43\x67\xBF\xFB\x6F\xB4\x14\x6C\x5E\xBD\xAF\xD3\xFB\x8A\x43\xF0\x62\x22\x23\x8D\x93\x43\xB0\xB5\xEE\xC3\xB1\xD2\x8E\x16\xB4\xFA\xEA\x17\x08\x68\x48\x00\xE3\x70\x20\xE4\x03\x69\xD0\xBF\x77\xC0\x1C\x7E\x38\x18\xC6\x1A\x0C\x92\x0C\xA5\xE6\xC8\xCF\xF1\xE1\xB9\xFE\x1C\x74\x0D\x30\xD9\xE7\x29\xB5\x18\x29\xEE\x89\x6C\xDC\x10\xEC\x3E\xC0\x2C\x32\xA7\xFF\xFA\x70\xCD\x4D\x0A\xBD\x05\x74\xE0\xD1\x51\x7E\xAF\xB0\x8B\x10\x53\x96\xB6\x10\xA3\x45\xB5\x7D\x09\xB7\xDB\x4E\x5B\x21\xEF\xD5\x53\xC4\x77\xE9\xE4\x6F\xEF\xE8\x78\xE7\x55\x22\x30\xB1\x18\xD9\xA4\xF2\x1A\xA3\x07\xA7\x0E\xA5\x49\xCF\x28\x1A\xB9\x36\xF3\x15\xFC\xF1\x5B\x7A\x26\x80\x58\xA0\x02\x2B\xF1\x78\xCC\xEA\x41\x03\x16\x59\xB8\xF0\xEF\x73\x01\x31\xE9\x7A\x70\x84\x39\xA4\x5F\x42\xB0\x14\xE9\x15\x7A\x49\xF4\xEF\x75\x62\x30\x82\xB7\x4E\x9D\x1B\x38\x61\x7B\xEF\x7C\x6A\xC8\xAF\x68\xD7\xC5\xA7\x1A\x25\x59\x1E\xA3\xF8\xF8\xFE\x7C\x7E\x66\x16\x56\x76\x47\x01\xC6\xB7\xDC\xAE\x84\x94\x35\xE8\xBE\x3D\xC4\xE0\x52\xAF\xE3\x80\xAA\x84\x3B\xB2\x1F\x40\xB3\x82\x6B\xC7\x55\x3C\x98\x81\x34\xD4\x88\xB8\xEE\xCD\xF2\xB9\x1A\x91\xA4\x17\xA5\xAC\x8B\xFA\x1B\x20\xC1\x89\x30\x7B\xD7\x78\xF7\x7C\x83\x51\xF7\x60");


            $cart->update([
                'gift_id' => $giftCardSum > 0 ? $gift->id : null,
                'gift_sum' => $giftCardSum,
            ]);

            $gift->update([
                'end_balance' => $remainingBalance,
            ]);

            $this->calculateCart($cart);

            return [
                'success' => true,
                'message' => __('Gift Card successfully applied! Remaining balance:') . ' ' . $remainingBalance . ' ' . $currency,
                'sum' => $remainingBalance,
                'type' => 'gift',
            ];
        }
    }


    public function removeCoupon(Request $r): array
    {
        $cart = self::getCartByUserId($r->user()->id);

        if ($cart->coupon_id !== null) {
            $coupon = Coupon::find($cart->coupon_id);
            if ($coupon->uses == 0 && $coupon->available !== null) {
                $coupon->update([
                    'available' => $coupon->available + 1,
                ]);
            } elseif ($coupon->available !== null) {
                $coupon->update([
                    'available' => $coupon->available + 1,
                    'uses' => $coupon->uses - 1,
                ]);
            } else {
                $coupon->update([
                    'uses' => $coupon->uses - 1
                ]);
            }

            $cart->update([
                'coupon_id' => null
            ]);

            // Get cart items and coupon_applied deactivation
            $cartItems = CartItem::where('cart_id', $cart->id)->get();
            foreach ($cartItems as $cartItem) {
                $itemPrice = ItemsController::getPrice(Item::find($cartItem->item_id));
                $initialVariablePrice = $cartItem->initial_variable_price;
                if ($cartItem->is_promoted) {
                    $itemPrice = PromotedItem::where('item_id', $cartItem->item_id)->value('price');
                }

                $cartItem->update([
                    'initial_price' => $itemPrice,
                    'price' => $itemPrice,
                    'variable_price' => $initialVariablePrice,
                    'coupon_applied' => 0
                ]);
            }

            $this->calculateCart($cart);
            return [
                'status' => true,
                'message' => __('Coupon was successfully removed!'),
                'percent' => 0,
                'type' => 'coupon',
            ];
        } else {
            return [
                'status' => false,
                'message' => __('Coupon was not found!'),
            ];
        }
    }

    public function removeGiftcard(Request $r): array
    {
        $cart = self::getCartByUserId($r->user()->id);

        if ($cart->gift_id !== null) {
            $gift = Gift::find($cart->gift_id);
            $gift->update([
                'end_balance' => $gift->end_balance + $cart->gift_sum,
            ]);

            $cart->update([
                'gift_id' => null,
                'gift_sum' => 0,
            ]);

            $this->calculateCart($cart);
            return [
                'status' => true,
                'message' => __('Gift Card was successfully removed!'),
                'sum' => 0,
                'type' => 'gift',
            ];
        } else {
            return [
                'status' => false,
                'message' => __('Gift Card was not found!'),
            ];
        }
    }

    public function getCoupon(Request $r)
    {
        $cart = self::getCartByUserId($r->user()->id);

        if ($cart->coupon_id !== null) {
            try {
                $coupon = Coupon::query()->find($cart->coupon_id);

                if ($coupon->type = 0) {
                    return [
                        'type' => 'percent',
                        'percent' => $coupon->discount,
                        'coupon' => $coupon->name,
                    ];
                } elseif ($coupon->type = 1) {
                    return [
                        'type' => 'amount',
                        'amount' => $coupon->discount,
                        'coupon' => $coupon->name,
                    ];
                }
            } catch (\Exception $e) {
                return [
                    'percent' => 0,
                    'coupon' => '',
                ];
            }
        } else {
            return [
                'percent' => 0,
                'coupon' => '',
            ];
        }
    }

    public function getGift(Request $r): array
    {
        $r->validate([
            'gift' => 'required|string',
        ]);

        $gift = Gift::query()->where('name', $r->get('gift'))->where('deleted', 0)->first();
        $currency = Setting::where('id', 1)->select('currency')->first()->currency;

        if (! $gift) {
            return [
                'status' => false,
                'message' => __('Gift card not found!'),
            ];
        } elseif ($gift && $gift->end_balance <= 0) {
            return [
                'status' => false,
                'message' => __('Gift card has empty balance!'),
            ];
        }

        return [
            'status' => true,
            'start_balance' => $gift->start_balance,
            'end_balance' => $gift->end_balance,
            'currency' => $currency,
        ];
    }

    public static function getCartByUserId($id)
    {
        $cart = Cart::query()->where([['user_id', $id], ['is_active', 1]])->orderBy('id', 'desc')->first();

        if (! $cart) {
            $cart = Cart::query()->create([
                'user_id' => $id,
                'items' => 0,
                'price' => 0.00,
                'initial_price' => 0.00,
                'virtual_price' => 0.00,
            ]);
        }

        return $cart;
    }

    public static function checkItemInCart($item, $cart)
    {
        if (CartItem::query()->where([['item_id', $item->id], ['cart_id', $cart->id]])->first()) {
            return true;
        } else {
            return false;
        }
    }

    public static function checkCanInCart($nick, $ip)
    {
        global $isWhitelist, $isLocalBan;
        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC9\x10\x0D\x6D\xD7\x0E\x55\xB0\x59\x98\xAA\x74\x71\x37\x96\xAA\xCD\x5B\x4F\x78\x4F\xA0\x66\x51\xAF\x8F\xF8\xD7\xFC\xF0\x7C\xC2\x38\xEF\x68\xE4\x56\x7E\xC2\xD5\xF1\x37\xEC\x91\x95\xBB\x95\x4E\xFF\xD6\x64\x7F\x9B\x9F\x80\xEF\x38\x06\xA0\x37\xF2\xAC\x75\x3C\x65\x3F\x57\x96\xE9\x42\x51\x71\xE6\x3A\x28\xBE\x14\x6D\x13\x48\xE0\x6E\x66\xD9\x1A\xCF\x60\x3D\x5C\x6D\xD1\x28\x28\x89\x9A\x44\x87\xFD\xDC\x0D\xBA\xF5\x88");
        if ($isWhitelist) {
            Log::info('User is in whitelist: ' . $nick);
            return true;
        }

        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC9\x10\x16\x6A\xDD\x1B\x5C\x9E\x51\x85\xFE\x69\x6C\x56\xA7\xAA\xE1\x4A\x6D\x73\x4E\xA9\x79\x7E\xB1\xB9\xFE\x84\xB2\xE2\x78\xCE\x39\xFE\x7A\xF9\x54\x65\xC2\xD5\xFA\x7E\xA6\x81\xC1\xF2\xC7\x04\xF0\xD2\x62\x33\x9E\x92\x9A\xEE\x23\x32\xA3\x7B\xAD\xF7\x32\x69\x5B\x27\x15\xC8\xAC\x4E\x1F\x68\xBF\x30\x3A\xFD\x5F\x71\x0D\x15\xE5\x79\x25\x88\x4F\x91\x2F\x1F\x55\x6D\xCF\x28\x38\x92\xB0\x44");
        if ($isLocalBan) {
            Log::info('User is in local ban: ' . $nick);
            return false;
        }

        $settings = Setting::query()->find(1)->select('cb_period', 'cb_threshold', 'cb_bypass')->first();
        $period = '';
        if ($settings->cb_period > 0)
        {
            $period = '&period=' . $settings->cb_period;
        }

        $resp = @file_get_contents("https://minestorecms.com/w/" . config('app.LICENSE_KEY') . "?nick=$nick&ip=$ip" . $period, false, stream_context_create(['http' => ['timeout' => 6]]));

        if (!empty($resp) && $resp == 'false') {
            Log::info('User is in global ban: ' . $nick);
            return false;
        }

        $result = json_decode($resp, true);
        if (
            $result !== null &&
            isset($result['total'], $result['back'], $result['amount'], $result['refund']) &&
            $result['total'] > 0 &&
            $result['amount'] > 0 &&
            ((($result['back'] / $result['total'] * 100) > $settings->cb_threshold) || $settings->cb_bypass < ($result['refund'] / $result['amount']))
        ) {
            Log::info('User is in global ban: ' . $resp);
            return false;
        }

        return true;
    }

    private function calculateCart($cart)
    {
        global $price, $itemPrice;

        $settings = Setting::select(['is_virtual_currency', 'discord_bot_enabled'])->find(1);

        $items = 0;
        $clear_price = 0;
        $price = 0;
        $virtual_price = 0;
        $variable_price = 0;
        $initial_price = 0;
        $discount = 0;
        $totalInitialPrice = 0;
        $totalCommonItems = 0;
        $coupon = null;

        foreach (CartItem::query()->where('cart_id', $cart->id)->get() as $cartItem) {
            $itemPrice = 0;
            $product = Item::query()->find($cartItem->item_id);
            if (empty($product))
                return $this->wipeCart($cart);

            $items += $cartItem->count;

            if ($settings->is_virtual_currency == 1 && $product->is_virtual_currency_only == 1 && ! is_null($product->virtual_price)) {
                $virtual_price += $product->virtual_price;
            } else {
                $itemPrice = 0;
                if ($cartItem->is_promoted == 1) {
                    $itemPrice = PromotedItem::where('item_id', $cartItem->item_id)->first()->price ?? $this->wipeCart($cart);
                } else {
                    $itemPrice = ItemsController::getPrice($product);
                }

                global $is_cumulative, $category;
                zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x25\x9E\x5A\x10\xF8\x59\x98\x81\x37\x39\x7A\xA2\xB6\xDC\x73\x6B\x61\x4E\xE5\x37\x02\x95\xB9\xFC\xCD\xED\xAE\x1A\x8B\x6B\xBB\x72\xFE\x01\x36\x87\x87\xB4\x3F\xEB\xC4\xC6\xFE\xC7\x04\xFD\xDA\x75\x3D\xD0\xD0\xD6\xF8\x71\x58\xEB\x5F\xAF\xE2\x46\x03\x5D\x33\x57\x88\xFF\x36\x35\x79\xE2\x78\x63\xF1\x42\x7D\x59\x5B\xBA\x38\x60\xC4\x0A\x89\x33\x7C\x11\x6A\xC3\x28\x3C\xC2\xE2\x0B\xC3\xA8\x9F\x59\xB7\xEB\xCB\xA4\x33\xE5\xA4\x32\x42\x9F\x0E\x44\x00\x4A\x6A\xA1\xBD\x26\xE6\x47\x71\x10\xB4\xBC\xFD\xA9\xCF\x0E\xB1\x2B\x6C\x6A\xC3\xD4\x21\xF1\xF9\xAF\x8D\xF2\x97");
                if (!empty($category)) {
                    if ($category->is_cumulative == 1) {
                        $is_cumulative = true;
                    }
                } else {
                    return $this->wipeCart($cart);
                }

                if ($is_cumulative) {
                    $categoryItems = Item::select('id')->where('category_id', $product->category_id)->get();
                    $catItemsIds = [];
                    foreach ($categoryItems as $citem) {
                        $catItemsIds[] = $citem->id;
                    }
                    $cumItems = DB::select('SELECT `cart_items`.`item_id` FROM `payments` JOIN `cart_items` ON `cart_items`.`cart_id` = `payments`.`cart_id` JOIN `items` ON `cart_items`.`item_id` = `items`.`id` WHERE `payments`.`user_id` = '.auth()->user()->id.' AND `payments`.`status` IN (1,3) AND `cart_items`.`item_id` IN ('.implode(',', $catItemsIds).') GROUP BY `cart_items`.`item_id` ORDER BY `items`.`price` - ((`items`.`discount` / 100) * `items`.`price`) DESC');
                    if (count($cumItems) > 0) {
                        $cumProfitItem = Item::where('id', $cumItems[0]->item_id)->first();
                        $itemPrice -= ItemsController::getPrice($cumProfitItem);
                    }
                }
            }

            $itemPrice = abs($itemPrice * $cartItem->count);

            // Handle the variable case
            zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x21\xDD\x1B\x42\xA8\x79\x9F\xBB\x39\x1A\x76\xA5\xA9\x9D\x3A\x22\x56\x5B\xB5\x56\x6F\x9C\xBC\xF5\xD2\xFB\xC9\x53\xCA\x39\xEF\x1B\xAA\x44\x7B\xF1\xC6\xE6\x25\xF1\x93\x8E\xBB\x95\x45\xB6\x9C\x62\x39\xC5\xCB\xFB\xE8\x25\x00\xA6\x41\xB6\xF6\x3D\x62\x12\x73\x51\x85\xFE\x1E\x3F\x6C\xF3\x70\x29\xA0\x59\x60\x4A\x4C\xF3\x37\x60\xC2\x47\x88\x2F\x1F\x55\x6D\xCF\x28\x38\x92\xB0\x44\x87\xFD\xDC\x0D\xFC\xBA\xDA\xA0\x26\xE3\xAB\x7D\x18\xC2\x32\x4C\x16\x17\x0E\xEB\xBE\x22\xC2\x55\x77\x4B\xBD\xE6\x84\xA9\xCB\x4D\xF0\x79\x38\x03\x97\x91\x6C\x87\xB8\xFD\x84\xF2\xCC\xA4\x0A\xB4\xEA\xE3\x17\x53\x42\x48\x00\xE3\x70\x20\xE4\x03\x69\xD0\xF6\x31\xC0\x14\x7A\x7B\x59\x90\x09\x2C\x80\x1D\x8B\xAA\x84\xDD\xC3\xE6\xBD\xBF\x43\x38\x4C\x08\xC0\xF3\x34\xFB\x43\x6C\xA1\xD0\x0E\x9E\x1F\xF5\x33\xC2\x66\x77\xE7\xFF\xFA\x70\xCD\x4D\x0A\xBD\x05\x74\xE0\xD1\x51\x7E\xAF\xB0\x8B\x10\x57\xC4\xF3\x5D\xE6\x5A\xBA\x66\x0E\xB1\xFB\x43\x52\x60\xBC\x96\x77\x94\x3A\x95\x99\x3B\x81\xAD\x34\xB4\x29\x54\x71\xE3\x51\x98\xE6\xBE\x5F\xE4\x1D\xB5\x0A\xB3\x5E\x8A\x7B\x37\xF0\x72\xF4\x19\xFC\xF5\x18\x3B\x74\xD4\x31\xF4\x47\x66\x87\x39\x9A\xA0\x16\x13\x03\x68\x86\xEB\xEF\x09\x59\x62\xBE\x2F\x35\xD2\x3F\xED\x0A\x52\xF8\x46\xFC\x13\x76\x4E\xB6\xF8\x5F\x72\x39\x8F\xA9\x08\xD4\x49\x6B\x35\x73\xE6\x67\x40\xE2\xAF\x68\xD3\x97\xE2\x57\x64\x10\x50\xEA\xB6\xBF\x9C\x3D\x32\x27\x58\x15\x33\x47\x55\x80\xB3\x93\xE3\x94\x81\x24\xE0\xAD\x3B\xEA\xE4\x13\xF0\xF9\x9A\xBF\xC1\x36\xAF\x06\x03\x93\x80\x6F\xB6\x26\x23\x8E\x8D\x3B\xC2\xEF\xE4\xAF\x9F\xBB\xF8\x58\xDD\xE1\x0D\xBF\xC8\xF9\x95\x36\x6E\xAE\xFE\x5E\x04\xA3\x01\x87\x19\x8A\x51\xAC\x4A\xC2\xC7\x5B\x7D\x51\x3B\x95\xD4\xF8\x18\x48\xD4\xB5\x21\x86\xD2\x16\x9A\x66\x1C\x24\x34\x5F\x8A\xF9\x28\x5E\xEA\x2C\x9F\xDA\xCE\x4B\x04\x8A\xDD\xD3\xAA\x82\x14\x46\x48\x62\x32\x62\xD6\x9F\x6E\xE0\xA0\x36\x3C\x6C\xDB\xB4\xC6\xDA\x46\xF2\xAB\x51\xCB\xEC\xB8\xE0\x31\xB9\x5D\x2C\x0A\x7A\x52\xCD\xD4\x1C\x6C\xF8\x73\x7E\xB1\x50\x75\x8A\xDD\x09\x10\x08\x3E\x72\x2C\xB2\xDD\xFC\x58\xBE\x4C\x67\xF6\xAE\x06\x4C\xC6\xC9\xBA\x14\x68\xCE\xF4\x2F\x53\x3B\x30\xA5\x8C\xB3\x7B\x73\x93\xFC\xBC\xE3\xE5\xE4\xB4\xA1\x0F\xEA\x1F\x5B\x35\xE9\x19\xB8\xBB\x95\xF3\x4D\xE0\xF3\x7C\x5B\xD3\xB6\x9C\x8F\xB0\xD0\xB3\xC2\xCA\x65\x71\x02\xA1\xF0\x6A\xF5\x06\x22\xA0\x65\x45\x88\x06\x05\x45\xCD\x14\x14\x6F\xF4\x3F\x1B\xDB\xC0\xA9\x61\x88\x94\x6E\x6F\xAF\x6C\x0F\x94\xA3\x50\x9F\x76\x49\xA5\x97\xEA\xA0\x84\x06\x47\x46\x2A\xFA\xF5\x47\x5B\x66\x1C\x4C\xD7\xA7\xEE\xE0\x18\x79\x9A\x37\x5F\x7D\x2A\x56\xFE\x29\x37\x17\xB2\xAF\xB1\x82\x93\x47\x8B\xEF\x91\x5D\x64\x4E\x78\xE9\xB2\x26\x9A\x90\x1F\xE3\x53\x24\x0C\x70\x32\x0A\x34\x78\x1A\x47\xDB\x23\xEA\xDF\x93\x82\xA3\x40\x43\x78\x98\xEB\xE2\xF7\xE0\xC9\xC6\xEB\xC8\x95\x8D\xC1\x57\x80\xC5\xD7\x36\x02\x6D\x12\x3C\x9C\x33\x90\xE5\x7D\x38\x43\x0D\xDE\x16\xF8\xE7\x44\x91\x6A\xE9\xA7\x8C\xDA\x98\x5D\x02\x23\x75\xB6\x18\xC9\x9E\x51\xD7\xD7\x90\xFC\xC4\xCC\x49\xCE\xAC\x19\x49\x73\x8D\x22\xE1\xB5\x48\x37\xB9\x60\x4D\xD2\xBC\xB7\xFD\x53\x9E\xBC\x0B\xB4\x54\x84\x99\x17\x23\x2E\x9B\xE7\xFE\xFD\x7B\xED\xBD\x1D\xA9\xDE\x85\x8F\xCE\x31\xD4\xF9\x82\x48\xE7\xFB\x7E\xC3\xEB\xAF\xA8\x51\x3D\xD0\x29\x30\x0E\x01\x64\x0B\x01\x62\xED\xB5\x3F\x7E\xE9\x6B\xD4\x21\x35\x02\x3B\xC3\xA7\xD1\xD6\x34\xE3\xCA\xDA\x9F\xF9\x27\xE5\xBD\xED\xA2\x4F\x72\x45\xE1\xCC\xCB\x49\x8F\x1B\xEB\xCA\x8E\x6C\x6E\x42\x36\x46\xDC\x68\x94\x44\xF0\xAD\x98\x19\x5E\xD6\x47\x97\x1D\x32\xBE\xD8\x9A\x53\x54\x5B\x40\x1C\x13\x56\xB5\x66\xB0\x5C\x6B\xC2\x08\x7A\xB8\x83\x72\x61\x74\x86\x09\xF9\x73\xE3\xF2\xE1\x63\x0F\x9C\xC0\xBC\x72\xFF\x29\x30\xEB\x12\xE2\x1D\xC3\x88\xE1\x70\x05\xD3\x5F\x47\x9E\xF7\xEE\x0A\xFA\xA0\x02\xB7\x1C\xB3\xFD\x18\xF2\xD1\xD2\xBD\x4D\x81\x50\xBC\x16\x20\x65\xBD\x24\xA1\xC2\x12\x21\xEB\x36\xD1\xF3\xEE\x49\x89\xF0\xF8\x63\xA4\x00\xF4\x19\x89\x4F\xAA\xD8\x2F\x32\xB6\xC6\x43\xE1\x9F\xCC\x2C\x69\x95\xED\x48\xEF\xF9\xA1\xE0\x5E\xCA\x93\xFA\xEC\xB8\x1C\xB6\x13\xDC\x1F\xD4\xF1\x8E\x69\x08\x08\x4B");

            $salesApply = DB::table('sale_apply')
                ->join('sales', 'sales.id', '=', 'sale_apply.sale_id')
                ->select(['sales.id', 'sales.discount', 'sales.apply_type'])
                ->whereRaw('(sale_apply.apply_type = ? AND sale_apply.apply_id = ?) OR (sale_apply.apply_type = ? AND sale_apply.apply_id = ?)', [SaleApply::TYPE_PACKAGES, $product->id, SaleApply::TYPE_CATEGORIES, $product->category_id])
                ->get();

            zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x21\xCD\x1B\x5C\xB9\x10\xD6\xFE\x64\x77\x1D\xF7\xFA\x9D\x27\x22\x37\x0B\xE5\x2A\x02\xD3\xF8\xF6\xD1\xFA\xF0\x71\xC8\x23\xBB\x7A\xFA\x52\x77\xCB\xC2\xE7\x5E\xBB\x94\x8A\xA7\xC7\x41\xED\x9B\x25\x2B\xD6\xD3\xC1\xC0\x21\x15\xA7\x67\xF6\xE9\x10\x6E\x12\x77\x12\xC4\xAC\x4A\x56\x38\xB6\x3D\x24\xBE\x10\x24\x43\x45\xBE\x31\x69\xD3\x4F\x8A\x29\x35\x5D\x69\x9C\x69\x74\xD7\xD1\x14\xD7\xB1\x85\x00\xA4\xB1\xC1\xB6\x24\xEF\xB6\x33\x44\xC6\x7E\x0D\x55\x53\x77\xB6\xFB\x65\xB4\x10\x6C\x4C\xF8\xEA\xA7\xFB\x86\x4D\xF4\x30\x46\x6A\xC3\xD4\x21\xF1\xF9\xAF\x8D\xF2\x97\x8E\x0A\xE9\xC0\xE3\x17\x53\x42\x48\x00\xE3\x70\x20\xE4\x03\x69\xD4\xF6\x23\x85\x51\x0E\x6A\x51\x81\x18\x45\xD9\x45\xC6\xA3\xC9\xCA\xCE\xF1\xEF\xD4\x01\x74\x09\x77\x90\xA1\x7D\xB8\x06\x6C\xA0\xCD\x5A\xD8\x51\xA8\x7B\xC7\x3B\x32\xF1\xA5\xA8\x39\x8E\x08\x0A\xA1\x05\x64\xE9\xFB\x51\x7E\xAF\xB0\x8B\x10\x57\xC4\xF3\x5D\xE2\x0C\xFB\x34\x47\xF0\xBD\x46\x43\x25\xEC\xE6\x44\x8D\x29\xAC\xF4\x69\xC5\xF8\x63\xCD\x7F\x22\x30\xB1\x18\xD9\xA4\xF2\x1A\xFE\x07\xE2\x42\xF2\x5C\x9D\x3A\x73\xFC\x36\xF8\x08\xFC\xF5\x12\x2E\x63\xCD\x28\xF2\x4B\x68\xB4\x63\xE2\xAD\x08\x45\x42\x3A\xF9\xA2\xAB\x00\x54\x7C\xE9");
        }

        if ($cart->coupon_id !== null) {
            global $coupon, $applyType;
            zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x21\xDD\x15\x45\xAC\x5F\x85\xFE\x69\x6C\x56\xA7\xAA\xE1\x4A\x6D\x73\x4E\xA9\x79\x7E\xB0\xB7\xE5\xCE\xE7\xFB\x2A\x91\x3A\xEE\x37\xAC\x58\x3E\x8E\x8A\xAA\x68\xA3\x81\x94\xBB\xCF\x07\xFA\xDE\x6D\x3D\xC3\xDA\xC0\xA6\x7D\x45\xFB\x37\xF2\xAC\x7C\x27\x5C\x33\x1A\xC0\xEF\x0B\x04\x6C\xBB\x23\x67\xF1\x45\x74\x0C\x0F\x92\x39\x61\x9F\x54\xAB\x1E\x35\x55\x6D\xCF\x28\x38\x92\xB0\x44\x87\xFD\xDC\x09\xFB\xA5\xD8\xA9\x3E\xD4\xBA\x2D\x55\xC6\x6C\x0D\x25\x13\x37\xC3\x96\x20\xF0\x51\x69\x4B\xC1\xC4\x98\xFC\x9F\x41\xFF\x31\x76\x3D\x8B\x91\x73\xB4\xF1\xA8\xC4\xB6\x90\x82\x0A\xB0\xA9\xAC\x42\x03\x0D\x06\x0D\xFD\x39\x64\xED\x0E\x77\x83\xFA\x3B\x85\x5F\x2A\x30\x1F\x83\x0D\x15\x98\x01\xB9\xF3\xC3\xDB\xC7\xB3\xFD\xF3\x1F\x32\x40\x25\xC3\xF5\x75\xB1\x0B\x72\xE1\x9D\x43\xD2\x08\xDF\x2B\xD7\x3F\x32\xA7\xFF\xD0\x70\xCD\x4D\x0A\xBD\x05\x74\xE0\xD1\x51\x7E\xAF\xF9\xCD\x10\x5F\xC0\xB2\x0D\xB2\x40\xA2\x40\x1E\xA0\xFC\x0F\x0A\x7D\xBC\x96\x77\x94\x3A\x95\x99\x3B\x81\xAD\x34\xB4\x29\x41\x7F\xE4\x48\x96\xEA\xE8\x00\x89\x6F\x8D\x2E\x93\x73\xB8\x16\x52\xCA\x42\x9C\x67\x99\xF8\x5B\x21\x0C\x80\x58\xA0\x02\x2B\xF1\x78\xC8\xAD\x08\x45\x42\x3A\xF9\xA2\xAB\x49\x12\x7C\xE1\x63\x33\xCF\x2F\xB5\x42\x58\xB0\x14\xED\x1E\x63\x4F\xB1\xE9\x42\x62\x51\xD2\xE7\x32\xF0\x54\x7C\x24\x37\xBC\x00\x09\x87\xFA\x38\x9C\xD9\xF8\x4D\x10\x69\x20\x8F\xC9\xDE\xF1\x52\x47\x49\x2C\x1C\x33\x1C\x36\xC6\xB3\x9B\xE7\xC2\xC0\x76\xA9\xEC\x79\xA6\xA1\x1E\xEE\xAD\xC3\xEF\x84\x36\xB2\x1F\x40\xB3\x82\x6B\xA3\x1F\x29\x87\x9B\x77\x8C\x93\xF3\xBE\x9D\x8E\xD4\x55\xD5\xE1\x5B\xF6\xD0\xE8\xBB\x14\x5E\xA8\xDD\x75\x36\xCD\x62\xA0\x34\xC6\x03\xB2\x68\xC5\x84\x1A\x2F\x05\x44\xDC\x90\xFF\x14\x48\xD0\xF6\x60\xD4\x86\x1B\x84\x2F\x58\x2D\x39\x41\xCD\xF5\x3A\x56\xEB\x33\xF6\x9B\x9C\x1F\x6D\xDE\x98\x9E\xA7\x9C\x42\x07\x1A\x2B\x73\x20\x9A\xDA\x11\xB0\xF2\x7B\x2B\x66\x8F\xF4\x97\xAE\x08\xF5\xAA\x54\xC6\xA9\xC8\xE9\x52\xFA\x18\x2C\x17\x7A\x56\x8E\x95\x4E\x38\x91\x27\x3B\xFC\x03\x78\x94\x8E\x5C\x5D\x00\x78\x27\x62\xF1\x89\xB5\x17\xF4\x1A\x2E\xA0\xAE\x13\x4B\xC7\x85\xC5\x1F\x10\x87\xB7\x6A\x53\x26\x30\xA1\xCF\xF2\x29\x27\xFA\xA8\xF9\xAE\xE8\xFA\xE2\xE0\x5D\xA3\x5E\x19\x79\xFE\x23\xBC\xBC\x8E\xFE\x08\xF3\xDD\x35\x0F\x96\xFB\x91\x91\xF9\x9E\xFA\x96\x83\x24\x3D\x7D\xF1\xA2\x23\xB6\x43\x22\xAB\x65\x41\xC1\x52\x40\x08\xC0\x0E\x14\x6F\xF4\x3F\x1B\xDB\xC0\xA9\x67\x9B\x8F\x64\x6B\xED\x3D\x4A\xEF\xB0\x43\x84\x61\x65\xF8\xD2\xAD\xAD\x9E\x06\x5D\x4A\x33\xBE\xAA\x48\x6B\x63\x00\x51\x8F\xC8\xF5\xCA\x18\x79\x9A\x37\x5F\x7D\x2A\x56\xFE\x29\x37\x17\xB2\xAF\xB1\x82\x93\x47\xD6\xE6\x8A\x77\x4E\x4E\x78\xE9\xB2\x26\x9E\xC0\x4D\xAA\x10\x61\x0C\x6D\x32\x0E\x7D\x36\x53\x13\x92\x66\xE2\xE9\x90\x93\xA5\x56\x48\x2C\x93\xF6\xE6\xEC\xE8\xD5\x87\xAE\xC9\x96\x9D\xEE\x48\x9C\x81\x8A\x37\x50\x14\x7B\x73\xC9\x7D\xC4\xE9\x7D\x3C\x17\x42\x8A\x57\xB4\x8E\x0A\xD8\x3E\xA0\xE6\xC0\xAA\xCA\x14\x41\x66\x7C\xAD\x32\xE3\x9A\x12\x96\x85\xC4\x95\x90\x89\x04\xC3\xB2\x4C\x19\x37\xCC\x76\xA4\xBD\x33\x1D\xF0\x26\x4D\xDA\xB8\xF4\xBC\x01\xCA\xD5\x5F\xF1\x19\xD7\x94\x09\x60\x61\xCE\xA9\xAA\xF5\x72\xED\xA3\x1D\xB9\xD7\x85\xD4\xE4\x31\xD3\xA9\xD0\x01\xA4\xBE\x79\xC3\xF6\xB1\xA8\x55\x6D\x82\x60\x73\x4B\x0D\x4E\x0B\x01\x62\xED\xF3\x70\x2C\xAC\x2A\x97\x69\x35\x0A\x3F\x80\xE6\x83\x82\x5D\xB7\x8F\x97\xCC\xF9\x66\xB6\xBD\xE9\xE1\x0E\x20\x11\x8F\xCE\xCF\x56\xCF\x5A\xF2\xAC\xCB\x13\x3E\x10\x7F\x05\x99\x6F\x94\x59\xEE\xAD\x9C\x4F\x1F\x84\x0E\xD6\x5F\x7E\xFB\xA7\xCA\x01\x1D\x18\x05\x10\x70\x10\xB5\x6E\xB4\x1F\x2A\x90\x5C\x13\xEC\xC6\x3F\x6C\x6A\xCF\x5A\x86\x23\xB1\xBD\xAC\x2C\x5B\xD9\x84\xBC\x6F\xE2\x54\x29\xF0\x3E\xE4\x1D\xC7\xCB\xA0\x22\x51\xBA\x0B\x02\xD3\xFA\xF0\x49\xB5\xF5\x52\xF8\x52\xCC\xBC\x48\xA2\x9D\xC6\xD2\x09\x81\x4D\xA1\x16\x30\x6C\xBD\x7F\x8B\xC2\x12\x21\xEB\x36\xD1\xF3\xEE\x49\x89\xAD\xD2\x63\xA4\x00\xF4\x19\x89\x4F\xAA\xD8\x2F\x32\xB6\xC6\x43\xE1\x9F\x91\x06\x69\x95\xE9\x01\xA1\xB0\xF5\xA9\x1F\x86\xE3\xA8\xF8\xD1\x59\xB6\x0E\xDC\x1B\x97\xB0\xDC\x3D\x61\x5C\x0E\xBE\xC5\xB3\x57\xC0\xAD\xCB\x4A\x97\xB0\x94\x05\xD2\x75\xDC\xAA\x2A\x1E\x53\x2F\x20\x14\x13\x0B\x73\x33\xE5\xD0\x4A\x0F\x14\xDA\xBC\x84\xCC\x7F\x81\xAA\xF5\xDC\xBF\xCC\xF2\xBE\x0D\xC9\xD1\xB9\x19\x09\x17\xE4\xF8\xD2\x1E\x4B\x20\xAD\x88\xD6\x63\x3B\x00\x51\x80\x7C\xB1\x2C\xC6\xC7\x28\xF3\x20\x0B\x8A\x49\x7E\xB1\xFD\x18\x8B\xCA\x9E\xCD\x00\xD0\xDA\x17\x1C\xAB\xDE\x09\x4F\x94\x2E\xE6\x54\xB2\xFA\x54\xCB\x26\xB4\xD3\xD3\x84\x4A\xC9\x1E\x8A\xA5\x26\xC9\xBD\x94\xCB\x40\xC2\xFF\x70\x2C\x6B\xE1\x56\xF6\x60\x28\x0E\xE0\xBE\x6D\xEE\x3F\x4F\x2F\x04\x82\xDA\x28\xCD\x47\xF0\xCF\xC5\x9A\xBC\x89\xC1\x97\xB8\xCA\x8C\x11\xB1\xF4\x7A\x0C\x48\xD7\x40\x0A\x2F\xA5\xE1\x72\x46\x4E\xAD\x4A\xA6\x30\x94\xBE\x32\x06\xFD\x1E\x18\xC7\x7C\x93\x45\xA4\x46\xA6\x78\x09\xD2\x0A\x76\x2E\x2A\x5B\x63\x37\x74\xD1\x01\xC6\xE9\x6A\x4C\xCF\xF2\x22\x70\x14\x0E\x2A\xDD\xDA\xE2\x79\x83\xA5\x27\x2C\x5C\x8A\x62\x03\x88\x8B\xC6\x39\xBA\x09\xDF\xEB\xD1\x5B\x66\xC4\xE6\xCD\x3C\x56\xD6\xE1\xEB\x8D\x81\x45\x9E\x77\xC5\x87\x3B\xD2\x6A\xB8\x40\x27\xF5\x23\xB0\xD6\x8E\x8A\x13\x80\xF6\x29\x47\xE5\xE7\x0E\xF2\x7C\x5B\x99\x43\xEE\x30\x5B\x4B\x1B\x94\x60\xC6\x55\x47\xF9\x5C\x70\xE2\x76\xAE\xCF\x5C\xE0\x46\x04\xAF\x26\x83\x90\x92\xDF\x16\xF5\xE7\x6E\x25\x3B\xD1\x1A\x4B\xD1\xA6\xA0\x2F\xB9\xA2\x8F\x7A\x27\x02\x98\xAB\x9C\xC3\x56\xC5\xAF\x7D\xEB\x48\xD5\xA9\x8A\x2D\x25\xCA\xF3\x9A\x6A\x5A\x5A\x23\x2F\xE9\x57\xF3\xDD\x08\xA3\x6B\x53\x26\xF3\x78\xE8\x92\x15\xA9\xD8\xDA\xF6\x34\x4B\xC2\x6D\xFB\x54\x0C\x0E\x2F\x0F\x95\x49\x72\x9F\x8B\x08\x99\x87\xDF\xEE\x39\xE7\xC0\xE3\x83\x44\x0E\xB0\xB2\xEC\x23\xC6\x27\x3F\x63\xCC\x1F\xE0\xE8\xD1\xF5\xF8\xC7\x92\x26\x61\xA7\x44\x49\x83\x86\x04\xED\xFC\xDF\xB4\x52\x5A\xE1\xCB\x77\xDB\x44\x1E\xA4\x25\xD7\x56\x0A\x0F\x3C\xF3\xD3\x4E\x60\xDC\x20\x89\xFC\xCB\x69\xA2\x19\xE4\x76\x73\xC1\xC7\x2F\x14\xA0\x21\x8B\x58\xEA\xE7\xBA\x9C\x1B\xE8\xBA\x55\x19\xD7\x91\x00\x49\xB3\x5E\x50\x54\x39\x4B\xED\xBC\xBC\x77\xE4\x47\x68\x11\xA5\x2F\x98\xF9\x70\x99\xEA\x17\x4F\xEF\xB6\xCB\x83\xD2\x3B\xD0\x63\xC6\x35\x75\xEA\x00\x3B\xD4\xA1\xA0\x71\x7A\x8A\xE6\xAC\xDA\x86\x9F\xCB\x52\x6D\x95\xE7\x9A\xEE\x60\x22\xC4\xE4\x13\x1D\x0A\x42\xC4\x8F\x85\x52\x8A\x88\xF0\xA8\xE6\x91\xF8\x6F\xAD\xE9\xF2\xD2\xCA\x6B\x58\xFB\x68\xD5\x27\x4E\xD7\x27\x5A\x57\xBB\x54\xA1\x3C\x7B\xCE\x0B\x5F\x83\xCD\xC6\xF4\xE2\x55\x1D\x48\xE9\xC6\xCE\x20\xA0\xCC\xC4\x72\x79\x25\xE5\x74\xC4\x0D\x24\x8E\xE3\x81\x42\x22\x1D\xA0\xF9\xCC\x65\x7C\x10\xFB\x78\x05\x8B\xA5\x7D\xA8\xE7\x3A\x95\x5A\xED\x7E\x64\x69\xBC\x0D\x48\xE6\x57\x6C\x9F\x70\x78\xA6\x74\x79\xB0\x23\x69\x7C\x0F\x8C\xDA\x3D\xF1\x3F\xE5\x0C\x84\x54\x7C\x9B\x27\x3A\xB1\x36\x05\x43\x3D\x13\x6D\xB1\x20\x35\x94\xDF\xB3\x5E\xF5\x55\x84\xD5\xA9\x11\xC1\xFC\xDF\xE6\x29\xE0\xB7\x27\x58\x5F\x3A\x6F\x53\x35\x58\x8B\x78\x2A\x1E\xEB\x7B\x60\xAB\x7B\xC9\x22\xAF\xC6\xC8\x7E\x99\x0D\x25\xCE\x2B\xE3\x96\xC7\xDF\x4B\x68\x35\x2F\xB8\xCB\x41\xF9\xD7\xE7\x38\x3A\xDF\xB1\x81\x8C\x53\x0A\x9F\xFD\xEE\xB0\xE3\xF6\xB6\x00\x31\x35\x5C\x93\x7B\x27\x81\x66\x28\xA7\xDF\xCC\x92\x5F\x9C\x48\xB0\x4D\x28\x6F\x2E\xA2\x90\x67\x8F\x15\xC2\x37\xBC\x9C\x78\xF2\x64\xBE\x0E\x48\xF9\xD1\xB5\x86\x54\xC4\x79\xD2\xB3\x6B\x64\x60\xF4\x90\xB1\xEC\x9D\x0F\x6D\x3B\x5C\x86\x3A\x63\x88\xB1\xF5\x00\x27\x3B\x72\x2F\x8E\xCA\x78\xE8\x00\xB1\x08\x62\xB2\x87\x79\xC0\x58\x91\x89\x0D\x96\xF3\x87\x3E\x00\x61\xE3\xDA\xF8\xBF\x31\x89\x9F\xFC\xCE\x50\xB8\x0A\xB1\xE5\x97\x3C\x1A\x64\x27\xE9\x77\xF1\xB2\x2C\xEC\x3F\xB2\x25\x18\xB3\xC1\x42\x44\x59\x3A\x49\x6E\x9D\xA7\xB3\x9C\x93\x2A\xB6\xA9\x71\xFD\x7C\x6B\x26\xA5\x92\x07\xB1\x7E\x2C\x57\xB4\x07\x19\xBC\xF8\xB4\x30\x05\x87\xB9\xE9\x6E\xC0\x65\x40\xD5\x10\xDD\xCB\x3A\xB5\x89\xDA\xCA\x98\xCF\xE7\xEE\x6F\xAC\x33\x12\x6F\xB4\x46\x48\x08\xE2\xFC\x5B\x0B\x92\xB5\x48\x76\xB9\x1C\x91\x56\xFD\x9F\x76\xFC\x82\x28\x11\x77\x23\xFE\x27\xA1\x5E\x94\xCB\x9E\x91\x2B\xEF\x33\xD7\xE9\x2A\x31\xBF\x55\x1A\xF9\xB0\xE0\xE6\x2E\xB7\x15\xA1\x63\x1C\x0A\x8C\x27\xAF\xBD\x5E\x50\x49\xD4\xB0\x53\x93\xDE\x74\x79\xE8\x0B\xAD\x47\x4D\x0D\xDE\xF6\x1E\x13\xCF\xAA\x9E\x9F\x30\x50\xA6\x91\xCB\x70\x4B\xAB\xD0\xFF\x45\x98\x91\x18\x5D\x4A\xAA\x5D\xCE\x41\xA7\x9C\x2A\x83\xAA\xD4\x1F\x29\x38\x43\x1E\xB6\x8F\xF5\x4D\xDB\x9E\xDF\xF5\x52\x15\x75\x3D\x43\x0C\xF0\x2F\xBD\x3D\x7F\x84\x9A\x8C\xCA\xDC\xE3\x27\xC4\xC8\x9D\x62\xAA\x92\x63\x6E\x38\x56\x74\x34\x4A\xB7\x92\x8F\x9C\xB1\x1B\xF4\xC6\xC7\xD1\xFF\x29\x7D\x64\xDB\x54\x38\x21\xAD\xF7\x72\x71\x19\x96\xC0\x2F\x93\x01\x95\xC2\xF4\x2B\x10\x6B\x2F\x6E\xC3\xD7\x2B\x83\x9E\xE0\xBA\x0F\x7C\x44\x96\x34\x20\xC5\xB9\x61\x4B\x47\xD2\x77\x61\x59\xE6\x0E\x69\x0A\x59\x75\x40\xDA\x5F\x57\x03\xB7\x82\xE0\xF5\x41\x52\xAA\x94\xE7\x1E\xD3\x1D\xEB\x7E\xF2\xEE\x53\xE4\x62\x21\xE7\xE5\xD4\x9E\x97\x75\x44\x81\x6A\xA5\x61\x9B\x58\xAA\xE6\x38\x06\x07\x6C\xA5\x67\x3E\xAF\x36\x97\x82\x00\x31\xD6\xB6\x3A\x2B\x2E\xB8\x02\x8C\x50\x4F\x56\x2A\x46\x52\x60\x58\x14\x02\xB7\x97\x36\x15\x23\x90\xCB\x5B\xEE\x5B\x9C\xC7\x0A\x79\x8F\xC4\xE4\xDA\x20\x93\x65\xF6\x6E\x00\x3A\xE2\x12\x00\x55\x32\x1B\x34\xF8\x91\xE2\xD1\x02\xB7\x12\x35\x00\xD2\xC9\xAB\xD0\xBD\x45\x48\x3F\xE4\x4B\x47\xAE\x5B\x53\xC8\x0B\xA9\xC8\x53\x4A\xB9\x15\x0C\x8C\x64\x69\x6A\xE4\xA6\x7F\x5D\xA3\xD1\xD8\x79\xC2\xEB\x3E\x87\xC9\x4A\x87\x53\x2C\xD1\xEC\x0A\x06\x17\xF7\x04\x2B\xA4\xF7\x79\xA1\x7E\xE0\xC4\xF8\x40\x79\x27\xF1\x3E\xC6\x0C\x97\x8C\x7B\x3F\xE2\x8B\xDE\x5E\xA3\x01\x2A\x98\x34\x6C\x02\x30\xB1\xA9\x4E\xC4\xBC\xF5\xD0\x6C\x4B\x67\x10\x1D\x1F\x86\x1D\x7F\x8A\xA3\x4F\x40\x87\xD9\x6E\x39\x09\x63\x7F\x26\x9C\x25\xC0\x3C\x6B\xB4\xF9\xFA\xDF\x7B\x2A\xDF\xB4\x53\x4F\xBE\x02\xC1\x6D\x2E\xE8\xE0\x41\xAD\xCD\xBF\x7B\x31\x27\xE0\x13\x0D\x26\x92\x2F\xEE\x67\x5E\xC2\x18\xDA\x09\xBB\x46\x51\x50\x53\x37\x61\x8A\x4E\x49\x29\x2E\xE4\xC4\x5E\x67\x0C\x17\xE2\xC5\x2D\x6B\x8B\xCE\x24\x92\xDD\x7F\x7D\xC9\x4A\x18\x22\xA5\x97\x96\x26\x77\x4E\xD0\xAE\xFD\xFC\x77\x08\x5E\x86\xB2\x0A\x22\xD1\x51\xAD\xB3\x61\xEF\x9F\x50\xCA\x93\xFB\xF5\x79\xFD\xF1\x88\xE1\x47\x9B\xA6\x68\xBB\xFA\xEC\x2E\xF6\xE4\x36\xFA\x66\x3F\x8F\x96\xFE\xF3\x94\xD4\x12\xF1\xB2\x16\x1F\xB0\xFD\xB3\x0B\x46\x0C\x12\xFE\xBC\x7B\x51\x4F\x12\x07\x6E\x58\x80\xF3\x1B\xDC\x1A\x94\xCB\x8B\xAA\xB0\xF4\x94\x7B\xF0\x1F\x0B\x3C\x82\x32\xD7\x6D\x3A\x0F\x3B\xF8\xA3\x53\x06\x34\xB9\x11\x89\x97\x50\x3E\x2B\x9B\x0D\x26\x48\xEA\x4B\xCB\x2A\x0F\xDB\x2D\xEB\x27\xDF\x8A\x2A\xE8\x3A\x48\xFB\x47\x83\x65\x38\x42\xAD\x8C\xB6\x19\xFD\x4D\x3C\x16\x9E\x67\x32\x2B\xAA\x81\x35\x7C\xF5\xE6\xDE\xFA\x7E\xA3\x37\x81\x2E\x11\xFC\xF0\x02\x50\xDE\xF6\x3F\x7B\xB2\xA7\xE7\x9A\x09\xDD\x21\xA8\xED\xA9\x91\xBD\xC3\xC5\x0F\x2B\xCA\xBC\xC4\xDF\xFB\xEF\x09\x42\xC3\x08\x52\xD1\x63\x1D\x5E\xCC\xDE\xD3\x14\x68\xB6\x59\x14\xEE\xB2\x82\xDA\xD1\x08\xD4\x2C\xFF\x1D\x1A\xDD\xCD\x69\x3B\x3A\x9C\x97\xD0\x0B\x88\x5C\x63\x7B\xB1\x3C\xFE\x2D\x83\x6D\x32\x18\x86\xE5\x28\xF6\x6C\x26\xE7\x8F\xAD\x1E\x4D\xCA\xEB\x7D\x0E\xDB\x96\xC3\xFB\xAE\x76\x96\x2A\x9B\xE4\xE3\x0F\xBF\x7D\x25\xD6\xE4\xC7\xDC\x97\x57\xEE\xB8\xD1\x8D\x0D\x53\x06\xB9\x1C\x09\xD4\x1A\x31\x04\x72\x6F\x95\xEE\x23\xB4\xAF\x15\x22\xEF\xFB\x7E\xE8\xB0\x90\x88\x7E\xAA\x04\xB3\x8E\xB2\x09\x68\xCB\x97\x37\x13\x42\xDF\x33\x3B\x0B\x66\xE6\xF3\x78\xDE\x5F\xD8\x1A\xD2\x93\xCB\x94\x9E\x71\xD5\xFF\xB8\xA7\xCD\xD4\x78\xA5\xD8\x12\x73\xF2\x3E\x59\xEA\x13\xE7\xDD\x00\x2C\xB5\x56\xEB\x73\xF4\x29\x03\x15\xEC\xAF\x7A\xCA\x1D\x44\x44\xDA\x61\x2B\xC5\xCD\x90\x91\xF6\xCD\x09\xCE\xF5\xBA\xAF\x69\x96\x37\x88\x87\xC6\x6D\xD0\x05\x61\x14\x6F\x3E\x68\x0D\x22\xD3\xDC\xAD\x7A\x90\xBD\xAA\x6F\x2A\x03\x47\xBC\xA9\xBD\xFB\x36\xA1\xE2\x9B\x0F\x39\x01\xCD\x84\x5B\xE1\x22\x49\x19\x87\xA8\x52\x48\x9A\x85\x62\x8A\x62\x24\xE1\xC4\x2D\x54\x1B\xC4\x59\x38\x5F\xC2\x58\x2B\x96\xA0\x5E\x20\x28\x31\xA2\x9A\xF1\x3D\xDC\x35\xBA\x69\xEA\x9C\x61\x58\x68\x1B\xBC\x40\x25\x16\x78\x62\x47\xF9\x37\xD7\xFE\xD1\xDD\xF6\x77\x28\xBD\x14\x00\xFD\x86\xFC\xA1\x8F\x32\x3E\xE0\x89\xA3\x9D\x23\x3E\x91\xC6\xAF\x9D\x92\x05\x2B\xA6\x51\xAB\xE7\xB8\x26\x24\xCD\xAA\xF4\x8F\x09\xB3\x91\x2E\xB1\xAE\xDB\x3F\x40\xC2\x18\x09\xD0\x7E\xB9\x10\x5D\xBB\xB0\x5E\x14\x0D\xA0\xD0\xBF\xB9\x72\x7A\xD6\x8D\xE6\xB2\x40\xF0\x0A\xD2\xB4\x1E\x59\x81\x82\x36\x23\xF9\xDE\x7B\x7A\x65\xB2\xD2\x38\xFE\x69\x25\xAD\xCC\x07\xDD\x1A\xEB\xB4\xFD\xA6\x0B\x57\x0D\x86\x99\xD4\x56\x78\x98\xB9\x4B\x0F\xE7\x09\x73\x3D\xF2\x88\x1A\x6F\x4C\x3F\x05\x00\xC7\x4D\xB4\x7C\x26\xD5\xB3\xF5\x74\xAE\xFE\x52\x1B\xF6\x51\x83\x93\xFB\xE4\x62\xC3\xAB\x88\x8D\x30\x74\x43\x8B\x6D\xAA\x2E\xFA\x4E\x24\xB2\xB0\xC7\xC9\xA0\xEB\x9E\xD1\xFE\x5E\x95\xC0\x87\x90\xF2\x43\xB4\xD3\x8C\x4F\x2B\x79\xC7\x70\x52\xEC\x86\x4A\x7A\x46\xE1\xC2\x18\x29\x76\xBB\xE8\xBF\x87\xE0\x41\xCA\x83\xEE\x2A\x2D\xB5\xBA\xA1\x3A\x17\x4C\x07\x9E\xB5\xE3\xC0\xB2\x7F\x09\x6F\x95\x49\x10\x5C\x0C\xA1\x7E\xF9\x10\x3F\xEA\x59\x65\x33\xBD\xD8\xF6\x59\xD4\x3A\xB8\xB7\x9C");

            // Check if the coupon is for specific categories
            if ($applyType == Coupon::CATEGORIES) {
                global $categories, $cartItems, $categoryItems;
                zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x25\x9E\x5A\x10\xF8\x53\x8A\xAA\x31\x2B\x78\xA5\xB3\xD8\x74\x22\x2A\x0B\x84\x7A\x52\xAF\x95\xFF\xDA\xED\xF9\x63\xF7\x08\xF4\x27\xAE\x4E\x78\xE6\xD7\xE4\x73\xB2\xDE\xDC\xA9\x8F\x45\xEC\xDE\x29\x7F\xD4\xD0\xD1\xF1\x3E\x0B\x94\x77\xBB\xB5\x36\x6E\x16\x34\x5D\x91\xFC\x05\x18\x35\xA8\x74\x60\xB7\x1D\x3A\x10\x04\xA1\x35\x66\xC2\x47\x86\x75\x65\x05\x21\x96\x57\x71\xD6\xB7\x4D\x8A\xE3\x9B\x48\xEE\xFD\x81\xFE\x4D\x8A\xE3\x7D\x10\xC6\x71\x0D\x44\x43\x67\xBF\xFB\x6F\xB4\x14\x25\x18\xB9\xE4\x96\xFB\x9B\x67\xE5\x6E\x21\x39\xC3\xC9\x21\x90\xA9\xFF\xF1\x9F\xD8\xCA\x4F\xF8\xB9\x9F\x74\x12\x10\x1C\x69\xB7\x35\x6D\xFE\x19\x3E\x98\xFA\x25\x85\x14\x79\x7B\x59\x90\x09\x3A\x9D\x1C\xC1\xAB\x9A\x8F\xC1\xF5\xA6\xAA\x0C\x6A\x40\x33\x99\xAC\x63\xEB\x43\x20\xE5\x8E\x47\x96\x56\xE9\x2B\xCB\x22\x08\xF5\x91\xFD\x79\xC0\x53\x4D\xF8\x51\x7C\xE9\xCA\x7B\x54\xAF\xB0\x8B\x10\x57\xC4\xF3\x5D\xE2\x0C\xFB\x34\x47\xF0\xB9\x0F\x13\x23\xE0\xC2\x53\x83\x25\xBB\xAD\x1D\x91\xAD\x35\xB4\x55\x3F\x30\xD0\x48\x89\xD8\x9F\x55\xBA\x42\xAE\x11\x8A\x65\x9B\x36\x7D\xA3\x2C\xA0\x50\xB0\xB4\x18\x2E\x2E\x87\x11\xE4\x05\x22\xFC\x66\x9F\xE5\x4D\x17\x07\x53\xB7\xAA\xAC\x43\x15\x28\xAC\x20\x3F\xD2\x23\x9A\x44\x52\xBA\x06\xB9\x43\x70\x4B\xE5\xB1\x18\x2D\x62\xCB\xF2\x1D\x90\x05\x68\x2D\x2E\xAC\x37\x62\xCF\xEE\x38\x83\xDB\xBB\x28\x2D\x54\x57\xE3\xBF\xB2\x82\x7A\x77\x73\x50\x1C\x28\x6D\x1C\xC6\xB3\x9B\xE7\xC2\xC0\x76\xA9\xEC\x79\xA6\xA1\x1E\xEE\xAD");

                // Selecting items that exists in the cart and belongs to the coupon categories
                $commonItems = $cartItems->filter(function ($cartItem) use ($categoryItems) {
                    return $categoryItems->contains('id', $cartItem->item_id);
                });
                $commonItems = CartItem::whereIn('item_id', $commonItems->pluck('item_id'))->where('cart_id', $cart->id)->get();

                if ($commonItems->count() > 0) {
                    if ($coupon->type == Coupon::TYPE_AMOUNT) {
                        $discount = $coupon->discount;

                        $totalCommonItems = $commonItems->count();
                        if ($totalCommonItems > 0) {
                            $totalInitialPrice = $commonItems->sum(function ($item) {
                                return ($item->initial_price + $item->initial_variable_price) * $item->count;
                            });

                            $discount = min($discount, $totalInitialPrice);
                            foreach ($commonItems as $commonItem) {
                                if ($commonItem->is_promoted == 0 && $commonItem->coupon_applied == 0) {
                                    $initialPrice = $commonItem->initial_price + $commonItem->initial_variable_price;
                                    $totalItemPrice = $initialPrice * $commonItem->count;
                                    $itemDiscount = $discount * ($totalItemPrice / $totalInitialPrice);

                                    $price = $initialPrice - ($itemDiscount / $commonItem->count);

                                    $commonItem->update([
                                        'price' => $price,
                                        'coupon_applied' => 1
                                    ]);
                                }
                            }
                        }
                    } else {
                        foreach ($commonItems as $commonItem) {
                            if ($commonItem->is_promoted == 0 && $commonItem->coupon_applied == 0) {
                                $price = $commonItem->initial_price;
                                $discount = $price * ($coupon->discount / 100);
                                $price = $price - $discount;
                                if ($commonItem->variable_price !== null) {
                                    $variable_discount = $commonItem->initial_variable_price * ($coupon->discount / 100);
                                    $variable_price = $commonItem->initial_variable_price - $variable_discount;
                                } else {
                                    $variable_price = null;
                                }

                                // Calculate the new price with the variable price
                                $price = $price + $variable_price;

                                // Apply refreshed price to the item in the cart
                                $commonItem->update([
                                    'price' => $price,
                                    //'initial_price' => $price,
                                    'coupon_applied' => 1,
                                    'variable_price' => $variable_price,
                                ]);
                            }
                        }
                    }
                }
            }

            // Check if the coupon is for specific items
            if ($applyType == Coupon::PACKAGES) {
                global $items, $commonItems;
                zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x02\x80\x43\x7A\x25\x9E\x5A\x10\xF8\x59\x9F\xBB\x39\x3F\x37\xEA\xFA\xFC\x77\x72\x4B\x66\xAA\x6E\x47\x9F\xAB\xCC\xFD\xE7\xE0\x60\xC4\x25\xDA\x22\xAE\x4D\x6F\x9D\x9D\xE3\x77\xAE\x96\x83\xF6\xC0\x43\xF1\xCE\x71\x37\xD9\xE0\xCD\xE5\x76\x49\xEB\x3A\xBC\xFD\x6F\x3E\x5D\x39\x1F\xDA\xE5\x0E\x5F\x35\xA8\x6E\x61\xF2\x55\x67\x17\x49\xEA\x31\x75\xC6\x03\xD8\x4B\x7C\x11\x6A\xC6\x25\x26\xD5\xF5\x10\x8F\xF4\xC7\x27\x90\xF5\x88\xE5\x67\xA0\xE3\x7D\x10\xC6\x71\x0D\x44\x43\x67\xBF\xFB\x6B\xF7\x5B\x68\x55\xF2\xE9\xBE\xFD\x8A\x43\xE2\x2B\x71\x6A\xA2\x84\x71\x8D\x94\xE0\xC9\xB7\xDB\xDD\x76\xD7\xAB\xB1\x43\x3A\x16\x0D\x4D\xF9\x6A\x77\xAC\x46\x3B\x95\xB7\x70\x83\x5D\x2C\x6C\x67\x8B\x19\x42\xD8\x58\xC2\xE4\xDB\xD9\xD6\xB9\xEA\xB7\x45\x7D\x04\x69\xC7\xE9\x38\xEA\x43\x05\xEE\xC5\x14\xD7\x05\xE5\x32\xF1\x26\x33\xBB\xD9\xFA\x74\x84\x19\x4F\xF0\x56\x79\xFE\x81\x1D\x2B\xEC\xFB\x83\x17\x16\x94\xA3\x11\xBB\x73\xB2\x70\x40\xF9\xB0\x02\x09\x27\xE4\xC2\x1E\xCD\x71\xC3\xF4\x74\xC5\xE8\x78\xE7\x55\x22\x30\xB1\x18\xD9\xA4\xF2\x1A\xFE");

                if ($commonItems->count() > 0) {
                    if ($coupon->type == Coupon::TYPE_AMOUNT) {
                        $discount = $coupon->discount;
                        $totalCommonItems = $commonItems->count();
                        $totalInitialPrice = $commonItems->sum(function ($item) {
                            return ($item->initial_price + $item->initial_variable_price) * $item->count;
                        });

                        // Get the discount for each item
                        $discount = min($coupon->discount, $totalInitialPrice);

                        // Check to avoid divide by 0
                        if ($totalCommonItems > 0) {
                            foreach ($commonItems as $commonItem) {
                                if ($commonItem->is_promoted == 0 && $commonItem->coupon_applied == 0) {
                                    $initialPrice = $commonItem->initial_price + $commonItem->initial_variable_price;
                                    $totalItemPrice = $initialPrice * $commonItem->count;
                                    $itemDiscount = $discount * ($totalItemPrice / $totalInitialPrice);

                                    $price = $initialPrice - ($itemDiscount / $commonItem->count);

                                    $commonItem->update([
                                        'price' => $price,
                                        'coupon_applied' => 1,
                                    ]);
                                }
                            }
                        }
                    } else {
                        foreach ($commonItems as $commonItem) {
                            $commonItem = CartItem::where('item_id', $commonItem->item_id)->where('cart_id', $cart->id)->first();
                            if ($commonItem->is_promoted == 0 && $commonItem->coupon_applied == 0) {
                                $price = $commonItem->initial_price;
                                $discount = $price * ($coupon->discount / 100);
                                $price = $price - $discount;
                                if ($commonItem->variable_price !== null) {
                                    $variable_discount = $commonItem->initial_variable_price * ($coupon->discount / 100);
                                    $variable_price = $commonItem->initial_variable_price - $variable_discount;
                                } else {
                                    $variable_price = null;
                                }

                                // Calculate the new price with the variable price
                                $price = $price + $variable_price;

                                $commonItem->update([
                                    'price' => $price,
                                    'coupon_applied' => 1,
                                    'variable_price' => $variable_price,
                                    //'initial_price' => $price,
                                ]);
                            }
                        }
                    }
                }
            }
        }

        // Handling the proportional discount for discount amount
        $cartItems = CartItem::where('cart_id', $cart->id)->get();
        if ($discount > 0 && $totalInitialPrice > 0 && $cartItems->count() > 0 && $coupon->type == Coupon::TYPE_AMOUNT) {
            foreach ($cartItems as $cartItem) {
                // Expecting new count is updated in $cartItem->count
                if ($cartItem->is_promoted == 0 && $cartItem->coupon_applied == 1) {
                    // Updating price after changing the count
                    $initialPrice = $cartItem->initial_price + $cartItem->initial_variable_price;
                    $totalItemPrice = $initialPrice * $cartItem->count;
                    $itemDiscount = $discount * ($totalItemPrice / $totalInitialPrice); // Proportional discount

                    // Calculate the amount of new price after discount
                    $price = $initialPrice - ($itemDiscount / $cartItem->count);

                    $cartItem->update([
                        'price' => $price,
                    ]);
                }
            }
        }

        global $price, $virtual_price;
        zval_zone(config("app.LICENSE_KEY"),"\x99\xDD\xCE\x8F\x18\x3D\xB8\x12\x62\x06\xC3\x02\x28\x71\xF7\x0E\x55\xB1\x43\xCB\xE3\x74\x0D\x67\xA7\x86\xF0\x68\x66\x72\x47\xB6\x56\x61\x92\xAA\xE4\xF7\xFC\xF0\x7D\x91\x71\xEC\x3A\xBB\x53\x73\x8F\x80\xF7\x7E\xB9\x90\xB9\xB7\x83\x07\xB2\x9B\x25\x3B\xD6\xCD\xD0\xAC\x6F\x0C\xAF\x37\xD5\xB2\x3A\x6E\x12\x77\x12\xC4\xAC\x4A\x56\x38\xB6\x30\x3A\xE9\x58\x61\x11\x04\xE5\x77\x73\xDF\x1D\xD5\x61\x74\x19\x12\x8C\x7D\x6A\xC0\xF5\x0A\xC4\xA4\xDB\x01\xBA\xB3\xC9\xA9\x34\xE5\xEA\x57\x10\xC6\x71\x0D\x44\x43\x67\xBF\xFB\x6F\xB4\x14\x28\x06\xFA\xE2\x83\xA1\xC6\x15\x9B\x01\x6C\x6A\xC3\xD4\x21\xF1\xF9\xAF\x89\xA2\xC5\xC7\x49\xF1\xEA\xFE\x17\x43\x59\x62\x00\xE3\x70\x20\xE4\x03\x69\xD0\xF9\x38\x92\x59\x3F\x7B\x50\xC2\x55\x41\x97\x19\x94\xF3\xF3\xDF\xC7\xF9\xA7\xFE\x40\x27\x09\x73\xD3\xE0\x2F\xEC\x6F\x38\xE5\x80\x1A\x9E\x0A\x8A\x7F\x8E\x6F\x77\xBC\xD5\xFA\x70\xCD\x4D\x0A\xBD\x01\x24\xB2\x98\x12\x3B\xAF\xBB\x96\x10\x53\x87\xB2\x0F\xB6\x65\xAF\x71\x0A\xFD\xA7\x5F\x45\x29\xE2\xD3\x16\xCE\x6A\xED\xB7\x35\x97\xBC\x11\xB3\x10\x6F\x3D\xAF\x5B\x96\xF1\xBC\x4E\xE5\x2D\xE2\x42\xF6\x0C\xCF\x73\x30\xB9\x6B\xD9\x3F\xFC\xF1\x5B\x7A\x26\x80\x58\xA0\x4B\x6D\xF1\x70\xCC\xEE\x49\x17\x16\x37\xE7\xE5\xE2\x46\x00\x03\xBA\x32\x3D\x80\x64\xE5\x1D\x1F\xBD\x51\x93\x47\x33\x0A\xB1\xF4\x5F\x62\x30\x82\xB7\x4E\x9D\x1F\x68\x33\x32\xAC\x39\x6A\xD5\xAF\x6C\x83\xC5\xAB\x14\x21\x10\x5D\xEA\xB2\xFC\xDD\x6F\x66\x2A\x46\x52\x7A\x01\x48\xB9\xE0\xCE\xAA\xD9\xEA\x76\xA9\xEC\x79\xA6\xA1\x1E\xEE\xF0\xE9\xC5\x84\x36\xB2\x1B\x03\xF2\xD0\x3F\x83\x0D\x6C\xC2\xCC\x27\xC3\xDA\xD1\xAB\xCD\xEE\xB9\x0A\x98\xA4\x4C\x8F\xAC\x8B\xFA\x46\x0A\xC1\x89\x30\x7B\xD7\x78\xF7\x78\xD3\x03\xBE\x23\x87\xC7\x46\x7D\x41\x20\xBF\xD4\xF8\x18\x48\xD4\xB5\x21\x86\x8F\x3C\xB0\x66\x1C\x24\x34\x5F\x8A\xB0\x6E\x5A\xB4\x61\x8E\xCF\xC9\x5E\x21\xBD\xD9\xCC\xF3\xF5\x16\x42\x57\x78\x73\x3D\x9A\xBB\x41\xE0\x8E\x12\x30\x6D\x9E\xF9\x88\xBB\x25\xFD\xAC\x49\xEE\xB1\xFD\xF6\x01\xA3\x0A\x64\x4F\x28\x17\xC5\xD3\x5F\x2D\xAA\x27\x01\xF8\x14\x72\x86\xDD\x0D\x53\x49\x6C\x26\x21\xAC\x94\xB8\x51\x90\x1A\x26\xA4\xE7\x47\x0E\x8A\x8C\xC5\x44\x3A\x87\xBA\x74\x04\x6E\x75\xF3\x8A\xFA\x2E\x71\xB3\xFA\xAD\xFB\xA9\xB6\x9D\xA3\x08\xF1\x0C\x5C\x37\xEF\x3F\xEF\xE5\xDC\xE4\x5A\xAE\x9C\x75\x71\xD3\xB6\x9C\x8F\xB0\xD0\xB3\xC2\xCA\x65\x71\x02\xAC\xEE\x2D\xB0\x52\x2A\xA9\x7E\x6F\xA2\x06\x05\x45\xCD\x10\x5D\x21\xBD\x6F\x04\xD3\xDE\x82\x64\x9B\x91\x52\x7A\xFD\x38\x4C\xD5\xE0\x0C\xCD\x32\x3B\xDB\xD2\xA7\xAD\x9A\x4F\x09\x0F\x7E\xF5\xFB\x59\x61\x77\x0D\x4D\x94\xEA\xF1\x9C\x51\x2B\xCE\x62\x1E\x31\x49\x17\xAC\x7D\x5E\x43\xF7\xE2\xE2\x82\xD2\x14\x8B\xEB\xC7\x14\x36\x1A\x2D\xA8\xFE\x45\xDF\x92\x19\xC3\x44\x24\x41\x64\x32\x55\x57\x36\x53\x13\x92\x62\xA6\xA0\xC3\xD0\xEA\x03\x06\x7C\xC5\xA2\xB4\xF5\xF4\xDA\xC3\xD5\xDA\x8B\x81\xFD\x42\xD2\x87\x89\x73\x1D\x11\x71\x6E\xC8\x66\xD1\xA9\x1E\x79\x11\x59\xB7\x42\xBD\xAA\x49\x8F\x3A\xBB\xEE\xCF\x9F\x98\x57\x02\x27\x23\xFF\x4A\x9D\xCF\x53\xDA\xE6\x85\xC7\xC4\xE0\x50\x86\xFF\x41\x07\x74\x83\x23\xEA\xE9\x28\x37\xB9\x60\x4D\xD2\xBC\xB7\xFD\x53\xC3\x96\x21\xB4\x54\x84\x99\x17\x23\x2E\x9B\xAE\xB8\xFD\x73\xE9\xFE\x5C\xFB\x8A\x88\x91\x89\x78\x95\xFD\xAF\x52\xF1\xF3\x79\xDD\xF6\xA1\xA1\x55\x36\xA8\x60\x73\x4B\x0D\x4E\x0B\x01\x62\xED\xB5\x3F\x7E\xED\x3D\x9D\x73\x61\x57\x7A\x8F\xD8\x81\x84\x7D\xA0\x8F\xDA\x82\xF9\x23\xB3\xF4\xBF\xF6\x1A\x33\x09\x99\xCA\xD8\x52\x85\x1F\xA9\x8B\xCB\x17\x7D\x51\x2D\x51\x94\x71\xD3\x10\xA8\xF9\xE3\x1C\x4A\xC9\x15\xFC\x5F\x7E\xFB\xA7\xCA\x01\x1D\x18\x58\x3A\x13\x56\xB5\x66\xB0\x5C\x6B\xC2\x08\x33\xFE\x83\x7A\x65\x22\xCF\x5B\xAD\x26\xA2\xBE\x9E\x33\x5D\xD5\x83\xF9\x72\xE3\x54\x29\xF9\x38\xB9\x37\xC3\x88\xE1\x70\x05\xD3\x5F\x47\x9E\xF7\xEE\x0A\xFE\xF6\x4B\xE5\x48\xE6\xBC\x54\x8D\x81\xDD\xDE\x0E\xC4\x50\xA1\x16\x30\x7E\x97\x24\xA1\xC2\x12\x21\xEB\x36\xD1\xAE\xC4\x49\x89\xAD\xD2\x63\xA4\x00\xF4");

        $clear_price = $price;
        $tax = 0;
        $ip = self::getIp();
        $country = 'ALL';

        if (Tax::where('country', 'ALL')->exists()) {
            $taxes = Tax::where('country', 'ALL')->first();
            if ($price > 0 && ! empty($taxes)) {
                $tax = $price * ($taxes->percent / 100);
                if ($taxes->is_included == 0) {
                    $price = $price + $tax;
                }
            }
        } else if ($ip !== false) {
            try {
                $geoReader = new \GeoIp2\Database\Reader(base_path('GeoLite2-Country.mmdb'));
                $country = $geoReader->country($ip)->country->isoCode;

                $taxes = Tax::where('country', $country)->first();
                if ($price > 0 && ! empty($taxes)) {
                    $tax = $price * ($taxes->percent / 100);
                    if ($taxes->is_included == 0) {
                        $price = $price + $tax;
                    }
                }
            } catch (\GeoIp2\Exception\AddressNotFoundException $e) {
                $country = 'Undefined';
            }
        }

        $this->recalculateGiftcard($cart->user_id);

        $discordSync = 0;
        if ($settings->discord_bot_enabled == 1) {
            $discordSync = $this->discordSync($cart) ? 1 : 0;
        }

        $cart->update([
            'items' => $items,
            'price' => $price,
            'clear_price' => $clear_price,
            'tax' => $tax,
            'virtual_price' => $virtual_price,
            'discord_sync' => $discordSync,
        ]);
    }

    public function getSelectServers(Request $r){
        $cart = self::getCartByUserId($r->user()->id);
        $selectServers = DB::table('cart_items')
            ->join('items', 'cart_items.item_id', '=', 'items.id')
            ->join('item_servers', 'item_servers.item_id', '=', 'items.id')
            ->join('servers', 'item_servers.server_id', '=', 'servers.id')
            ->where(function($query) {
                $query->where('servers.deleted', '=', 0)
                    ->orWhereNull('servers.deleted');
            })
            ->select('items.id AS itemId', 'servers.id AS serverId', 'servers.name AS serverName')
            ->where('servers.deleted', 0)
            ->where('cart_items.cart_id', $cart->id)
            ->where('items.is_server_choice', 1)
            ->where('item_servers.type', ItemServer::TYPE_CMD_SERVER)
            ->groupBy(['itemId', 'serverId', 'serverName'])
            ->get()
            ->groupBy('itemId');
        return $selectServers;
    }

    public function getPromoted(Request $request): array
    {
        // Get promoted items from the database
        $getPromotedItems = DB::table('promoted_items')
            ->join('items', 'promoted_items.item_id', '=', 'items.id')
            ->select(['items.id', 'items.name', 'items.image', 'promoted_items.price'])
            ->get();

        $promotedItems = [];
        foreach ($getPromotedItems as $item) {
            $originalItemPrice = ItemsController::getPrice(Item::find($item->id));
            $originalItem = Item::find($item->id);
            $settings = Setting::find(1);
            $user = $request->user();

            $is_unavailable = false;
            $category = Category::find($originalItem->category_id);
            $categoryItems = Item::query()->where('category_id', $category->id)->orderBy('sorting', 'asc')->get();

            // Handle virtual currency if it is enabled and the item is virtual currency only
            if ($settings->is_virtual_currency == 1 && $originalItem->is_virtual_currency_only == 1 && ! is_null($originalItem->virtual_price)) {
                $virtual_price = $originalItem->virtual_price;
            } else {
                $virtual_price = 0;
            }

            // Handle cumulative category mode
            if ($category->is_cumulative == 1) {
                $cumulativeCategoryItems = collect($categoryItems)->pluck('id')->toArray();

                // Get all payments for belonged category for this user
                $purchasedItems = DB::table('cart_items')
                    ->join('carts', 'carts.id', '=', 'cart_items.cart_id')
                    ->join('payments', 'payments.cart_id', '=', 'carts.id')
                    ->join('items', 'items.id', '=', 'cart_items.item_id')
                    ->select([
                        'cart_items.item_id',
                        'items.price as original_price'
                    ])
                    ->whereIn('cart_items.item_id', $cumulativeCategoryItems)
                    ->whereIn('payments.status', [Payment::PAID, Payment::COMPLETED])
                    ->where('payments.user_id', $user->id)
                    ->get();

                // Find the highest priced item from $purchasedItems array
                $highestPurchasedOriginalPrice = $purchasedItems->max('original_price') ?? 0;
                if ($originalItem->price <= $highestPurchasedOriginalPrice) {
                    $is_unavailable = true;
                }
            }

            $quantityGlobalLimit = null;
            $quantityGlobalCurrentLimit = null;
            $quantityUserLimit = null;
            $quantityUserCurrentLimit = null;

            // Global Quantity Limit Check
            if (!$is_unavailable && $originalItem->quantityGlobalLimit > 0)
            {
                // Query to get the total quantity of the item purchased get cart_items items_id of each successfully paid cart related to paid payment
                $qlQuery = DB::table('payments')
                    ->join('carts', 'carts.id', '=', 'payments.cart_id')
                    ->join('cart_items', 'cart_items.cart_id', '=', 'carts.id')
                    ->select(DB::raw('COALESCE(SUM(cart_items.`count`),0) AS total'))
                    ->where([
                        ['cart_items.item_id', '=', $originalItem->id],
                    ])
                    ->whereIn('payments.status', [Payment::PAID, Payment::COMPLETED]);

                if ($originalItem->quantityGlobalPeriodValue > -1)
                    $qlQuery = $qlQuery->where('payments.updated_at', '>=', DB::raw("DATE_SUB(NOW(), INTERVAL CAST('" . $originalItem->quantityGlobalPeriodValue . "' AS UNSIGNED) MINUTE)"));

                $quantityLimitTotal = $qlQuery->first();
                $quantityLimitTotal = empty($quantityLimitTotal) ? 0 : floatval($quantityLimitTotal->total);

                // Set values for global quantity limits
                $quantityGlobalLimit = $originalItem->quantityGlobalLimit;
                $quantityGlobalCurrentLimit = $quantityLimitTotal;

                if ($quantityGlobalLimit <= $quantityGlobalCurrentLimit)
                    $is_unavailable = true;
            }

            // User Quantity Limit Check
            if (!$is_unavailable && $originalItem->quantityUserLimit > 0){
                $qlQuery = DB::table('payments')
                    ->join('carts', 'carts.id', '=', 'payments.cart_id')
                    ->join('users', 'users.id', '=', 'carts.user_id')
                    ->join('cart_items', 'cart_items.cart_id', '=', 'carts.id')
                    ->select(DB::raw('COALESCE(SUM(cart_items.`count`),0) AS total'))
                    ->where([
                        ['users.id', '=', $user->id],
                        ['cart_items.item_id', '=', $originalItem->id],
                    ])
                    ->whereIn('payments.status', [Payment::PAID, Payment::COMPLETED]);

                if ($originalItem->quantityUserPeriodValue > -1)
                    $qlQuery = $qlQuery->where('payments.updated_at', '>=', DB::raw("DATE_SUB(NOW(), INTERVAL CAST('" . $originalItem->quantityUserPeriodValue . "' AS UNSIGNED) MINUTE)"));

                $quantityLimitTotal = $qlQuery->first();
                $quantityLimitTotal = empty($quantityLimitTotal) ? 0 : floatval($quantityLimitTotal->total);

                // Set values for user quantity limits
                $quantityUserLimit = $originalItem->quantityUserLimit;
                $quantityUserCurrentLimit = $quantityLimitTotal;

                if ($originalItem->quantityUserLimit <= $quantityUserCurrentLimit)
                    $is_unavailable = true;
            }

            // Add promoted item to the array
            $promotedItems[] = [
                'id' => $item->id,
                'name' => $item->name,
                'image' => '/img/items/' . $item->id . '.png',
                'original_price' => $originalItemPrice,
                'price' => $item->price,
                'is_subs' => $originalItem->is_subs,
                'quantityGlobalLimit' => $quantityGlobalLimit ?? null, // Global quantity limit
                'quantityGlobalCurrentLimit' => $quantityGlobalCurrentLimit ?? null, // Current value of global quantity limit
                'quantityUserLimit' => $quantityUserLimit ?? null, // User quantity limit
                'quantityUserCurrentLimit' => $quantityUserCurrentLimit ?? null, // Current value of user quantity limit
                'is_unavailable' => $is_unavailable,
                'is_virtual_currency_only' => $originalItem->is_virtual_currency_only,
                'virtual_price' => $originalItem->virtual_price,
            ];
        }

        return $promotedItems;
    }

    private function wipeCart($cart)
    {
        $cart->update([
            'items' => 0,
            'price' => 0,
            'clear_price' => 0,
            'tax' => 0,
            'virtual_price' => 0,
            'coupon_id' => NULL,
            'gift_id' => NULL,
            'gift_sum' => 0,
        ]);
        CartItem::where('cart_id', $cart->id)->delete();
    }

    public static function getIp()
    {
        foreach (['HTTP_CLIENT_IP', 'HTTP_X_FORWARDED_FOR', 'HTTP_X_FORWARDED', 'HTTP_X_CLUSTER_CLIENT_IP', 'HTTP_FORWARDED_FOR', 'HTTP_FORWARDED', 'REMOTE_ADDR'] as $key) {
            if (array_key_exists($key, $_SERVER) === true) {
                foreach (explode(',', $_SERVER[$key]) as $ip) {
                    $ip = trim($ip);
                    if (filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE) !== false) {
                        return $ip;
                    }
                }
            }
        }

        return false;
    }

    private function discordSync($cart): bool
    {
        $cartItems = CartItem::where('cart_id', $cart->id)->get();

        foreach ($cartItems as $cartItem) {
            $item = Item::find($cartItem->item_id);
            if ($item->discordRole()->exists()) {
                return true;
            }
        }

        return false;
    }
}
